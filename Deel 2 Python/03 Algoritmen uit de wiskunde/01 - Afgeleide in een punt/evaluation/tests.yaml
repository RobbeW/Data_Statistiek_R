- tab: Feedback
  contexts:
  - testcases:
    - statement:
        python: 'def f( x ) : return x**3 - 2'
    - expression: afgeleide( 1, f )
      return: 3.0000057220458984
      stdout: "In iteratie 1 is de benadering: 7.0\nIn iteratie 2 is de benadering:\
        \ 4.75\nIn iteratie 3 is de benadering: 3.8125\nIn iteratie 4 is de benadering:\
        \ 3.390625\nIn iteratie 5 is de benadering: 3.19140625\nIn iteratie 6 is de\
        \ benadering: 3.0947265625\nIn iteratie 7 is de benadering: 3.047119140625\n\
        In iteratie 8 is de benadering: 3.02349853515625\nIn iteratie 9 is de benadering:\
        \ 3.011734008789062\nIn iteratie 10 is de benadering: 3.005863189697266\n\
        In iteratie 11 is de benadering: 3.002930641174316\nIn iteratie 12 is de benadering:\
        \ 3.001465082168579\nIn iteratie 13 is de benadering: 3.000732481479645\n\
        In iteratie 14 is de benadering: 3.000366225838661\nIn iteratie 15 is de benadering:\
        \ 3.00018310919404\nIn iteratie 16 is de benadering: 3.000091553665698\nIn\
        \ iteratie 17 is de benadering: 3.000045776600018\nIn iteratie 18 is de benadering:\
        \ 3.000022888241801\nIn iteratie 19 is de benadering: 3.000011444091797\n\
        In iteratie 20 is de benadering: 3.000005722045898\n"
  - testcases:
    - statement:
        python: 'import math'
    - statement:
        python: 'def f( x ) : return math.sin(x)'
    - expression: afgeleide( 3.141592654, f )
      return: -0.9999999999993933
      stdout: "In iteratie 1 is de benadering: -0.841470984619325\nIn iteratie 2 is\
        \ de benadering: -0.958851077107973\nIn iteratie 3 is de benadering: -0.989615836967082\n\
        In iteratie 4 is de benadering: -0.997397867056217\nIn iteratie 5 is de benadering:\
        \ -0.999349085465268\nIn iteratie 6 is de benadering: -0.999837247524025\n\
        In iteratie 7 is de benadering: -0.999959310389331\nIn iteratie 8 is de benadering:\
        \ -0.9999898275034\nIn iteratie 9 is de benadering: -0.999997456869629\nIn\
        \ iteratie 10 is de benadering: -0.999999364216843\nIn iteratie 11 is de benadering:\
        \ -0.999999841054088\nIn iteratie 12 is de benadering: -0.99999996026347\n\
        In iteratie 13 is de benadering: -0.999999990065843\nIn iteratie 14 is de\
        \ benadering: -0.999999997516448\nIn iteratie 15 is de benadering: -0.999999999379106\n\
        In iteratie 16 is de benadering: -0.999999999844773\nIn iteratie 17 is de\
        \ benadering: -0.999999999961192\nIn iteratie 18 is de benadering: -0.999999999990297\n\
        In iteratie 19 is de benadering: -0.999999999997574\nIn iteratie 20 is de\
        \ benadering: -0.999999999999393\n"
  - testcases:
    - statement:
        python: 'import math'
    - statement:
        python: 'def f( x ) : return (1+x**2+(1-x**2)*math.log10(x))/((1+x**2)**2)'
    - expression: afgeleide( 0.333333333, f )
      return: 1.0679478441597894
      stdout: "In iteratie 1 is de benadering: -0.209066520763498\nIn iteratie 2 is\
        \ de benadering: 0.050529064449308\nIn iteratie 3 is de benadering: 0.414689283462606\n\
        In iteratie 4 is de benadering: 0.697146220796911\nIn iteratie 5 is de benadering:\
        \ 0.869948380318515\nIn iteratie 6 is de benadering: 0.965501212982979\nIn\
        \ iteratie 7 is de benadering: 1.015815900071594\nIn iteratie 8 is de benadering:\
        \ 1.04164996322001\nIn iteratie 9 is de benadering: 1.054742384286584\nIn\
        \ iteratie 10 is de benadering: 1.061333287988703\nIn iteratie 11 is de benadering:\
        \ 1.064640023597917\nIn iteratie 12 is de benadering: 1.066296226459826\n\
        In iteratie 13 is de benadering: 1.067125038439826\nIn iteratie 14 is de benadering:\
        \ 1.067539622291406\nIn iteratie 15 is de benadering: 1.067746958711723\n\
        In iteratie 16 is de benadering: 1.067850638046366\nIn iteratie 17 is de benadering:\
        \ 1.067902480506746\nIn iteratie 18 is de benadering: 1.067928402422694\n\
        In iteratie 19 is de benadering: 1.067941363551654\nIn iteratie 20 is de benadering:\
        \ 1.067947844159789\n"
  - testcases:
    - statement:
        python: 'import math'
    - statement:
        python: 'def f( x ) : return math.sin(x)'
    - expression: afgeleide( 0, f )
      return: 0.9999999999993937
      stdout: "In iteratie 1 is de benadering: 0.841470984807897\nIn iteratie 2 is\
        \ de benadering: 0.958851077208406\nIn iteratie 3 is de benadering: 0.989615837018092\n\
        In iteratie 4 is de benadering: 0.997397867081822\nIn iteratie 5 is de benadering:\
        \ 0.999349085478083\nIn iteratie 6 is de benadering: 0.999837247530435\nIn\
        \ iteratie 7 is de benadering: 0.999959310392536\nIn iteratie 8 is de benadering:\
        \ 0.999989827505002\nIn iteratie 9 is de benadering: 0.99999745687043\nIn\
        \ iteratie 10 is de benadering: 0.999999364217244\nIn iteratie 11 is de benadering:\
        \ 0.999999841054288\nIn iteratie 12 is de benadering: 0.999999960263571\n\
        In iteratie 13 is de benadering: 0.999999990065893\nIn iteratie 14 is de benadering:\
        \ 0.999999997516473\nIn iteratie 15 is de benadering: 0.999999999379118\n\
        In iteratie 16 is de benadering: 0.99999999984478\nIn iteratie 17 is de benadering:\
        \ 0.999999999961195\nIn iteratie 18 is de benadering: 0.999999999990299\n\
        In iteratie 19 is de benadering: 0.999999999997575\nIn iteratie 20 is de benadering:\
        \ 0.999999999999394\n"
  - testcases:
    - statement:
        python: 'import math'
    - statement:
        python: 'def f( x ) : return math.sin(x)'
    - expression: afgeleide( 1.570796327, f )
      return: -9.539071470499039e-07
      stdout: "In iteratie 1 is de benadering: -0.459697694304449\nIn iteratie 2 is\
        \ de benadering: -0.244834876415918\nIn iteratie 3 is de benadering: -0.124350313360394\n\
        In iteratie 4 is de benadering: -0.062418662369938\nIn iteratie 5 is de benadering:\
        \ -0.031239829003384\nIn iteratie 6 is de benadering: -0.015623728680705\n\
        In iteratie 7 is de benadering: -0.007812341260667\nIn iteratie 8 is de benadering:\
        \ -0.003906230336923\nIn iteratie 9 is de benadering: -0.001953122721574\n\
        In iteratie 10 is de benadering: -0.000976562394669\nIn iteratie 11 is de\
        \ benadering: -0.000488281416324\nIn iteratie 12 is de benadering: -0.000244140825316\n\
        In iteratie 13 is de benadering: -0.000122070517136\nIn iteratie 14 is de\
        \ benadering: -6.1035360886e-05\nIn iteratie 15 is de benadering: -3.0517783671e-05\n\
        In iteratie 16 is de benadering: -1.5258992789e-05\nIn iteratie 17 is de benadering:\
        \ -7.629598258e-06\nIn iteratie 18 is de benadering: -3.814900992e-06\nIn\
        \ iteratie 19 is de benadering: -1.90755236e-06\nIn iteratie 20 is de benadering:\
        \ -9.53907147e-07\n"
  - testcases:
    - statement:
        python: 'def f( x ) : return x - 2'
    - expression: afgeleide( 5, f )
      return: 1.0
      stdout: "In iteratie 1 is de benadering: 1.0\nIn iteratie 2 is de benadering:\
        \ 1.0\nIn iteratie 3 is de benadering: 1.0\nIn iteratie 4 is de benadering:\
        \ 1.0\nIn iteratie 5 is de benadering: 1.0\nIn iteratie 6 is de benadering:\
        \ 1.0\nIn iteratie 7 is de benadering: 1.0\nIn iteratie 8 is de benadering:\
        \ 1.0\nIn iteratie 9 is de benadering: 1.0\nIn iteratie 10 is de benadering:\
        \ 1.0\nIn iteratie 11 is de benadering: 1.0\nIn iteratie 12 is de benadering:\
        \ 1.0\nIn iteratie 13 is de benadering: 1.0\nIn iteratie 14 is de benadering:\
        \ 1.0\nIn iteratie 15 is de benadering: 1.0\nIn iteratie 16 is de benadering:\
        \ 1.0\nIn iteratie 17 is de benadering: 1.0\nIn iteratie 18 is de benadering:\
        \ 1.0\nIn iteratie 19 is de benadering: 1.0\nIn iteratie 20 is de benadering:\
        \ 1.0\n"
  - testcases:
    - statement:
        python: 'def f( x ) : return x - 2'
    - expression: afgeleide( -5, f )
      return: 1.0
      stdout: "In iteratie 1 is de benadering: 1.0\nIn iteratie 2 is de benadering:\
        \ 1.0\nIn iteratie 3 is de benadering: 1.0\nIn iteratie 4 is de benadering:\
        \ 1.0\nIn iteratie 5 is de benadering: 1.0\nIn iteratie 6 is de benadering:\
        \ 1.0\nIn iteratie 7 is de benadering: 1.0\nIn iteratie 8 is de benadering:\
        \ 1.0\nIn iteratie 9 is de benadering: 1.0\nIn iteratie 10 is de benadering:\
        \ 1.0\nIn iteratie 11 is de benadering: 1.0\nIn iteratie 12 is de benadering:\
        \ 1.0\nIn iteratie 13 is de benadering: 1.0\nIn iteratie 14 is de benadering:\
        \ 1.0\nIn iteratie 15 is de benadering: 1.0\nIn iteratie 16 is de benadering:\
        \ 1.0\nIn iteratie 17 is de benadering: 1.0\nIn iteratie 18 is de benadering:\
        \ 1.0\nIn iteratie 19 is de benadering: 1.0\nIn iteratie 20 is de benadering:\
        \ 1.0\n"
  - testcases:
    - statement:
        python: 'def f( x ) : return x**3 - 2'
    - expression: afgeleide( 0, f )
      return: 0.0
      stdout: "In iteratie 1 is de benadering: 1.0\nIn iteratie 2 is de benadering:\
        \ 0.25\nIn iteratie 3 is de benadering: 0.0625\nIn iteratie 4 is de benadering:\
        \ 0.015625\nIn iteratie 5 is de benadering: 0.00390625\nIn iteratie 6 is de\
        \ benadering: 0.0009765625\nIn iteratie 7 is de benadering: 0.000244140625\n\
        In iteratie 8 is de benadering: 6.103515625e-05\nIn iteratie 9 is de benadering:\
        \ 1.5258789062e-05\nIn iteratie 10 is de benadering: 3.814697266e-06\nIn iteratie\
        \ 11 is de benadering: 9.53674316e-07\nIn iteratie 12 is de benadering: 2.38418579e-07\n\
        In iteratie 13 is de benadering: 5.9604645e-08\nIn iteratie 14 is de benadering:\
        \ 1.4901161e-08\nIn iteratie 15 is de benadering: 3.72529e-09\nIn iteratie\
        \ 16 is de benadering: 9.31323e-10\nIn iteratie 17 is de benadering: 2.32831e-10\n\
        In iteratie 18 is de benadering: 5.8208e-11\nIn iteratie 19 is de benadering:\
        \ 0.0\nIn iteratie 20 is de benadering: 0.0\n"
  - testcases:
    - statement:
        python: 'def f( x ) : return x**3 - 2'
    - expression: afgeleide( 2, f )
      return: 12.000011444091797
      stdout: "In iteratie 1 is de benadering: 19.0\nIn iteratie 2 is de benadering:\
        \ 15.25\nIn iteratie 3 is de benadering: 13.5625\nIn iteratie 4 is de benadering:\
        \ 12.765625\nIn iteratie 5 is de benadering: 12.37890625\nIn iteratie 6 is\
        \ de benadering: 12.1884765625\nIn iteratie 7 is de benadering: 12.093994140625\n\
        In iteratie 8 is de benadering: 12.04693603515625\nIn iteratie 9 is de benadering:\
        \ 12.023452758789062\nIn iteratie 10 is de benadering: 12.011722564697266\n\
        In iteratie 11 is de benadering: 12.005860328674316\nIn iteratie 12 is de\
        \ benadering: 12.002929925918579\nIn iteratie 13 is de benadering: 12.001464903354645\n\
        In iteratie 14 is de benadering: 12.000732436776161\nIn iteratie 15 is de\
        \ benadering: 12.00036621466279\nIn iteratie 16 is de benadering: 12.000183106400073\n\
        In iteratie 17 is de benadering: 12.000091552967206\nIn iteratie 18 is de\
        \ benadering: 12.000045776367188\nIn iteratie 19 is de benadering: 12.000022888183594\n\
        In iteratie 20 is de benadering: 12.000011444091797\n"
  - testcases:
    - statement:
        python: 'def f( x ) : return (x)**(1/3)'
    - expression: afgeleide( 1, f )
      return: 0.3333331213798374
      stdout: "In iteratie 1 is de benadering: 0.259921049894873\nIn iteratie 2 is\
        \ de benadering: 0.289428485106664\nIn iteratie 3 is de benadering: 0.308869380063768\n\
        In iteratie 4 is de benadering: 0.320335292207616\nIn iteratie 5 is de benadering:\
        \ 0.326620407669392\nIn iteratie 6 is de benadering: 0.329920164977523\nIn\
        \ iteratie 7 is de benadering: 0.331612137424926\nIn iteratie 8 is de benadering:\
        \ 0.332469025868818\nIn iteratie 9 is de benadering: 0.332900245010251\nIn\
        \ iteratie 10 is de benadering: 0.333116554613412\nIn iteratie 11 is de benadering:\
        \ 0.333224885219352\nIn iteratie 12 is de benadering: 0.3332790945733\nIn\
        \ iteratie 13 is de benadering: 0.333306210275623\nIn iteratie 14 is de benadering:\
        \ 0.333319770885282\nIn iteratie 15 is de benadering: 0.33332655187769\nIn\
        \ iteratie 16 is de benadering: 0.333329942550336\nIn iteratie 17 is de benadering:\
        \ 0.333331637928495\nIn iteratie 18 is de benadering: 0.333332485635765\n\
        In iteratie 19 is de benadering: 0.333332909503952\nIn iteratie 20 is de benadering:\
        \ 0.333333121379837\n"
  - testcases:
    - statement:
        python: 'def f( x ) : return (x)**(1/3)'
    - expression: afgeleide( 0, f )
      return: 6501.994708861746
      stdout: "In iteratie 1 is de benadering: 1.0\nIn iteratie 2 is de benadering:\
        \ 1.5874010519682\nIn iteratie 3 is de benadering: 2.519842099789746\nIn iteratie\
        \ 4 is de benadering: 4.0\nIn iteratie 5 is de benadering: 6.349604207872798\n\
        In iteratie 6 is de benadering: 10.079368399158986\nIn iteratie 7 is de benadering:\
        \ 16.0\nIn iteratie 8 is de benadering: 25.398416831491193\nIn iteratie 9\
        \ is de benadering: 40.31747359663594\nIn iteratie 10 is de benadering: 64.00000000000001\n\
        In iteratie 11 is de benadering: 101.59366732596477\nIn iteratie 12 is de\
        \ benadering: 161.2698943865438\nIn iteratie 13 is de benadering: 256.00000000000006\n\
        In iteratie 14 is de benadering: 406.37466930385915\nIn iteratie 15 is de\
        \ benadering: 645.0795775461752\nIn iteratie 16 is de benadering: 1024.0000000000002\n\
        In iteratie 17 is de benadering: 1625.4986772154366\nIn iteratie 18 is de\
        \ benadering: 2580.3183101847007\nIn iteratie 19 is de benadering: 4096.000000000001\n\
        In iteratie 20 is de benadering: 6501.994708861746\n"
  - testcases:
    - statement:
        python: 'def f( x ) : return 5 * (x - 2) * (x - 3) * (x - 4)'
    - expression: afgeleide( 0, f )
      return: 129.99991416931152
      stdout: "In iteratie 1 is de benadering: 90.0\nIn iteratie 2 is de benadering:\
        \ 108.75\nIn iteratie 3 is de benadering: 119.0625\nIn iteratie 4 is de benadering:\
        \ 124.453125\nIn iteratie 5 is de benadering: 127.20703125\nIn iteratie 6\
        \ is de benadering: 128.5986328125\nIn iteratie 7 is de benadering: 129.298095703125\n\
        In iteratie 8 is de benadering: 129.64874267578125\nIn iteratie 9 is de benadering:\
        \ 129.8242950439453\nIn iteratie 10 is de benadering: 129.91212844848633\n\
        In iteratie 11 is de benadering: 129.95605945587158\nIn iteratie 12 is de\
        \ benadering: 129.9780285358429\nIn iteratie 13 is de benadering: 129.98901396989822\n\
        In iteratie 14 is de benadering: 129.9945069104433\nIn iteratie 15 is de benadering:\
        \ 129.9972534365952\nIn iteratie 16 is de benadering: 129.998626713641\nIn\
        \ iteratie 17 is de benadering: 129.9993133554235\nIn iteratie 18 is de benadering:\
        \ 129.9996566772461\nIn iteratie 19 is de benadering: 129.99982833862305\n\
        In iteratie 20 is de benadering: 129.99991416931152\n"
  - testcases:
    - statement:
        python: 'def f( x ) : return -5 / (x**2 + 1) + 2'
    - expression: afgeleide( 0, f )
      return: 9.5367431640625e-06
      stdout: "In iteratie 1 is de benadering: 2.5\nIn iteratie 2 is de benadering:\
        \ 2.0\nIn iteratie 3 is de benadering: 1.176470588235293\nIn iteratie 4 is\
        \ de benadering: 0.615384615384613\nIn iteratie 5 is de benadering: 0.311284046692606\n\
        In iteratie 6 is de benadering: 0.15609756097561\nIn iteratie 7 is de benadering:\
        \ 0.078105931169148\nIn iteratie 8 is de benadering: 0.039060115959728\nIn\
        \ iteratie 9 is de benadering: 0.019530951981324\nIn iteratie 10 is de benadering:\
        \ 0.009765587747097\nIn iteratie 11 is de benadering: 0.004882807843387\n\
        In iteratie 12 is de benadering: 0.002441405667923\nIn iteratie 13 is de benadering:\
        \ 0.00122070305224\nIn iteratie 14 is de benadering: 0.000610351555224\nIn\
        \ iteratie 15 is de benadering: 0.00030517578125\nIn iteratie 16 is de benadering:\
        \ 0.000152587890625\nIn iteratie 17 is de benadering: 7.6293945312e-05\nIn\
        \ iteratie 18 is de benadering: 3.8146972656e-05\nIn iteratie 19 is de benadering:\
        \ 1.9073486328e-05\nIn iteratie 20 is de benadering: 9.536743164e-06\n"
  - testcases:
    - statement:
        python: 'def f( x ) : return -5 / (x**2 + 1) + 2'
    - expression: afgeleide( 0, f )
      return: 9.5367431640625e-06
      stdout: "In iteratie 1 is de benadering: 2.5\nIn iteratie 2 is de benadering:\
        \ 2.0\nIn iteratie 3 is de benadering: 1.176470588235293\nIn iteratie 4 is\
        \ de benadering: 0.615384615384613\nIn iteratie 5 is de benadering: 0.311284046692606\n\
        In iteratie 6 is de benadering: 0.15609756097561\nIn iteratie 7 is de benadering:\
        \ 0.078105931169148\nIn iteratie 8 is de benadering: 0.039060115959728\nIn\
        \ iteratie 9 is de benadering: 0.019530951981324\nIn iteratie 10 is de benadering:\
        \ 0.009765587747097\nIn iteratie 11 is de benadering: 0.004882807843387\n\
        In iteratie 12 is de benadering: 0.002441405667923\nIn iteratie 13 is de benadering:\
        \ 0.00122070305224\nIn iteratie 14 is de benadering: 0.000610351555224\nIn\
        \ iteratie 15 is de benadering: 0.00030517578125\nIn iteratie 16 is de benadering:\
        \ 0.000152587890625\nIn iteratie 17 is de benadering: 7.6293945312e-05\nIn\
        \ iteratie 18 is de benadering: 3.8146972656e-05\nIn iteratie 19 is de benadering:\
        \ 1.9073486328e-05\nIn iteratie 20 is de benadering: 9.536743164e-06\n"
  - testcases:
    - statement:
        python: 'def f( x ) : return -5 / (x**2 + 1) + 2'
    - expression: afgeleide( 0, f )
      return: 9.5367431640625e-06
      stdout: "In iteratie 1 is de benadering: 2.5\nIn iteratie 2 is de benadering:\
        \ 2.0\nIn iteratie 3 is de benadering: 1.176470588235293\nIn iteratie 4 is\
        \ de benadering: 0.615384615384613\nIn iteratie 5 is de benadering: 0.311284046692606\n\
        In iteratie 6 is de benadering: 0.15609756097561\nIn iteratie 7 is de benadering:\
        \ 0.078105931169148\nIn iteratie 8 is de benadering: 0.039060115959728\nIn\
        \ iteratie 9 is de benadering: 0.019530951981324\nIn iteratie 10 is de benadering:\
        \ 0.009765587747097\nIn iteratie 11 is de benadering: 0.004882807843387\n\
        In iteratie 12 is de benadering: 0.002441405667923\nIn iteratie 13 is de benadering:\
        \ 0.00122070305224\nIn iteratie 14 is de benadering: 0.000610351555224\nIn\
        \ iteratie 15 is de benadering: 0.00030517578125\nIn iteratie 16 is de benadering:\
        \ 0.000152587890625\nIn iteratie 17 is de benadering: 7.6293945312e-05\nIn\
        \ iteratie 18 is de benadering: 3.8146972656e-05\nIn iteratie 19 is de benadering:\
        \ 1.9073486328e-05\nIn iteratie 20 is de benadering: 9.536743164e-06\n"
