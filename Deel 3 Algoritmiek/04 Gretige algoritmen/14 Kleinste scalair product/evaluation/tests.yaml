- tab: Feedback
  contexts:
  - testcases:
    - expression: minimaal_scalair_product([1, 3, -5], [-2, 4, 1])
      return: -25
  - testcases:
    - expression: minimaal_scalair_product([18, 2, 14, -3], [16, -5, 11, 10])
      return: 24
  - testcases:
    - expression: minimaal_scalair_product([1, 2, 3, 4, 5], [1, 0, 1, 0, 1])
      return: 6
  - testcases:
    - expression: minimaal_scalair_product([-3, 14, 11, 19, -2, 14], [10, 10, 19,
        13, -4, -1])
      return: 77
  - testcases:
    - expression: minimaal_scalair_product([-1, 2, 4, -4, -1, 14, 13, -1, 0, -2],
        [6, 4, 19, -2, 11, -1, -5, 3, 19, -3])
      return: -254
  - testcases:
    - expression: minimaal_scalair_product([5, 4, 15, 11, 0, 4, 7, 12, 10, 13, -1,
        1, 19, 9, 20, 4, 4], [3, 9, 2, 6, 12, 20, 19, 3, 17, 14, 0, -4, -3, 8, 0,
        18, 0])
      return: 230
  - testcases:
    - expression: minimaal_scalair_product([13, 17, 0, 12, 20, 5, 15, 18, 20, 10,
        8, 12, 0, 12, 17, 13, 0, 17, 3, -5], [19, -2, 6, 1, 7, -4, 2, 13, 20, 14,
        17, 4, 17, 6, 0, 6, 13, 16, 15, 19])
      return: 932
  - testcases:
    - expression: minimaal_scalair_product([6, 0, -1, 14, -2, 8, 12, 7, 10, 8, 14,
        8, -1, 0, 5, 9, 0, 15, 17, 5, -2, 12, 16], [-4, -1, 18, 3, 10, 10, 8, 2, 5,
        12, 20, 19, 20, 9, 11, 4, 15, 7, 8, -3, -5, 2, 8])
      return: 242
  - testcases:
    - expression: minimaal_scalair_product([-5, 1, 1, -1, 13, 6, 8, 20, 12, -4, -1,
        17, 8, 1, 15, -3, -1, 17, 13, 19, 3, 2, 3, 4], [3, -4, -4, 13, 1, 6, 16, 2,
        14, 11, 15, -1, 2, -4, 13, 5, 16, -4, 20, 15, 15, -5, 5, 1])
      return: -452
  - testcases:
    - expression: minimaal_scalair_product([4, -4, 5, 11, 19, 12, 3, 16, 5, -1, 19,
        -1, -4, 1, 0, 14, 17, 20, 9, 16, 10, 11, 2, 10, -4, 20, 17], [-3, 3, 2, 11,
        11, 11, 10, -5, 18, 3, 4, -3, 1, 7, 3, 2, 11, 5, 4, 12, 13, 18, 1, 9, 11,
        16, 11])
      return: 282
  - testcases:
    - expression: minimaal_scalair_product([11, -2, 2, 9, 16, 15, 13, -5, 3, 17, 15,
        9, 17, 3, 4, 17, 8, 13, 20, 8, 5, 12, 6, 5, 18, 1, 0, 5], [4, 0, -4, -3, 12,
        6, 2, 12, 9, -4, 15, 2, 16, 15, 2, 13, 0, 12, 19, 19, 13, -5, 18, 7, 16, 20,
        15, 1])
      return: 598
  - testcases:
    - expression: minimaal_scalair_product([2, 8, -3, -1, 7, 20, -1, 14, 8, 18, -3,
        16, 20, 13, -4, 16, -1, -4, 16, 11, 5, 3, 4, 10, 19, 18, 11, 5, 11, -5, 14,
        10, 17, 12, 4, 2, 4, 9, 8], [11, 14, 14, -4, -5, 7, 12, 12, 10, -2, 3, -4,
        19, 6, -5, 15, -2, 4, -3, 16, 20, 12, 9, 19, 3, 11, 14, -2, 8, -1, 18, 9,
        16, 9, 15, 12, 14, 7, 3])
      return: 413
  - testcases:
    - expression: minimaal_scalair_product([8, 9, 10, 13, 4, 14, -2, -5, 20, 6, -1,
        13, 7, 12, 4, 19, -1, 9, 12, 0, 7, 19, 17, 17, 20, 2, 1, 10, 3, -5, 2, 10,
        -5, -1, 3, 6, -4, -2, -5, 5], [4, 10, 8, 18, 17, 11, 16, 5, 9, -5, 17, -1,
        5, 5, 14, -3, 8, 14, 10, 0, -4, -3, -2, 17, 18, 10, -5, 14, 1, 18, 14, 7,
        6, 7, 1, 17, -2, 15, -3, -1])
      return: -439
  - testcases:
    - expression: minimaal_scalair_product([11, 1, 17, 1, 0, 2, 16, 0, 14, 0, -3,
        7, 16, -3, 9, -3, 8, -2, 4, 1, 19, 7, 2, 15, 1, -3, 5, 11, 7, -3, 6, 6, 2,
        -1, 10, 18, 13, -2, 16, -3, -3, 11, 5], [10, 17, 1, -3, 6, 5, 16, 20, -4,
        7, 3, 20, 14, 8, 18, -1, 18, 17, 5, 11, 15, 8, 9, -2, 17, 20, 11, 10, 20,
        14, 7, 14, 9, 3, 19, -3, 6, 1, 5, 4, 20, 5, 1])
      return: 83
  - testcases:
    - expression: minimaal_scalair_product([9, 5, 15, 9, 19, 17, 3, 10, 12, 10, 10,
        -5, 12, 1, 1, 18, -5, -1, 4, 15, -3, 7, -2, 8, 12, 2, 13, 10, 11, -3, 2, 11,
        5, 0, 13, 10, 12, 13, 13, 15, 4, 14, -2, 0, 5, -3, -4, 16, -3, 6, 19, 10,
        20], [14, 7, -3, 12, 16, 11, 0, -3, 2, 7, -4, 1, 5, 9, 8, 5, 7, 9, 7, 13,
        1, -5, 5, 7, 10, 20, -4, 0, 19, 3, 6, -1, -5, 20, 18, 3, 1, 8, 9, 13, -2,
        1, 16, -1, 18, -2, 7, -2, 6, -3, 13, -5, 5])
      return: -388
  - testcases:
    - expression: minimaal_scalair_product([17, 13, 16, 20, 3, 16, 11, 19, 9, 12,
        15, 0, 13, -4, 5, 16, 13, 17, 7, 13, 5, -1, 7, -2, 14, 3, 18, 20, 7, -3, 18,
        -1, 15, -4, -2, -3, 9, -5, -5, 18, 12, 3, 17, 6, 11, -4, 14, 5, -3, 9, 0,
        14, 2, -5, -1], [8, 1, 1, -3, 17, 13, 17, 1, 5, 7, 12, 10, 8, 20, -4, 4, 17,
        4, 8, 7, 8, 10, 2, 15, 17, 13, 14, 6, 2, 20, 11, 3, 5, 16, 18, 3, 1, 14, -5,
        4, 17, -1, 0, 10, 0, -1, 4, 20, 11, 8, 9, -5, 14, 19, 6])
      return: 324
  - testcases:
    - expression: minimaal_scalair_product([12, -1, 15, 18, 18, 9, 5, 16, 10, 8, 2,
        10, 19, 18, -3, -2, 10, 7, 17, -1, 8, -5, 14, 13, -2, -3, -5, 17, -1, 3, 0,
        15, 11, 2, 19, 3, 17, 10, 9, 19, 7, -2, 11, 20, 1, 20, 6, 17, -1, 1, 0, 3,
        -4, 10, 7, 0, 13, -5, 17, -5, 12, 0, -3, 10, 20, 1], [8, 2, 19, 4, 15, -4,
        17, -5, -3, 1, 1, 12, 15, 17, 3, 3, 6, -2, 16, 9, -2, 6, -4, 13, 13, -3, 17,
        0, -4, 14, -3, -3, 6, 6, -1, -1, 3, 10, 8, 19, 2, 10, 16, -5, -4, 13, 17,
        6, -4, -5, 9, -5, 11, 10, 15, -1, 2, -3, 16, 6, 2, 15, 15, 9, -2, 9])
      return: -1131
  - testcases:
    - expression: minimaal_scalair_product([15, 10, 2, -1, -4, 19, 2, 9, 6, 12, 12,
        -5, 11, 0, -2, 6, 6, 10, 18, 13, 17, -5, 5, 19, 14, -5, 18, 4, 3, -1, 19,
        -2, 0, 7, 6, 19, 12, 8, 14, -2, 19, 12, 17, 3, -2, 19, -1, -5, 16, 15, -1,
        3, 0, 7, 6, 6, -3, 16, 8, -3, 19, 9, 14, -4, 19, 9, -4, 8, -4, 4, 16, -2],
        [1, -5, 1, 4, 3, 1, 5, 7, 11, 8, 4, 9, 10, -4, 13, 20, 0, 19, 12, -4, 7, 19,
        8, 17, -4, -1, 4, 3, 14, -4, -3, 18, -5, 1, 20, 16, -1, -5, 10, 2, -2, 14,
        4, 5, 14, 16, -2, -4, 2, 6, 4, 12, -2, 8, 7, 16, 5, 14, 4, 19, 15, 7, 19,
        19, 12, -1, 16, 11, 6, 14, 1, 17])
      return: -727
  - testcases:
    - expression: minimaal_scalair_product([8, -1, -5, 1, 12, 19, 8, 9, 20, 14, 12,
        -2, 13, 19, 4, 3, 20, 6, -1, 3, 3, -5, 15, 10, -4, 6, 9, -1, 17, 6, -3, 16,
        -1, 7, 17, 6, -3, 5, 5, -1, 7, 14, 16, 8, -2, 6, -2, 2, 3, 17, 4, 17, 5, -2,
        4, -3, 16, 20, 9, -3, 2, 10, 18, 15, 13, 3, 9, 13, 6, 16, 19, -5, 13], [4,
        16, 10, 16, -5, -4, 18, 14, 2, -3, 13, -3, 13, -5, 11, 4, 7, 6, 6, 3, -2,
        -3, 1, 12, 17, 8, 4, 19, -2, 13, 2, 16, 6, 16, 15, -3, 10, 2, 9, 18, 19, 16,
        10, 12, -1, 14, -4, 12, 3, 4, 15, -3, 12, 7, -5, 8, 18, 9, 19, 20, 19, 7,
        -4, 18, 3, 14, 9, 5, 6, 2, 2, 14, 5])
      return: 118
  - testcases:
    - expression: minimaal_scalair_product([10, 17, 17, 5, 3, 2, 11, -2, 1, 1, 14,
        1, -5, 2, 19, 15, 15, 0, -5, 13, 4, 15, -4, 8, -1, 2, 19, -4, 13, -5, -5,
        14, 3, 19, 9, -2, 0, 4, 17, 17, 17, 1, 16, 10, 1, 1, 0, -3, 0, 8, 8, 12, 6,
        4, 16, 15, -3, 0, 12, 3, -2, 19, 20, 8, -3, 2, 6, 7, 10, 8, 20, 9, -4, 9,
        -2, 15], [1, -4, 11, 13, 19, 18, 8, 16, -4, -2, -3, -5, 12, 8, 9, 5, 9, 10,
        2, 7, 15, 1, 13, 15, 6, 0, 13, 5, -1, -1, 13, -2, 4, 13, -1, 14, 12, -1, -3,
        7, 18, 11, -2, -3, 12, 11, 2, 5, 17, 13, 7, 13, -2, 8, 4, 18, -4, 1, 17, 18,
        3, 10, 19, 8, -2, -4, 1, 0, 3, 10, 16, 13, 7, 1, 14, 10])
      return: -605
  - testcases:
    - expression: minimaal_scalair_product([12, 14, 7, 14, 18, 7, 12, 20, -2, 7, 18,
        16, 9, -5, 1, 15, 8, 18, 13, 19, 19, 7, 9, 4, -2, -4, 17, 12, 20, 1, 20, 4,
        -1, -5, -5, 14, 12, 11, 19, 2, 6, 6, 13, 17, 10, 16, 19, 19, 6, -1, 4, 12,
        0, -3, 16, -3, -4, 6, -3, 0, -4, 5, 2, 13, -3, 1, 18, 14, -1, 18, 6, 14, 8,
        4, 4, 2, 15, 18, 12], [15, 14, 16, 17, 19, 2, 11, 15, 6, -5, 19, 10, 16, 1,
        4, -4, 16, 6, 8, 7, 3, -3, 12, 2, 17, 0, 13, -4, 19, 0, 7, 6, -5, 9, 14, -4,
        6, 3, 20, 3, 20, 4, 9, -5, 11, 15, 2, 5, -2, 17, 5, 0, -2, 19, 8, -1, -5,
        19, 18, -2, 5, -3, 14, -2, 16, -5, 1, 15, 16, 5, 20, 6, -3, 7, 11, 8, 18,
        13, -3])
      return: 4
  - testcases:
    - expression: minimaal_scalair_product([1, 10, 12, 1, 7, 9, 5, 11, 5, 16, 14,
        12, 8, 4, 5, 15, 10, 0, 8, 17, 10, 10, 10, -2, 12, 19, 16, -3, -1, 3, 11,
        9, 19, 15, 5, 18, 14, 5, 5, 7, 12, 19, 12, 17, 18, -5, 13, 4, 3, -5, 4, 13,
        6, 18, 18, 6, -1, 11, 18, 0, 14, 3, 15, 3, -1, 4, 16, -2, 19, -2, -2, 11,
        15, 14, 1, 10, 2, 11, -3, -3, 16, 15, 1], [-4, 9, 7, 16, 13, 12, 14, 2, 20,
        -3, 14, 20, 15, 3, 0, 8, 14, 13, 16, 3, 16, 14, 0, 0, 17, 16, 13, 20, 2, 1,
        13, 14, 11, 8, -3, 10, 7, 1, 15, 2, 4, -5, 10, 19, 9, 19, 17, 17, -1, 12,
        19, -2, 10, 10, 12, 17, 4, 14, -4, 16, -3, -3, -2, 2, 6, 0, -5, 18, -4, -3,
        -1, -5, -3, 20, -4, -4, 7, 13, 19, 16, -2, -3, -2])
      return: 578
  - testcases:
    - expression: minimaal_scalair_product([15, 19, 2, -1, 16, 7, -3, 1, 7, 1, 1,
        18, 12, 2, 6, 13, 17, 20, -1, -5, -1, 8, -4, 14, 11, 19, 18, 1, 18, 4, 18,
        -2, 18, 9, 18, 6, 1, 8, 15, 2, 15, 10, 10, 12, 16, 1, 14, 5, -3, -1, 4, 12,
        -4, 1, 6, -2, 18, -5, -2, 10, 1, 13, 6, 3, -3, 10, 18, 4, 13, 19, 13, 13,
        5, 17, 20, -4, 18, 15, -2, -4, 18, 12, 18, 5, 19, 18], [-4, 9, 18, 8, 9, 16,
        2, 2, 4, 15, -2, 10, 11, -4, 0, 7, -5, 2, 19, 19, 18, 15, -5, 10, 4, 12, 13,
        6, 12, 16, -5, -4, 11, 14, 18, 7, 14, 11, 7, -3, 3, -3, -3, 1, 20, -5, 4,
        -2, 15, 7, -3, 16, 15, 0, 9, 2, 18, 0, 0, -2, -4, 14, 20, 0, 5, 14, -2, 10,
        9, 11, 17, -4, 6, 16, -5, -4, -2, -2, -3, -3, 0, 12, 13, 18, 16, -2])
      return: -877
  - testcases:
    - expression: minimaal_scalair_product([11, -2, -3, 20, 7, 15, 20, 19, -5, 18,
        18, 5, 6, 1, 9, 12, -3, 1, 0, 19, -3, 0, 6, 6, 20, 12, 13, 10, 2, 5, 13, 15,
        19, 17, 14, 20, 1, 7, -4, -2, 7, -3, 15, 9, 2, 17, 4, 2, 19, 16, 10, 13, 4,
        2, 6, 11, 14, 4, 4, -3, 9, 6, 12, 11, -4, 5, 12, -2, 16, 15, -3, 7, 5, 9,
        4, 20, 13, -5, 3, 17, -2, 3, 16, 20, -5, 14, 5, 8, 17, 17], [13, 12, 3, 9,
        14, 17, -1, 2, 8, 1, 9, 18, 14, 11, 11, 16, -2, 14, 11, 8, 12, -3, 7, 15,
        10, 18, 6, 10, 14, 14, 14, 6, 20, -4, 10, -4, 15, 17, -1, 17, 17, 5, -4, -3,
        8, 2, 19, 7, 0, -4, 1, 7, 0, 14, 10, 9, 20, 19, -2, 6, 5, 3, 3, 8, 14, 0,
        0, -3, 13, -2, 16, 5, 2, 17, -3, 16, 1, 6, 11, -5, 19, 3, -5, -1, 8, 10, 13,
        1, -3, 8])
      return: 553
  - testcases:
    - expression: minimaal_scalair_product([-2, 15, 13, 2, 19, 3, 19, 14, 11, 13,
        18, 11, -3, 19, 5, -2, -1, 6, -5, 10, -4, 19, 6, 18, 2, 10, 12, -4, 9, 2,
        12, -1, 3, -3, 6, -4, 8, 3, 12, 15, 4, 7, 0, 17, -4, -1, 2, 1, 20, 12, 7,
        10, 0, 11, 13, 9, 18, -4, 6, 14, 2, -1, -2, 9, -1, 7, 2, 20, 17, 1, 11, 3,
        16, 1, -3, 7, 2, 14, 9, 17, -4, 15, 5, 15, 7, 8, 3, 6, 14, 17, 3, 17, 4, 18],
        [18, 1, 5, 8, -2, 12, 5, -2, 15, 1, 15, 10, 19, 17, 18, -2, 17, 6, 2, 4, 11,
        14, 7, -4, 1, 3, 2, 17, 16, -5, 17, 14, 17, 10, 5, 18, 19, 7, 5, 0, 10, -2,
        9, 2, -1, 1, 20, -1, -2, -1, -1, 9, 17, 4, 15, 0, 16, 2, 0, 7, 9, 8, 2, 10,
        10, 9, 8, 4, 9, 15, 4, 15, 2, 13, 7, 1, 18, 2, 14, 3, 14, 11, 9, -4, 14, 4,
        9, 4, 1, -1, 5, 17, 3, 16])
      return: 574
