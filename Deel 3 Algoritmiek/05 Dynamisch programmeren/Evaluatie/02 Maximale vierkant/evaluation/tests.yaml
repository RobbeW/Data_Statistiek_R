- tab: Feedback
  contexts:
  - testcases:
    - expression: grootste_vierkant([[0, 0]])
      description:
        description: grootste_vierkant([[0, 0]])
        format: python
      return: 0
  - testcases:
    - expression: grootste_vierkant([[1], [0]])
      description:
        description: "grootste_vierkant([[1],\n                   [0]])"
        format: python
      return: 1
  - testcases:
    - expression: grootste_vierkant([[1, 0], [0, 0], [0, 0], [0, 0]])
      description:
        description: "grootste_vierkant([[1, 0],\n                   [0, 0],\n   \
          \                [0, 0],\n                   [0, 0]])"
        format: python
      return: 1
  - testcases:
    - expression: grootste_vierkant([[1, 0, 1, 0, 0], [1, 0, 1, 1, 1], [1, 1, 1, 1,
        1], [1, 0, 0, 1, 0]])
      description:
        description: "grootste_vierkant([[1, 0, 1, 0, 0],\n                   [1,
          0, 1, 1, 1],\n                   [1, 1, 1, 1, 1],\n                   [1,
          0, 0, 1, 0]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[1, 1, 1, 1, 0], [1, 1, 1, 1, 0], [1, 1, 1, 1,
        1], [1, 1, 1, 1, 1], [0, 0, 1, 1, 1]])
      description:
        description: "grootste_vierkant([[1, 1, 1, 1, 0],\n                   [1,
          1, 1, 1, 0],\n                   [1, 1, 1, 1, 1],\n                   [1,
          1, 1, 1, 1],\n                   [0, 0, 1, 1, 1]])"
        format: python
      return: 16
  - testcases:
    - expression: grootste_vierkant([[0, 0, 0, 0], [0, 0, 1, 0], [1, 0, 1, 1], [1,
        0, 0, 0], [1, 0, 0, 0], [0, 1, 1, 1], [1, 1, 1, 0]])
      description:
        description: "grootste_vierkant([[0, 0, 0, 0],\n                   [0, 0,
          1, 0],\n                   [1, 0, 1, 1],\n                   [1, 0, 0, 0],\n\
          \                   [1, 0, 0, 0],\n                   [0, 1, 1, 1],\n  \
          \                 [1, 1, 1, 0]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[1, 0, 1], [1, 1, 1], [0, 0, 1], [0, 0, 0], [1,
        0, 1], [1, 0, 0], [0, 0, 1], [0, 1, 1], [1, 1, 1], [1, 0, 1], [0, 1, 0]])
      description:
        description: "grootste_vierkant([[1, 0, 1],\n                   [1, 1, 1],\n\
          \                   [0, 0, 1],\n                   [0, 0, 0],\n        \
          \           [1, 0, 1],\n                   [1, 0, 0],\n                \
          \   [0, 0, 1],\n                   [0, 1, 1],\n                   [1, 1,
          1],\n                   [1, 0, 1],\n                   [0, 1, 0]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0], [1, 1,
        1, 0, 1, 0], [1, 0, 1, 0, 1, 0], [1, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1], [1,
        1, 0, 0, 0, 1]])
      description:
        description: "grootste_vierkant([[0, 1, 1, 1, 0, 1],\n                   [0,
          0, 0, 0, 1, 0],\n                   [1, 1, 1, 0, 1, 0],\n              \
          \     [1, 0, 1, 0, 1, 0],\n                   [1, 0, 0, 0, 0, 1],\n    \
          \               [1, 0, 1, 1, 1, 1],\n                   [1, 1, 0, 0, 0,
          1]])"
        format: python
      return: 1
  - testcases:
    - expression: grootste_vierkant([[0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0],
        [0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1], [0, 1,
        1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0]])
      description:
        description: "grootste_vierkant([[0, 0, 0, 1, 1, 0, 0],\n                \
          \   [1, 0, 0, 0, 0, 1, 0],\n                   [0, 1, 1, 1, 0, 1, 0],\n\
          \                   [0, 1, 0, 0, 1, 0, 0],\n                   [0, 1, 1,
          1, 0, 0, 1],\n                   [0, 1, 1, 0, 1, 0, 0],\n              \
          \     [0, 1, 1, 1, 0, 1, 0]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1,
        1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1,
        0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0]])
      description:
        description: "grootste_vierkant([[0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0,
          1, 1, 1, 1],\n                   [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,
          1, 1, 1, 0, 1],\n                   [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1,
          1, 0, 0, 1, 1, 0]])"
        format: python
      return: 9
  - testcases:
    - expression: grootste_vierkant([[1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0,
        1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0]])
      description:
        description: "grootste_vierkant([[1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0,
          0, 1, 0, 0],\n                   [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0,
          0, 0, 0, 1, 1],\n                   [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1,
          1, 1, 0, 0, 0, 0]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[1, 0, 0], [1, 1, 0], [0, 1, 1], [1, 0, 1], [1,
        0, 0], [1, 1, 1], [1, 0, 0], [0, 1, 0], [0, 0, 0], [1, 1, 1], [1, 0, 1], [0,
        0, 0], [0, 1, 0], [0, 0, 1], [0, 0, 0], [0, 1, 1], [1, 1, 0], [0, 1, 0], [1,
        0, 1]])
      description:
        description: "grootste_vierkant([[1, 0, 0],\n                   [1, 1, 0],\n\
          \                   [0, 1, 1],\n                   [1, 0, 1],\n        \
          \           [1, 0, 0],\n                   [1, 1, 1],\n                \
          \   [1, 0, 0],\n                   [0, 1, 0],\n                   [0, 0,
          0],\n                   [1, 1, 1],\n                   [1, 0, 1],\n    \
          \               [0, 0, 0],\n                   [0, 1, 0],\n            \
          \       [0, 0, 1],\n                   [0, 0, 0],\n                   [0,
          1, 1],\n                   [1, 1, 0],\n                   [0, 1, 0],\n \
          \                  [1, 0, 1]])"
        format: python
      return: 1
  - testcases:
    - expression: grootste_vierkant([[1, 0, 1, 0, 1], [1, 0, 1, 1, 1], [0, 1, 1, 0,
        1], [0, 0, 1, 1, 1], [1, 0, 1, 0, 1], [0, 1, 1, 1, 1], [0, 0, 1, 0, 1], [0,
        1, 0, 1, 1], [1, 1, 1, 0, 1], [0, 0, 1, 0, 0], [1, 0, 1, 0, 0], [0, 1, 0,
        1, 1], [0, 1, 1, 1, 1], [1, 0, 0, 0, 0], [1, 0, 0, 0, 1]])
      description:
        description: "grootste_vierkant([[1, 0, 1, 0, 1],\n                   [1,
          0, 1, 1, 1],\n                   [0, 1, 1, 0, 1],\n                   [0,
          0, 1, 1, 1],\n                   [1, 0, 1, 0, 1],\n                   [0,
          1, 1, 1, 1],\n                   [0, 0, 1, 0, 1],\n                   [0,
          1, 0, 1, 1],\n                   [1, 1, 1, 0, 1],\n                   [0,
          0, 1, 0, 0],\n                   [1, 0, 1, 0, 0],\n                   [0,
          1, 0, 1, 1],\n                   [0, 1, 1, 1, 1],\n                   [1,
          0, 0, 0, 0],\n                   [1, 0, 0, 0, 1]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1,
        1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0,
        0, 1, 1, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0,
        0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1]])
      description:
        description: "grootste_vierkant([[0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0,
          1, 1],\n                   [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
          0],\n                   [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0],\n\
          \                   [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\n\
          \                   [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0,
        0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1,
        0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1],
        [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0]])
      description:
        description: "grootste_vierkant([[1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0,
          0, 0, 0, 1, 1, 1, 0],\n                   [1, 1, 0, 0, 1, 0, 1, 1, 1, 1,
          0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0],\n                   [0, 1, 1, 0, 0, 1,
          1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1],\n                   [0, 0,
          1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1,
        1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1,
        1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0,
        1, 1, 0, 0, 1, 1, 0, 0, 1]])
      description:
        description: "grootste_vierkant([[1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0,
          1, 1, 1, 1, 1, 0, 0, 1, 0, 1],\n                   [0, 0, 1, 0, 0, 0, 1,
          0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0],\n                  \
          \ [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0,
          0],\n                   [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1,
          1, 0, 0, 1, 1, 0, 0, 1]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0,
        0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0,
        0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1,
        0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0,
        1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0]])
      description:
        description: "grootste_vierkant([[1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1,
          0, 0, 0],\n                   [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1,
          1, 1, 0],\n                   [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0,
          0, 1, 1],\n                   [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0,
          0, 0, 0],\n                   [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 1],\n                   [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,
          1, 0, 0]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1,
        0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [1,
        0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1,
        0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1,
        1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0]])
      description:
        description: "grootste_vierkant([[0, 1, 1, 0, 0, 0, 0, 1, 1],\n          \
          \         [1, 0, 1, 0, 1, 0, 0, 0, 1],\n                   [0, 1, 0, 1,
          1, 1, 1, 1, 1],\n                   [0, 0, 1, 1, 0, 0, 0, 1, 1],\n     \
          \              [1, 0, 1, 1, 0, 1, 1, 0, 1],\n                   [0, 0, 1,
          1, 1, 1, 1, 0, 1],\n                   [1, 1, 0, 1, 0, 1, 1, 0, 1],\n  \
          \                 [0, 0, 1, 0, 1, 1, 0, 1, 1],\n                   [0, 0,
          1, 0, 1, 1, 1, 1, 0],\n                   [1, 1, 1, 1, 1, 1, 1, 1, 0],\n\
          \                   [0, 1, 1, 0, 0, 0, 0, 0, 0],\n                   [0,
          0, 1, 1, 0, 0, 0, 0, 0]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
        0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,
        1, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,
        0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0,
        0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0,
        1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1,
        0, 0, 1]])
      description:
        description: "grootste_vierkant([[0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0,
          1, 0, 0, 1, 0, 1, 0, 1, 1],\n                   [1, 1, 0, 0, 0, 0, 0, 1,
          1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0],\n                   [0, 1,
          0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0],\n      \
          \             [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0,
          0, 0, 0, 1],\n                   [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,
          1, 1, 0, 1, 0, 0, 1, 1, 0, 1],\n                   [1, 1, 0, 0, 1, 1, 0,
          0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1]])"
        format: python
      return: 9
  - testcases:
    - expression: grootste_vierkant([[0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0,
        1, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1,
        1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0,
        1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,
        0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0,
        0, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,
        0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
        [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1,
        0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0]])
      description:
        description: "grootste_vierkant([[0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0,
          1, 1, 1, 1, 1, 1, 1, 1, 1],\n                   [0, 0, 0, 1, 0, 1, 1, 1,
          0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0],\n                   [0, 0,
          1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1],\n      \
          \             [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0,
          1, 0, 1, 0],\n                   [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1,
          1, 0, 1, 1, 0, 0, 1, 0, 0, 0],\n                   [0, 1, 0, 1, 1, 0, 1,
          1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0],\n                   [1,
          0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1],\n   \
          \                [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0,
          1, 1, 1, 1, 0],\n                   [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0,
          0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],\n                   [1, 1, 1, 0, 1, 0,
          1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0],\n                  \
          \ [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0]])"
        format: python
      return: 9
  - testcases:
    - expression: grootste_vierkant([[1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1,
        1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0,
        1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1,
        1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0,
        0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1,
        0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1,
        1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0,
        0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 1,
        1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0,
        1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1]])
      description:
        description: "grootste_vierkant([[1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1,
          1, 1, 1],\n                   [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0,
          0, 0, 1],\n                   [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0,
          0, 0, 1],\n                   [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 0, 0],\n                   [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0,
          1, 1, 1],\n                   [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1,
          1, 0, 0],\n                   [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,
          0, 1, 1],\n                   [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1,
          0, 1, 0],\n                   [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1,
          0, 1, 0],\n                   [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,
          0, 1, 0],\n                   [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0,
          1, 0, 1],\n                   [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0,
          1, 1, 1],\n                   [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0,
          1, 1, 1],\n                   [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0,
          0, 0, 1],\n                   [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1,
          1, 1, 1]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0],
        [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0,
        0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0,
        0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 1, 0,
        1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1],
        [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1,
        0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0,
        0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1,
        0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1]])
      description:
        description: "grootste_vierkant([[0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0,
          0],\n                   [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1],\n\
          \                   [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1],\n   \
          \                [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0],\n      \
          \             [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1],\n         \
          \          [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1],\n            \
          \       [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1],\n               \
          \    [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0],\n                  \
          \ [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1],\n                   [1,
          0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1],\n                   [0, 0, 1,
          1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0],\n                   [0, 1, 0, 0, 0,
          0, 1, 0, 1, 0, 1, 0, 0, 0, 1],\n                   [1, 0, 0, 0, 0, 1, 1,
          0, 0, 1, 1, 1, 0, 0, 0],\n                   [1, 0, 0, 0, 0, 1, 1, 0, 0,
          0, 1, 1, 0, 0, 0],\n                   [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0,
          1, 1, 1, 0],\n                   [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0,
          1, 0],\n                   [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0,
        0, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0,
        0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,
        0, 0, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1,
        1, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1,
        1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1,
        0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0,
        0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,
        1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1],
        [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0,
        0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [1, 1,
        1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [1, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0,
        0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1,
        1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0,
        1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0]])
      description:
        description: "grootste_vierkant([[0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0,
          0, 0, 0, 1, 0, 1, 1, 1, 0],\n                   [0, 1, 1, 0, 0, 1, 0, 0,
          0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0],\n                   [0, 1,
          0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0],\n      \
          \             [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1,
          1, 0, 0, 1],\n                   [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,
          1, 1, 0, 1, 0, 1, 1, 1, 1, 1],\n                   [0, 1, 0, 1, 0, 0, 0,
          1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0],\n                   [1,
          0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0],\n   \
          \                [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1,
          1, 1, 1, 1, 1],\n                   [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0,
          1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1],\n                   [1, 1, 1, 1, 0, 0,
          1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1],\n                  \
          \ [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0],\n\
          \                   [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1,
          0, 1, 1, 1, 0, 0],\n                   [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n                   [1, 1, 0, 0, 0,
          1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1],\n               \
          \    [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,
          0],\n                   [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
          0, 0, 1, 0, 0, 1, 1],\n                   [1, 1, 1, 0, 0, 1, 0, 1, 1, 1,
          0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0,
        0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 0,
        1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1,
        1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1,
        1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0,
        1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1,
        0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0,
        1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 1, 1,
        1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,
        1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 1, 1, 1,
        0, 0, 0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0,
        0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1,
        0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1,
        0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1,
        1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,
        1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0,
        1, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1,
        1]])
      description:
        description: "grootste_vierkant([[1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1,
          0, 0],\n                   [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1,
          0],\n                   [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1],\n\
          \                   [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1],\n\
          \                   [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1],\n\
          \                   [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\n\
          \                   [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1],\n\
          \                   [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1],\n\
          \                   [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0],\n\
          \                   [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1],\n\
          \                   [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1],\n\
          \                   [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1],\n\
          \                   [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1],\n\
          \                   [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1],\n\
          \                   [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1],\n\
          \                   [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0],\n\
          \                   [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1],\n\
          \                   [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],\n\
          \                   [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0],\n\
          \                   [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0],\n\
          \                   [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1],\n\
          \                   [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1],\n\
          \                   [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1],\n\
          \                   [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0],\n\
          \                   [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1]])"
        format: python
      return: 4
  - testcases:
    - expression: grootste_vierkant([[0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1,
        0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0,
        0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1,
        0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0,
        0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1,
        1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 1, 1, 0, 1, 1,
        1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1,
        1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0,
        0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1,
        1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [1, 0, 1,
        1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1,
        0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], [1,
        1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0,
        0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0]])
      description:
        description: "grootste_vierkant([[0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,
          1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1],\n                   [1, 0, 1, 0, 0, 1,
          0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0],\n            \
          \       [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
          0, 0, 0, 1],\n                   [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0,
          0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\n                   [1, 0, 0, 1, 1,
          1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1],\n         \
          \          [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0,
          1, 0, 1, 0, 1],\n                   [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,
          1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1],\n                   [1, 0, 1, 1,
          1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n      \
          \             [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1,
          1, 0, 1, 1, 1, 0],\n                   [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0,
          0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0],\n                   [0, 0, 1,
          0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0],\n   \
          \                [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0,
          1, 1, 1, 0, 1, 1, 0],\n                   [1, 0, 1, 1, 0, 1, 0, 0, 1, 1,
          0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1],\n                   [0, 1,
          0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0],\n\
          \                   [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0,
          1, 1, 1, 0, 1, 1, 1, 1],\n                   [0, 0, 1, 0, 0, 1, 0, 1, 1,
          0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0]])"
        format: python
      return: 4
