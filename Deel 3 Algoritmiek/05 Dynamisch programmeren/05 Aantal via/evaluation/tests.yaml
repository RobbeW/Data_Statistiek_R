- tab: Feedback
  contexts:
  - testcases:
    - expression: aantal_via([[0, 1, 1], [0, 1, 0], [0, 1, 1], [0, 1, 1], [0, 0, 0]],
        (4, 1))
      description:
        description: "aantal_via([[0, 1, 1],\n            [0, 1, 0],\n           \
          \ [0, 1, 1],\n            [0, 1, 1],\n            [0, 0, 0], (4, 1)])"
        format: python
      return: 1
  - testcases:
    - expression: aantal_via([[0, 0, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0,
        0], [0, 1, 1, 0], [0, 0, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0], [1, 1, 1, 0],
        [1, 0, 1, 0], [0, 1, 1, 0], [0, 0, 1, 0]], (7, 3))
      description:
        description: "aantal_via([[0, 0, 1, 1],\n            [0, 0, 0, 0],\n     \
          \       [0, 0, 0, 0],\n            [0, 0, 0, 0],\n            [0, 1, 1,
          0],\n            [0, 0, 1, 0],\n            [1, 0, 1, 0],\n            [0,
          0, 1, 0],\n            [1, 1, 1, 0],\n            [1, 0, 1, 0],\n      \
          \      [0, 1, 1, 0],\n            [0, 0, 1, 0], (7, 3)])"
        format: python
      return: 16
  - testcases:
    - expression: aantal_via([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0,
        1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 1,
        1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], (2, 1))
      description:
        description: "aantal_via([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           \
          \ [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1],\n            [0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n            [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1],\n         \
          \   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], (2, 1)])"
        format: python
      return: 3
  - testcases:
    - expression: aantal_via([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0,
        1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0,
        1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], (2, 3))
      description:
        description: "aantal_via([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           \
          \ [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1],\n            [0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n            [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1],\n         \
          \   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], (2, 3)])"
        format: python
      return: 3
  - testcases:
    - expression: aantal_via([[0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1,
        0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0,
        0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0]], (4, 9))
      description:
        description: "aantal_via([[0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0],\n           \
          \ [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0],\n            [0, 0, 0, 1, 0, 0, 0,
          1, 0, 0, 0],\n            [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0],\n         \
          \   [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], (4, 9)])"
        format: python
      return: 1
  - testcases:
    - expression: aantal_via([[0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0], [1, 0, 0, 0,
        1, 0], [0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0], [1, 1,
        1, 0, 0, 0], [0, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 0]],
        (3, 5))
      description:
        description: "aantal_via([[0, 0, 0, 0, 1, 0],\n            [0, 0, 0, 0, 0,
          0],\n            [1, 0, 0, 0, 1, 0],\n            [0, 1, 1, 1, 1, 0],\n\
          \            [1, 0, 0, 1, 1, 0],\n            [0, 1, 0, 0, 1, 0],\n    \
          \        [1, 1, 1, 0, 0, 0],\n            [0, 1, 0, 0, 0, 0],\n        \
          \    [1, 1, 1, 0, 1, 0],\n            [1, 0, 1, 1, 1, 0], (3, 5)])"
        format: python
      return: 4
  - testcases:
    - expression: aantal_via([[0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1],
        [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], [1, 0, 1, 0, 1, 1, 0,
        1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0]], (3, 7))
      description:
        description: "aantal_via([[0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1,
          1],\n            [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0],\n\
          \            [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1],\n    \
          \        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], (3, 7)])"
        format: python
      return: 2
  - testcases:
    - expression: aantal_via([[0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 1], [0, 0, 1, 0,
        0, 0], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1,
        1, 1, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0], [0,
        1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0],
        [1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0]], (8, 5))
      description:
        description: "aantal_via([[0, 0, 0, 0, 1, 1],\n            [1, 1, 0, 0, 0,
          1],\n            [0, 0, 1, 0, 0, 0],\n            [0, 0, 1, 1, 0, 1],\n\
          \            [0, 0, 1, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n    \
          \        [1, 1, 1, 1, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n        \
          \    [0, 0, 0, 0, 1, 0],\n            [1, 0, 0, 0, 1, 0],\n            [0,
          1, 0, 1, 1, 0],\n            [0, 0, 0, 0, 1, 0],\n            [1, 0, 1,
          0, 1, 0],\n            [1, 1, 0, 0, 1, 0],\n            [1, 1, 1, 0, 1,
          0],\n            [1, 0, 0, 1, 1, 0],\n            [0, 0, 0, 0, 0, 0], (8,
          5)])"
        format: python
      return: 16
  - testcases:
    - expression: aantal_via([[0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0,
        1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0,
        0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,
        1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0,
        1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0]], (4, 6))
      description:
        description: "aantal_via([[0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1,
          0, 1, 0, 1, 0, 0, 1, 0],\n            [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1,
          0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0],\n            [1, 0, 0, 0, 1, 1,
          0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0],\n            [0,
          0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1],\n\
          \            [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0], (4, 6)])"
        format: python
      return: 5
  - testcases:
    - expression: aantal_via([[0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0], [0, 0, 0, 1,
        1, 0], [0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1], [1, 0,
        0, 1, 1, 0], [1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1], [0,
        1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0],
        [1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 0,
        0], [0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0], [0, 0, 0,
        1, 1, 0]], (6, 1))
      description:
        description: "aantal_via([[0, 1, 0, 1, 1, 1],\n            [0, 0, 1, 0, 1,
          0],\n            [0, 0, 0, 1, 1, 0],\n            [0, 0, 0, 0, 1, 0],\n\
          \            [0, 0, 1, 0, 0, 0],\n            [0, 0, 0, 1, 1, 1],\n    \
          \        [1, 0, 0, 1, 1, 0],\n            [1, 0, 0, 0, 1, 1],\n        \
          \    [0, 0, 0, 1, 0, 1],\n            [0, 1, 0, 0, 0, 1],\n            [0,
          1, 1, 0, 0, 0],\n            [0, 1, 0, 0, 0, 0],\n            [1, 1, 1,
          1, 0, 0],\n            [0, 0, 1, 0, 1, 0],\n            [1, 0, 1, 0, 0,
          0],\n            [0, 0, 0, 1, 0, 0],\n            [1, 1, 1, 0, 0, 0],\n\
          \            [1, 1, 1, 1, 0, 0],\n            [0, 0, 0, 1, 1, 0],\n    \
          \        [0, 1, 1, 0, 0, 0],\n            [0, 0, 1, 0, 1, 0],\n        \
          \    [0, 0, 0, 1, 1, 0], (6, 1)])"
        format: python
      return: 120
  - testcases:
    - expression: aantal_via([[0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0,
        1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], [0, 1, 1,
        1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1,
        0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0,
        1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0,
        0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], (6, 3))
      description:
        description: "aantal_via([[0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0,
          0, 1, 1],\n            [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0,
          0, 1, 0],\n            [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1,
          0, 0, 1],\n            [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1,
          1, 1, 1],\n            [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0,
          0, 0, 0],\n            [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,
          0, 0, 0],\n            [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0], (6, 3)])"
        format: python
      return: 2
  - testcases:
    - expression: aantal_via([[0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1,
        0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0,
        1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,
        0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0,
        0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
        0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0]], (5, 11))
      description:
        description: "aantal_via([[0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0,
          1, 0, 1, 0, 1, 1, 1],\n            [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0,
          1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0],\n            [0, 0, 1, 0, 1, 0, 1, 1,
          1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1],\n            [0, 0, 1, 1,
          0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0],\n            [0,
          0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1],\n   \
          \         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0], (5, 11)])"
        format: python
      return: 4
  - testcases:
    - expression: aantal_via([[0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1,
        1, 1, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0,
        1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0,
        0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0,
        1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1,
        0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0]], (5, 17))
      description:
        description: "aantal_via([[0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0,
          1, 1, 1, 1, 1, 1, 0, 0],\n            [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1,
          0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0],\n            [0, 1, 1, 1, 0, 1,
          1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1],\n            [1,
          0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1],\n\
          \            [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0,
          0, 1, 0, 1],\n            [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0], (5, 17)])"
        format: python
      return: 4
  - testcases:
    - expression: aantal_via([[0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0], [0, 1, 1, 0,
        0, 0], [1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0], [0, 1,
        1, 0, 1, 0], [1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0], [0,
        0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0],
        [1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1,
        0], [0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0], [0, 1, 1,
        1, 0, 0], [0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0]], (8, 5))
      description:
        description: "aantal_via([[0, 0, 0, 0, 0, 0],\n            [1, 1, 1, 0, 0,
          0],\n            [0, 1, 1, 0, 0, 0],\n            [1, 1, 0, 0, 0, 0],\n\
          \            [0, 0, 0, 1, 0, 0],\n            [0, 1, 1, 0, 0, 0],\n    \
          \        [0, 1, 1, 0, 1, 0],\n            [1, 1, 1, 1, 0, 0],\n        \
          \    [1, 0, 0, 1, 0, 0],\n            [1, 1, 1, 0, 0, 0],\n            [0,
          0, 0, 1, 1, 0],\n            [0, 1, 0, 0, 1, 0],\n            [0, 1, 0,
          1, 1, 0],\n            [0, 0, 1, 1, 0, 0],\n            [1, 1, 0, 1, 1,
          0],\n            [1, 1, 1, 1, 1, 0],\n            [1, 1, 0, 0, 0, 0],\n\
          \            [0, 0, 1, 0, 1, 0],\n            [0, 1, 0, 1, 0, 0],\n    \
          \        [0, 1, 0, 1, 1, 0],\n            [0, 0, 1, 0, 0, 0],\n        \
          \    [0, 1, 1, 1, 0, 0],\n            [0, 0, 0, 1, 0, 0],\n            [0,
          1, 1, 1, 1, 0], (8, 5)])"
        format: python
      return: 18
  - testcases:
    - expression: aantal_via([[0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0,
        0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1,
        0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0,
        0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0,
        0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1,
        0, 0, 0, 0]], (9, 11))
      description:
        description: "aantal_via([[0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1],\n\
          \            [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0],\n          \
          \  [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0],\n            [0, 0, 1,
          0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0],\n            [0, 0, 0, 0, 1, 0, 1,
          0, 0, 0, 1, 1, 1, 0, 1],\n            [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 1, 1],\n            [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\n\
          \            [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1],\n          \
          \  [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1],\n            [0, 0, 0,
          0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n            [1, 0, 1, 0, 0, 1, 0,
          0, 1, 1, 1, 0, 0, 0, 0], (9, 11)])"
        format: python
      return: 432
  - testcases:
    - expression: aantal_via([[0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0,
        1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0,
        0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0,
        0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0,
        0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 0,
        1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1,
        1, 0, 1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0]], (7, 6))
      description:
        description: "aantal_via([[0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0,
          0, 1, 1, 1, 1],\n            [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,
          0, 1, 1, 0, 0, 0, 0],\n            [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0,
          1, 0, 1, 1, 1, 1, 1, 0, 0],\n            [0, 0, 0, 0, 1, 1, 1, 1, 0, 1,
          0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1],\n            [1, 0, 0, 0, 0, 0, 1, 0,
          1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1],\n            [1, 0, 1, 1, 0, 0,
          1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1],\n            [1, 0, 0, 1,
          0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0],\n            [1, 1,
          1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], (7, 6)])"
        format: python
      return: 27
  - testcases:
    - expression: aantal_via([[0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0,
        0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0,
        1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1,
        1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0,
        0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1,
        1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 0, 0, 1, 1,
        1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1,
        0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1,
        1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0]], (12, 10))
      description:
        description: "aantal_via([[0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1],\n  \
          \          [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0],\n            [0,
          0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1],\n            [1, 0, 0, 0, 0, 1,
          1, 1, 1, 1, 1, 0, 1, 0],\n            [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1,
          0, 0, 0],\n            [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1],\n   \
          \         [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1],\n            [1, 0,
          0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0],\n            [1, 1, 1, 1, 1, 0, 0,
          0, 0, 1, 0, 0, 1, 1],\n            [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
          1, 1],\n            [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0],\n      \
          \      [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0],\n            [0, 0, 1,
          0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1],\n            [0, 0, 1, 0, 1, 1, 0, 1,
          1, 1, 0, 1, 1, 1],\n            [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1,
          1],\n            [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], (12, 10)])"
        format: python
      return: 336
  - testcases:
    - expression: aantal_via([[0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0],
        [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0,
        0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1,
        1, 1, 1], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0,
        1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0,
        0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1,
        1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0,
        1, 1], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 1,
        1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0,
        0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0]], (11,
        10))
      description:
        description: "aantal_via([[0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0,
          0],\n            [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],\n\
          \            [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0],\n    \
          \        [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1],\n        \
          \    [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1],\n            [0,
          1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0],\n            [0, 1, 0,
          0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0],\n            [0, 0, 0, 1, 0,
          1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1],\n            [1, 1, 0, 0, 0, 0, 0,
          0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 1, 0, 0, 0, 1, 0, 0, 0,
          0, 0, 0, 1, 1, 0, 1, 1],\n            [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0,
          0, 1, 0, 0, 1, 1],\n            [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1,
          1, 0, 1, 0],\n            [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0,
          0, 0],\n            [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0],\n\
          \            [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], (11, 10)])"
        format: python
      return: 840
  - testcases:
    - expression: aantal_via([[0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 1,
        1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1,
        0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0,
        0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0,
        0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 0,
        0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0,
        0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1,
        0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1,
        1, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0,
        0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0,
        0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0]], (3,
        4))
      description:
        description: "aantal_via([[0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0],\n\
          \            [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1],\n          \
          \  [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0],\n            [1, 0, 0,
          0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0],\n            [1, 0, 0, 1, 0, 0, 0,
          0, 0, 1, 0, 1, 0, 0, 0],\n            [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,
          0, 0, 0, 0],\n            [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0],\n\
          \            [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n          \
          \  [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1],\n            [0, 0, 0,
          0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n            [0, 0, 1, 1, 1, 1, 0,
          0, 1, 0, 1, 0, 1, 0, 0],\n            [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1,
          0, 1, 0, 0],\n            [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0],\n\
          \            [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0],\n          \
          \  [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\n            [1, 0, 0,
          0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0],\n            [1, 0, 0, 1, 1, 0, 1,
          1, 1, 0, 0, 0, 1, 0, 0], (3, 4)])"
        format: python
      return: 72
  - testcases:
    - expression: aantal_via([[0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0,
        0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0,
        0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,
        0, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0,
        1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0,
        0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0,
        1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1,
        1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1,
        1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,
        0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1,
        1, 1, 0]], (14, 12))
      description:
        description: "aantal_via([[0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1],\n     \
          \       [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1],\n            [1, 1, 0,
          0, 0, 0, 0, 1, 0, 1, 1, 0, 1],\n            [0, 0, 0, 1, 0, 0, 0, 1, 1,
          0, 1, 0, 0],\n            [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n   \
          \         [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1],\n            [1, 1, 1,
          0, 1, 1, 1, 1, 0, 1, 1, 0, 1],\n            [1, 1, 1, 1, 0, 1, 1, 1, 1,
          0, 1, 0, 0],\n            [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0],\n   \
          \         [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0],\n            [1, 0, 1,
          0, 1, 0, 0, 0, 1, 0, 1, 0, 0],\n            [1, 1, 1, 1, 1, 1, 0, 0, 1,
          1, 0, 0, 0],\n            [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0],\n   \
          \         [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0],\n            [1, 0, 1,
          1, 0, 1, 0, 0, 1, 0, 1, 1, 0],\n            [0, 1, 1, 0, 0, 1, 0, 1, 1,
          1, 1, 0, 0],\n            [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0],\n   \
          \         [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0],\n            [0, 0, 0,
          0, 1, 0, 0, 1, 0, 1, 1, 0, 0],\n            [1, 1, 0, 1, 0, 0, 0, 0, 0,
          1, 1, 1, 0], (14, 12)])"
        format: python
      return: 600
  - testcases:
    - expression: aantal_via([[0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0,
        0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0,
        1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 0, 1, 0,
        1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0,
        0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0,
        1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1,
        1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0,
        0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1,
        1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 1,
        0, 0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1,
        0, 1, 0, 1, 0, 1, 0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0,
        1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0,
        0, 0, 0, 0, 0, 1, 0]], (14, 11))
      description:
        description: "aantal_via([[0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1],\n        \
          \    [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1],\n            [0, 1, 1, 1, 1,
          1, 0, 1, 0, 1, 1, 1],\n            [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1],\n\
          \            [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1],\n            [1, 0, 0,
          1, 0, 1, 0, 1, 0, 1, 0, 0],\n            [0, 1, 0, 0, 0, 0, 1, 0, 1, 1,
          1, 1],\n            [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1],\n            [0,
          0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0],\n            [0, 1, 0, 1, 0, 1, 0, 0,
          0, 0, 0, 0],\n            [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0],\n      \
          \      [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0],\n            [1, 1, 1, 1, 0,
          0, 1, 1, 1, 0, 0, 0],\n            [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0],\n\
          \            [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0],\n            [1, 0, 1,
          1, 1, 1, 1, 1, 0, 1, 1, 0],\n            [0, 1, 1, 1, 0, 1, 0, 1, 1, 1,
          1, 0],\n            [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0],\n            [1,
          1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0],\n            [1, 0, 1, 0, 1, 0, 1, 0,
          1, 0, 1, 0],\n            [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0],\n      \
          \      [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0],\n            [0, 1, 0, 1, 1,
          0, 0, 1, 1, 1, 1, 0],\n            [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0],
          (14, 11)])"
        format: python
      return: 324
  - testcases:
    - expression: aantal_via([[0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1,
        0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0,
        0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1,
        1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0,
        1, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1,
        0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0,
        0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1,
        1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1,
        1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0,
        0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1,
        1, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0]], (20, 12))
      description:
        description: "aantal_via([[0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1],\n     \
          \       [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0],\n            [0, 1, 1,
          0, 1, 1, 0, 1, 1, 0, 1, 0, 1],\n            [0, 0, 0, 0, 0, 1, 0, 0, 0,
          0, 1, 0, 0],\n            [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0],\n   \
          \         [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1],\n            [1, 0, 0,
          0, 1, 1, 0, 0, 1, 0, 1, 1, 0],\n            [0, 0, 1, 0, 0, 1, 0, 1, 1,
          0, 0, 0, 0],\n            [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1],\n   \
          \         [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1],\n            [0, 0, 0,
          0, 0, 0, 0, 0, 0, 1, 1, 1, 0],\n            [0, 0, 1, 0, 0, 1, 0, 1, 0,
          0, 0, 0, 1],\n            [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1],\n   \
          \         [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0],\n            [0, 1, 0,
          0, 1, 1, 0, 1, 1, 0, 0, 1, 1],\n            [1, 1, 1, 1, 0, 0, 1, 1, 0,
          0, 0, 1, 0],\n            [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1],\n   \
          \         [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1],\n            [1, 0, 1,
          0, 1, 0, 0, 1, 0, 0, 0, 0, 0],\n            [1, 0, 1, 0, 1, 1, 0, 0, 0,
          0, 0, 0, 0],\n            [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0],\n   \
          \         [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0],\n            [0, 1, 1,
          1, 1, 0, 1, 1, 0, 1, 0, 0, 0],\n            [0, 0, 0, 0, 0, 1, 1, 0, 1,
          0, 1, 1, 0],\n            [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], (20,
          12)])"
        format: python
      return: 162
  - testcases:
    - expression: aantal_via([[0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1,
        0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0,
        0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0,
        0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1,
        1, 0, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0,
        0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1,
        0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0,
        1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 0,
        0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0,
        0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1,
        1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0,
        0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 0,
        1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0]], (5, 7))
      description:
        description: "aantal_via([[0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0,
          1, 0, 1, 1],\n            [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1,
          1, 1, 0, 0, 0],\n            [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0,
          0, 1, 0, 0, 0, 0],\n            [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0,
          1, 1, 0, 0, 0, 0, 1],\n            [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0,
          0, 0, 0, 0, 1, 1, 0, 0],\n            [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
          1, 1, 1, 0, 0, 1, 0, 0, 0],\n            [1, 0, 0, 1, 0, 0, 0, 0, 1, 0,
          0, 1, 1, 0, 1, 0, 0, 0, 1, 0],\n            [0, 1, 1, 0, 0, 0, 1, 1, 1,
          0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1],\n            [1, 0, 0, 1, 1, 1, 0, 0,
          1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1],\n            [1, 0, 0, 0, 0, 1, 0,
          1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\n            [1, 1, 0, 1, 1, 0,
          0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0],\n            [0, 0, 1, 1, 0,
          0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0],\n            [0, 0, 1, 0,
          1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0],\n            [0, 1, 1,
          1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0],\n            [0, 0,
          0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0],\n            [1,
          0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0],\n            [1,
          0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], (5, 7)])"
        format: python
      return: 891
  - testcases:
    - expression: aantal_via([[0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0,
        0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1,
        0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [1, 0, 1, 0, 0, 0, 0, 0,
        1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0,
        1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0,
        1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1,
        0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,
        0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1],
        [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0,
        1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1,
        0, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], [0,
        0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0,
        0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0,
        0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0,
        1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]], (14, 8))
      description:
        description: "aantal_via([[0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1,
          0, 0, 0],\n            [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0,
          1, 1, 1],\n            [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1,
          0, 0, 1],\n            [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0,
          0, 0, 0],\n            [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 1, 1],\n            [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,
          0, 0, 1],\n            [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0,
          1, 1, 0],\n            [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1,
          0, 0, 0],\n            [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1,
          0, 1, 1],\n            [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0,
          0, 0, 0],\n            [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
          0, 0, 1],\n            [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1,
          1, 1, 0],\n            [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1,
          0, 0, 1],\n            [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
          1, 1, 1],\n            [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0,
          0, 1, 0],\n            [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0,
          0, 0, 0],\n            [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1,
          1, 0, 0],\n            [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1,
          0, 1, 0],\n            [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0,
          0, 1, 1],\n            [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0,
          0, 1, 0],\n            [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0,
          0, 1, 1],\n            [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,
          0, 0, 0], (14, 8)])"
        format: python
      return: 18600
  - testcases:
    - expression: aantal_via([[0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1,
        1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0,
        0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0,
        0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0,
        0, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0,
        0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1,
        1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0,
        0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0,
        0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0,
        0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1,
        0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1,
        1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1,
        0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0,
        1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1,
        0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [1,
        1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0]], (7, 14))
      description:
        description: "aantal_via([[0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0,
          1, 1, 1, 0],\n            [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1,
          1, 0, 1, 1, 0],\n            [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0,
          1, 1, 1, 0, 0, 1],\n            [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          1, 0, 0, 0, 0, 0, 0],\n            [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1,
          0, 0, 0, 0, 1, 1, 1, 0],\n            [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0,
          1, 0, 0, 0, 1, 1, 1, 1, 1],\n            [1, 1, 0, 0, 0, 0, 1, 0, 0, 1,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n            [0, 0, 1, 0, 0, 1, 1, 1,
          1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1],\n            [0, 0, 1, 0, 1, 1, 0,
          0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 1, 0, 1, 0, 1,
          1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1],\n            [1, 1, 1, 0, 1,
          0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0],\n            [0, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1],\n            [0, 0, 1,
          1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0],\n            [1, 0,
          0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0],\n            [0,
          1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0],\n            [0,
          0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0],\n            [1,
          0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0],\n            [0,
          1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0],\n            [0,
          1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0],\n            [1,
          1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], (7, 14)])"
        format: python
      return: 4736
