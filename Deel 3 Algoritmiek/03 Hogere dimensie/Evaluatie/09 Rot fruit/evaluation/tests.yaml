- tab: Feedback aantal_vers
  contexts:
  - testcases:
    - expression: aantal_vers([[0, 2]])
      description:
        description: aantal_vers([[0, 2]])
        format: python
      return: 0
  - testcases:
    - expression: aantal_vers([[2, 1, 1], [1, 1, 0], [0, 1, 1]])
      description:
        description: "aantal_vers([[2, 1, 1],\n             [1, 1, 0],\n         \
          \    [0, 1, 1]])"
        format: python
      return: 6
  - testcases:
    - expression: aantal_vers([[2, 1, 1], [0, 1, 1], [1, 0, 1]])
      description:
        description: "aantal_vers([[2, 1, 1],\n             [0, 1, 1],\n         \
          \    [1, 0, 1]])"
        format: python
      return: 6
  - testcases:
    - expression: aantal_vers([[2, 1, 0], [1, 0, 0], [0, 0, 1]])
      description:
        description: "aantal_vers([[2, 1, 0],\n             [1, 0, 0],\n         \
          \    [0, 0, 1]])"
        format: python
      return: 3
  - testcases:
    - expression: aantal_vers([[1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 2, 1, 1, 1, 1,
        1, 1], [1, 2, 1, 1, 2, 1, 1, 1, 1]])
      description:
        description: "aantal_vers([[1, 1, 1, 0, 1, 1, 1, 1, 1],\n             [1,
          1, 2, 1, 1, 1, 1, 1, 1],\n             [1, 2, 1, 1, 2, 1, 1, 1, 1]])"
        format: python
      return: 23
  - testcases:
    - expression: aantal_vers([[2, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 1], [1, 1, 1, 1,
        0, 1], [1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1]])
      description:
        description: "aantal_vers([[2, 1, 1, 0, 1, 1],\n             [0, 1, 0, 1,
          1, 1],\n             [1, 1, 1, 1, 0, 1],\n             [1, 1, 1, 1, 1, 1],\n\
          \             [1, 1, 0, 1, 1, 1]])"
        format: python
      return: 24
  - testcases:
    - expression: aantal_vers([[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [1,
        1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1,
        1, 1, 1, 1, 2, 1, 1]])
      description:
        description: "aantal_vers([[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1],\n\
          \             [1, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1],\n      \
          \       [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1]])"
        format: python
      return: 42
  - testcases:
    - expression: aantal_vers([[1, 1, 1, 1, 1], [0, 1, 2, 1, 1], [1, 0, 1, 2, 1],
        [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 0, 1], [2, 1, 1, 1, 1], [1, 1,
        1, 2, 1], [1, 0, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 0, 1, 1]])
      description:
        description: "aantal_vers([[1, 1, 1, 1, 1],\n             [0, 1, 2, 1, 1],\n\
          \             [1, 0, 1, 2, 1],\n             [1, 1, 1, 1, 1],\n        \
          \     [1, 1, 1, 1, 1],\n             [1, 1, 1, 0, 1],\n             [2,
          1, 1, 1, 1],\n             [1, 1, 1, 2, 1],\n             [1, 0, 1, 1, 1],\n\
          \             [1, 1, 1, 1, 1],\n             [1, 1, 0, 1, 1]])"
        format: python
      return: 46
  - testcases:
    - expression: aantal_vers([[1, 1, 2, 1, 1, 0, 0], [1, 2, 1, 1, 1, 0, 0], [1, 2,
        1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 1, 0], [1, 1, 1, 2, 1, 1, 1], [1, 1, 1, 1,
        1, 1, 1], [1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1]])
      description:
        description: "aantal_vers([[1, 1, 2, 1, 1, 0, 0],\n             [1, 2, 1,
          1, 1, 0, 0],\n             [1, 2, 1, 0, 0, 1, 1],\n             [1, 1, 0,
          1, 1, 1, 0],\n             [1, 1, 1, 2, 1, 1, 1],\n             [1, 1, 1,
          1, 1, 1, 1],\n             [1, 1, 0, 1, 1, 1, 1],\n             [1, 0, 1,
          1, 1, 1, 1]])"
        format: python
      return: 42
  - testcases:
    - expression: aantal_vers([[1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1], [1, 1,
        0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1], [2, 1, 1, 1, 2, 1, 1], [1, 1, 1, 1,
        1, 0, 1], [2, 1, 1, 1, 1, 2, 1], [0, 0, 1, 1, 1, 1, 1], [1, 2, 0, 1, 1, 1,
        1]])
      description:
        description: "aantal_vers([[1, 1, 1, 1, 1, 1, 0],\n             [0, 1, 1,
          1, 1, 1, 1],\n             [1, 1, 0, 1, 1, 1, 1],\n             [1, 1, 1,
          1, 0, 1, 1],\n             [2, 1, 1, 1, 2, 1, 1],\n             [1, 1, 1,
          1, 1, 0, 1],\n             [2, 1, 1, 1, 1, 2, 1],\n             [0, 0, 1,
          1, 1, 1, 1],\n             [1, 2, 0, 1, 1, 1, 1]])"
        format: python
      return: 50
  - testcases:
    - expression: aantal_vers([[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1,
        1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 2, 1], [1, 1, 1, 1],
        [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1,
        1, 1, 1], [1, 1, 1, 1], [2, 1, 1, 1], [1, 2, 1, 1], [1, 1, 1, 2], [1, 1, 1,
        1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]])
      description:
        description: "aantal_vers([[1, 1, 1, 1],\n             [1, 1, 1, 1],\n   \
          \          [1, 1, 1, 1],\n             [1, 1, 1, 1],\n             [1, 1,
          1, 1],\n             [1, 1, 1, 1],\n             [1, 1, 1, 1],\n       \
          \      [1, 1, 2, 1],\n             [1, 1, 1, 1],\n             [1, 1, 1,
          1],\n             [1, 1, 1, 1],\n             [1, 1, 1, 1],\n          \
          \   [1, 1, 1, 1],\n             [1, 1, 1, 1],\n             [1, 1, 1, 1],\n\
          \             [1, 1, 1, 1],\n             [2, 1, 1, 1],\n             [1,
          2, 1, 1],\n             [1, 1, 1, 2],\n             [1, 1, 1, 1],\n    \
          \         [1, 1, 1, 1],\n             [1, 1, 1, 1],\n             [1, 1,
          1, 1],\n             [1, 1, 1, 1]])"
        format: python
      return: 92
  - testcases:
    - expression: aantal_vers([[1, 1, 1, 0], [1, 1, 2, 1], [1, 1, 1, 1], [1, 1, 1,
        1], [1, 1, 2, 1], [1, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1],
        [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1,
        1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1,
        1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [2, 1, 0, 1], [1, 1, 1, 1]])
      description:
        description: "aantal_vers([[1, 1, 1, 0],\n             [1, 1, 2, 1],\n   \
          \          [1, 1, 1, 1],\n             [1, 1, 1, 1],\n             [1, 1,
          2, 1],\n             [1, 1, 1, 0],\n             [1, 1, 1, 1],\n       \
          \      [1, 1, 1, 1],\n             [1, 1, 1, 1],\n             [1, 1, 1,
          1],\n             [1, 1, 1, 1],\n             [1, 1, 1, 1],\n          \
          \   [1, 1, 1, 1],\n             [1, 1, 1, 1],\n             [1, 1, 1, 1],\n\
          \             [1, 1, 1, 1],\n             [1, 1, 1, 0],\n             [1,
          1, 1, 1],\n             [1, 1, 1, 1],\n             [1, 1, 1, 1],\n    \
          \         [1, 1, 1, 1],\n             [1, 1, 1, 1],\n             [1, 1,
          1, 1],\n             [2, 1, 0, 1],\n             [1, 1, 1, 1]])"
        format: python
      return: 93
  - testcases:
    - expression: aantal_vers([[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1,
        1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,
        1]])
      description:
        description: "aantal_vers([[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1],\n             [1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1],\n             [1, 1, 1, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1,
          1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1,
          1, 1, 1]])"
        format: python
      return: 105
  - testcases:
    - expression: aantal_vers([[1, 1, 1, 1, 1], [0, 0, 0, 2, 1], [1, 0, 1, 2, 0],
        [1, 0, 0, 1, 1], [0, 1, 1, 1, 1], [0, 1, 0, 1, 1], [1, 1, 1, 1, 1], [0, 0,
        1, 1, 0], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1,
        1], [1, 1, 0, 0, 1], [1, 1, 0, 1, 1], [1, 1, 1, 1, 1], [1, 1, 0, 1, 1], [1,
        1, 1, 1, 0], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [0, 1, 0, 1, 1], [1, 1, 1,
        1, 1], [1, 1, 1, 1, 1], [0, 0, 1, 1, 0], [1, 1, 1, 1, 1], [0, 0, 1, 1, 1]])
      description:
        description: "aantal_vers([[1, 1, 1, 1, 1],\n             [0, 0, 0, 2, 1],\n\
          \             [1, 0, 1, 2, 0],\n             [1, 0, 0, 1, 1],\n        \
          \     [0, 1, 1, 1, 1],\n             [0, 1, 0, 1, 1],\n             [1,
          1, 1, 1, 1],\n             [0, 0, 1, 1, 0],\n             [1, 1, 1, 1, 1],\n\
          \             [1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1],\n        \
          \     [1, 1, 1, 1, 1],\n             [1, 1, 0, 0, 1],\n             [1,
          1, 0, 1, 1],\n             [1, 1, 1, 1, 1],\n             [1, 1, 0, 1, 1],\n\
          \             [1, 1, 1, 1, 0],\n             [1, 1, 1, 1, 1],\n        \
          \     [1, 1, 1, 1, 1],\n             [0, 1, 0, 1, 1],\n             [1,
          1, 1, 1, 1],\n             [1, 1, 1, 1, 1],\n             [0, 0, 1, 1, 0],\n\
          \             [1, 1, 1, 1, 1],\n             [0, 0, 1, 1, 1]])"
        format: python
      return: 98
  - testcases:
    - expression: aantal_vers([[0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2], [1, 1, 1, 1,
        1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,
        1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 0, 1, 1, 1]])
      description:
        description: "aantal_vers([[0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n         \
          \    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n             [1, 1, 1, 1, 1, 1,
          1, 1, 0, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 0, 0, 1, 1, 1,
          1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n     \
          \        [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n             [1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 0, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 0, 1, 1, 1]])"
        format: python
      return: 155
  - testcases:
    - expression: aantal_vers([[1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1,
        1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2,
        1, 1, 1, 1, 1, 2, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1]])
      description:
        description: "aantal_vers([[1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1],\n          \
          \   [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1],\n             [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n     \
          \        [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1],\n             [0, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 0],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n  \
          \           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \             [2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1],\n             [1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \             [1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1]])"
        format: python
      return: 156
  - testcases:
    - expression: aantal_vers([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1,
        1, 2, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1,
        1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0,
        1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1]])
      description:
        description: "aantal_vers([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n       \
          \      [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
          1],\n             [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1],\n             [0,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1],\n             [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n     \
          \        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 0, 1, 1, 1, 1,
          1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n     \
          \        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1],\n             [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n             [1,
          2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])"
        format: python
      return: 232
  - testcases:
    - expression: aantal_vers([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1,
        1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1], [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 2, 1,
        1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1,
        1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1]])
      description:
        description: "aantal_vers([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    \
          \         [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1],\n             [1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \             [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],\n             [1,
          1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 0, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],\n\
          \             [1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],\n\
          \             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1]])"
        format: python
      return: 249
  - testcases:
    - expression: aantal_vers([[1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
        1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0,
        1], [2, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1,
        2, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 2, 0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1,
        1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1,
        1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1,
        1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,
        0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        0, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 0, 1, 1,
        1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1,
        1, 1, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0,
        0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0,
        0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]])
      description:
        description: "aantal_vers([[1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1],\n             [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
          0, 1, 1, 1, 1, 1, 1, 0, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
          1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1],\n             [2, 1, 1, 1, 1, 1, 0,
          1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1],\n             [1, 2, 1, 0,
          0, 1, 1, 0, 1, 1, 0, 1, 1, 2, 0, 1, 1, 1, 1, 1, 0, 1],\n             [1,
          0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1],\n      \
          \       [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          0],\n             [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
          1, 1, 0, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,
          1, 1, 1, 1, 1, 1, 1],\n             [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0,
          1, 1, 1, 1, 0, 0, 1, 0, 1, 0],\n             [1, 1, 1, 1, 0, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1],\n             [1, 1, 1, 0, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1],\n             [1, 1, 1,
          1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 0, 1, 1, 1, 1, 1, 1, 1],\n            \
          \ [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1],\n\
          \             [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,
          1, 0, 0],\n             [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1,
          1, 1, 1, 1, 1, 1],\n             [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
          0, 1, 1, 1, 1, 1, 1, 1, 1]])"
        format: python
      return: 301
  - testcases:
    - expression: aantal_vers([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 2, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
        1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 2, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
        1, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,
        1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1,
        0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
        1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [1, 1, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
        1, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 2, 1], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
        1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1]])
      description:
        description: "aantal_vers([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 2, 0, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1,
          1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1],\n             [1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n\
          \             [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          0, 0, 1, 1, 0],\n             [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 0, 1, 1, 0,
          1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1],\n             [1, 1, 1, 1,
          1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1],\n         \
          \    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n             [1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [0, 1,
          0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n   \
          \          [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1],\n             [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 0, 1, 1],\n             [1, 1, 0, 1, 1, 1, 1, 1, 0, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [1, 1, 2, 0, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],\n            \
          \ [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
          1],\n             [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 2, 1],\n             [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n             [0, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1],\n             [1, 0, 1,
          0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      \
          \       [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1]])"
        format: python
      return: 497
- tab: Feedback rot_fruit
  contexts:
  - testcases:
    - expression: rot_fruit([[0, 2]])
      description:
        description: rot_fruit([[0, 2]])
        format: python
      return: 0
  - testcases:
    - expression: rot_fruit([[2, 1, 1], [1, 1, 0], [0, 1, 1]])
      description:
        description: "rot_fruit([[2, 1, 1],\n           [1, 1, 0],\n           [0,
          1, 1]])"
        format: python
      return: 4
  - testcases:
    - expression: rot_fruit([[2, 1, 1], [0, 1, 1], [1, 0, 1]])
      description:
        description: "rot_fruit([[2, 1, 1],\n           [0, 1, 1],\n           [1,
          0, 1]])"
        format: python
      return: -1
  - testcases:
    - expression: rot_fruit([[2, 1, 0], [1, 0, 0], [0, 0, 1]])
      description:
        description: "rot_fruit([[2, 1, 0],\n           [1, 0, 0],\n           [0,
          0, 1]])"
        format: python
      return: -1
  - testcases:
    - expression: rot_fruit([[1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 2, 1, 1, 1, 1, 1,
        1], [1, 2, 1, 1, 2, 1, 1, 1, 1]])
      description:
        description: "rot_fruit([[1, 1, 1, 0, 1, 1, 1, 1, 1],\n           [1, 1, 2,
          1, 1, 1, 1, 1, 1],\n           [1, 2, 1, 1, 2, 1, 1, 1, 1]])"
        format: python
      return: 6
  - testcases:
    - expression: rot_fruit([[2, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 1], [1, 1, 1, 1,
        0, 1], [1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1]])
      description:
        description: "rot_fruit([[2, 1, 1, 0, 1, 1],\n           [0, 1, 0, 1, 1, 1],\n\
          \           [1, 1, 1, 1, 0, 1],\n           [1, 1, 1, 1, 1, 1],\n      \
          \     [1, 1, 0, 1, 1, 1]])"
        format: python
      return: 9
  - testcases:
    - expression: rot_fruit([[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [1,
        1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1,
        1, 1, 1, 1, 2, 1, 1]])
      description:
        description: "rot_fruit([[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1],\n\
          \           [1, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1],\n        \
          \   [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1]])"
        format: python
      return: -1
  - testcases:
    - expression: rot_fruit([[1, 1, 1, 1, 1], [0, 1, 2, 1, 1], [1, 0, 1, 2, 1], [1,
        1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 0, 1], [2, 1, 1, 1, 1], [1, 1, 1,
        2, 1], [1, 0, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 0, 1, 1]])
      description:
        description: "rot_fruit([[1, 1, 1, 1, 1],\n           [0, 1, 2, 1, 1],\n \
          \          [1, 0, 1, 2, 1],\n           [1, 1, 1, 1, 1],\n           [1,
          1, 1, 1, 1],\n           [1, 1, 1, 0, 1],\n           [2, 1, 1, 1, 1],\n\
          \           [1, 1, 1, 2, 1],\n           [1, 0, 1, 1, 1],\n           [1,
          1, 1, 1, 1],\n           [1, 1, 0, 1, 1]])"
        format: python
      return: 5
  - testcases:
    - expression: rot_fruit([[1, 1, 2, 1, 1, 0, 0], [1, 2, 1, 1, 1, 0, 0], [1, 2,
        1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 1, 0], [1, 1, 1, 2, 1, 1, 1], [1, 1, 1, 1,
        1, 1, 1], [1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1]])
      description:
        description: "rot_fruit([[1, 1, 2, 1, 1, 0, 0],\n           [1, 2, 1, 1, 1,
          0, 0],\n           [1, 2, 1, 0, 0, 1, 1],\n           [1, 1, 0, 1, 1, 1,
          0],\n           [1, 1, 1, 2, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1],\n\
          \           [1, 1, 0, 1, 1, 1, 1],\n           [1, 0, 1, 1, 1, 1, 1]])"
        format: python
      return: 6
  - testcases:
    - expression: rot_fruit([[1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1], [1, 1,
        0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1], [2, 1, 1, 1, 2, 1, 1], [1, 1, 1, 1,
        1, 0, 1], [2, 1, 1, 1, 1, 2, 1], [0, 0, 1, 1, 1, 1, 1], [1, 2, 0, 1, 1, 1,
        1]])
      description:
        description: "rot_fruit([[1, 1, 1, 1, 1, 1, 0],\n           [0, 1, 1, 1, 1,
          1, 1],\n           [1, 1, 0, 1, 1, 1, 1],\n           [1, 1, 1, 1, 0, 1,
          1],\n           [2, 1, 1, 1, 2, 1, 1],\n           [1, 1, 1, 1, 1, 0, 1],\n\
          \           [2, 1, 1, 1, 1, 2, 1],\n           [0, 0, 1, 1, 1, 1, 1],\n\
          \           [1, 2, 0, 1, 1, 1, 1]])"
        format: python
      return: 6
  - testcases:
    - expression: rot_fruit([[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1],
        [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 2, 1], [1, 1, 1, 1], [1,
        1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1,
        1], [1, 1, 1, 1], [2, 1, 1, 1], [1, 2, 1, 1], [1, 1, 1, 2], [1, 1, 1, 1],
        [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]])
      description:
        description: "rot_fruit([[1, 1, 1, 1],\n           [1, 1, 1, 1],\n       \
          \    [1, 1, 1, 1],\n           [1, 1, 1, 1],\n           [1, 1, 1, 1],\n\
          \           [1, 1, 1, 1],\n           [1, 1, 1, 1],\n           [1, 1, 2,
          1],\n           [1, 1, 1, 1],\n           [1, 1, 1, 1],\n           [1,
          1, 1, 1],\n           [1, 1, 1, 1],\n           [1, 1, 1, 1],\n        \
          \   [1, 1, 1, 1],\n           [1, 1, 1, 1],\n           [1, 1, 1, 1],\n\
          \           [2, 1, 1, 1],\n           [1, 2, 1, 1],\n           [1, 1, 1,
          2],\n           [1, 1, 1, 1],\n           [1, 1, 1, 1],\n           [1,
          1, 1, 1],\n           [1, 1, 1, 1],\n           [1, 1, 1, 1]])"
        format: python
      return: 9
  - testcases:
    - expression: rot_fruit([[1, 1, 1, 0], [1, 1, 2, 1], [1, 1, 1, 1], [1, 1, 1, 1],
        [1, 1, 2, 1], [1, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1,
        1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1,
        1], [1, 1, 1, 1], [1, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1],
        [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [2, 1, 0, 1], [1, 1, 1, 1]])
      description:
        description: "rot_fruit([[1, 1, 1, 0],\n           [1, 1, 2, 1],\n       \
          \    [1, 1, 1, 1],\n           [1, 1, 1, 1],\n           [1, 1, 2, 1],\n\
          \           [1, 1, 1, 0],\n           [1, 1, 1, 1],\n           [1, 1, 1,
          1],\n           [1, 1, 1, 1],\n           [1, 1, 1, 1],\n           [1,
          1, 1, 1],\n           [1, 1, 1, 1],\n           [1, 1, 1, 1],\n        \
          \   [1, 1, 1, 1],\n           [1, 1, 1, 1],\n           [1, 1, 1, 1],\n\
          \           [1, 1, 1, 0],\n           [1, 1, 1, 1],\n           [1, 1, 1,
          1],\n           [1, 1, 1, 1],\n           [1, 1, 1, 1],\n           [1,
          1, 1, 1],\n           [1, 1, 1, 1],\n           [2, 1, 0, 1],\n        \
          \   [1, 1, 1, 1]])"
        format: python
      return: 11
  - testcases:
    - expression: rot_fruit([[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1], [1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1,
        1, 0, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1]])
      description:
        description: "rot_fruit([[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1],\n           [1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1],\n           [1, 1, 1, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1,
          1],\n           [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \           [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1]])"
        format: python
      return: 14
  - testcases:
    - expression: rot_fruit([[1, 1, 1, 1, 1], [0, 0, 0, 2, 1], [1, 0, 1, 2, 0], [1,
        0, 0, 1, 1], [0, 1, 1, 1, 1], [0, 1, 0, 1, 1], [1, 1, 1, 1, 1], [0, 0, 1,
        1, 0], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1],
        [1, 1, 0, 0, 1], [1, 1, 0, 1, 1], [1, 1, 1, 1, 1], [1, 1, 0, 1, 1], [1, 1,
        1, 1, 0], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [0, 1, 0, 1, 1], [1, 1, 1, 1,
        1], [1, 1, 1, 1, 1], [0, 0, 1, 1, 0], [1, 1, 1, 1, 1], [0, 0, 1, 1, 1]])
      description:
        description: "rot_fruit([[1, 1, 1, 1, 1],\n           [0, 0, 0, 2, 1],\n \
          \          [1, 0, 1, 2, 0],\n           [1, 0, 0, 1, 1],\n           [0,
          1, 1, 1, 1],\n           [0, 1, 0, 1, 1],\n           [1, 1, 1, 1, 1],\n\
          \           [0, 0, 1, 1, 0],\n           [1, 1, 1, 1, 1],\n           [1,
          1, 1, 1, 1],\n           [1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1],\n\
          \           [1, 1, 0, 0, 1],\n           [1, 1, 0, 1, 1],\n           [1,
          1, 1, 1, 1],\n           [1, 1, 0, 1, 1],\n           [1, 1, 1, 1, 0],\n\
          \           [1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1],\n           [0,
          1, 0, 1, 1],\n           [1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1],\n\
          \           [0, 0, 1, 1, 0],\n           [1, 1, 1, 1, 1],\n           [0,
          0, 1, 1, 1]])"
        format: python
      return: -1
  - testcases:
    - expression: rot_fruit([[0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2], [1, 1, 1, 1, 1,
        1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,
        1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        0, 1, 1, 1]])
      description:
        description: "rot_fruit([[0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 2],\n           [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
          1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 0, 1,
          1, 1, 1, 0, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1],\n           [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]])"
        format: python
      return: 21
  - testcases:
    - expression: rot_fruit([[1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1, 1,
        1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2,
        1, 1, 1, 1, 1, 2, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1]])
      description:
        description: "rot_fruit([[1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1],\n           [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1,
          1, 0, 1, 1, 1, 1, 1, 1],\n           [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n\
          \           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n \
          \          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [2, 1, 1, 1, 1,
          1, 2, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    \
          \       [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 2, 2, 1,
          1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])"
        format: python
      return: 11
  - testcases:
    - expression: rot_fruit([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1,
        2, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1,
        1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0, 1,
        1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1]])
      description:
        description: "rot_fruit([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n         \
          \  [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],\n \
          \          [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1],\n           [0, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \           [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1],\n           [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n          \
          \ [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 0,
          1, 1, 1, 1, 1],\n           [1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])"
        format: python
      return: 17
  - testcases:
    - expression: rot_fruit([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1,
        1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 2, 1, 1,
        1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1,
        1, 1, 1, 1, 0, 1, 1, 1], [1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1]])
      description:
        description: "rot_fruit([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      \
          \     [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1],\n           [1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n          \
          \ [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1,
          2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],\n           [1, 1, 1, 1, 2, 1, 1, 1, 1,
          0, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],\n    \
          \       [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],\n           [1, 2, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n          \
          \ [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],\n           [1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])"
        format: python
      return: 18
  - testcases:
    - expression: rot_fruit([[1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
        0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1],
        [2, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 2,
        1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 2, 0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1,
        0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1,
        1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 1,
        1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0,
        1, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
        1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 0, 1, 1, 1,
        1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,
        1, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0,
        1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]])
      description:
        description: "rot_fruit([[1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1],\n           [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0,
          1, 1, 1, 1, 1, 1, 0, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
          1, 1, 1, 0, 1, 1, 1, 0, 0, 1],\n           [2, 1, 1, 1, 1, 1, 0, 1, 2, 1,
          1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1],\n           [1, 2, 1, 0, 0, 1, 1, 0,
          1, 1, 0, 1, 1, 2, 0, 1, 1, 1, 1, 1, 0, 1],\n           [1, 0, 1, 1, 0, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1],\n           [1, 1, 1, 1,
          1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n           [1, 1,
          1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],\n         \
          \  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \           [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0,
          1, 0],\n           [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
          1, 1, 1, 1],\n           [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
          1, 1, 1, 1, 0, 1],\n           [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2,
          0, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1,
          1, 1, 1, 0, 1, 1, 1, 1, 1, 1],\n           [1, 1, 0, 1, 1, 1, 0, 1, 1, 1,
          1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0],\n           [1, 1, 1, 1, 0, 1, 1, 0,
          1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n           [0, 0, 1, 1, 1, 1,
          1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]])"
        format: python
      return: -1
  - testcases:
    - expression: rot_fruit([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        2, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
        1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 2, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
        0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,
        1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
        1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1,
        1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [1, 1, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
        0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 2, 1], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
        1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1]])
      description:
        description: "rot_fruit([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 2, 0, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1,
          0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1],\n           [1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n         \
          \  [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
          0],\n           [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,
          0, 1, 1, 1, 1, 1, 1, 0, 1],\n           [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
          1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      \
          \     [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
          1, 0],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1],\n           [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
          1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 0, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1],\n           [1, 1,
          0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n   \
          \        [1, 1, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 0, 1],\n           [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
          1, 0, 1, 1, 1, 1, 1],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1],\n           [1, 1, 0, 1, 1, 1, 1, 1, 0,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [0, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1],\n           [1,
          0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \           [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1]])"
        format: python
      return: -1
