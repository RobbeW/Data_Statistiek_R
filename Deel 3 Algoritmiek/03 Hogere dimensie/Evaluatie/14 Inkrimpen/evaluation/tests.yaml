- tab: Feedback bepaal_factor
  contexts:
  - testcases:
    - expression: bepaal_factor([[2, 3], [1, 0]])
      description:
        description: "bepaal_factor([[2, 3],\n               [1, 0]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[1, 1, 2, 2], [1, 1, 2, 2], [3, 3, 0, 0], [3, 3,
        0, 0]])
      description:
        description: "bepaal_factor([[1, 1, 2, 2],\n               [1, 1, 2, 2],\n\
          \               [3, 3, 0, 0],\n               [3, 3, 0, 0]])"
        format: python
      return: 2
  - testcases:
    - expression: bepaal_factor([[5, 5, 1, 1], [5, 5, 1, 1], [3, 3, 2, 2], [3, 3,
        2, 2]])
      description:
        description: "bepaal_factor([[5, 5, 1, 1],\n               [5, 5, 1, 1],\n\
          \               [3, 3, 2, 2],\n               [3, 3, 2, 2]])"
        format: python
      return: 2
  - testcases:
    - expression: bepaal_factor([[3, 7, 14, 21, 20], [18, 0, 8, 22, 17], [4, 11, 6,
        9, 12], [5, 15, 13, 2, 23], [1, 16, 24, 10, 19]])
      description:
        description: "bepaal_factor([[ 3,  7, 14, 21, 20],\n               [18,  0,\
          \  8, 22, 17],\n               [ 4, 11,  6,  9, 12],\n               [ 5,
          15, 13,  2, 23],\n               [ 1, 16, 24, 10, 19]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[15, 17, 33, 28, 2, 27], [19, 9, 14, 32, 6, 4], [10,
        22, 8, 20, 7, 24], [12, 31, 25, 13, 35, 3], [34, 21, 11, 5, 16, 0], [1, 26,
        30, 29, 18, 23]])
      description:
        description: "bepaal_factor([[15, 17, 33, 28,  2, 27],\n               [19,\
          \  9, 14, 32,  6,  4],\n               [10, 22,  8, 20,  7, 24],\n     \
          \          [12, 31, 25, 13, 35,  3],\n               [34, 21, 11,  5, 16,\
          \  0],\n               [ 1, 26, 30, 29, 18, 23]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[29, 22, 13, 27, 14, 20], [15, 35, 17, 21, 6, 19],
        [10, 2, 4, 9, 32, 1], [25, 11, 3, 16, 0, 18], [7, 28, 30, 5, 26, 33], [23,
        34, 31, 8, 24, 12]])
      description:
        description: "bepaal_factor([[29, 22, 13, 27, 14, 20],\n               [15,
          35, 17, 21,  6, 19],\n               [10,  2,  4,  9, 32,  1],\n       \
          \        [25, 11,  3, 16,  0, 18],\n               [ 7, 28, 30,  5, 26,
          33],\n               [23, 34, 31,  8, 24, 12]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[35, 20, 2, 29, 27, 14], [31, 21, 7, 32, 9, 34],
        [3, 15, 16, 1, 5, 12], [0, 26, 17, 28, 4, 8], [25, 19, 18, 22, 11, 13], [6,
        23, 10, 30, 24, 33]])
      description:
        description: "bepaal_factor([[35, 20,  2, 29, 27, 14],\n               [31,
          21,  7, 32,  9, 34],\n               [ 3, 15, 16,  1,  5, 12],\n       \
          \        [ 0, 26, 17, 28,  4,  8],\n               [25, 19, 18, 22, 11,
          13],\n               [ 6, 23, 10, 30, 24, 33]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0,
        0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]])
      description:
        description: "bepaal_factor([[0, 0, 0, 0, 0, 0],\n               [0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0],\n               [0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0],\n               [0, 0, 0,
          0, 0, 0]])"
        format: python
      return: 6
  - testcases:
    - expression: bepaal_factor([[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0,
        0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0,
        0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "bepaal_factor([[0, 0, 0, 0, 0, 0, 0],\n               [0, 0,
          0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0],\n               [0,
          0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0],\n            \
          \   [0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return: 7
  - testcases:
    - expression: bepaal_factor([[3, 3, 8, 8, 5, 5, 1, 1], [3, 3, 8, 8, 5, 5, 1, 1],
        [10, 10, 15, 15, 7, 7, 12, 12], [10, 10, 15, 15, 7, 7, 12, 12], [13, 13, 14,
        14, 2, 2, 4, 4], [13, 13, 14, 14, 2, 2, 4, 4], [11, 11, 0, 0, 9, 9, 6, 6],
        [11, 11, 0, 0, 9, 9, 6, 6]])
      description:
        description: "bepaal_factor([[ 3,  3,  8,  8,  5,  5,  1,  1],\n         \
          \      [ 3,  3,  8,  8,  5,  5,  1,  1],\n               [10, 10, 15, 15,\
          \  7,  7, 12, 12],\n               [10, 10, 15, 15,  7,  7, 12, 12],\n \
          \              [13, 13, 14, 14,  2,  2,  4,  4],\n               [13, 13,
          14, 14,  2,  2,  4,  4],\n               [11, 11,  0,  0,  9,  9,  6,  6],\n\
          \               [11, 11,  0,  0,  9,  9,  6,  6]])"
        format: python
      return: 2
  - testcases:
    - expression: bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0,
        0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0,
        0, 0]])
      description:
        description: "bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0],\n               [0,
          0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0],\n      \
          \         [0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0,
          0],\n               [0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0,
          0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return: 8
  - testcases:
    - expression: bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        \
          \       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            \
          \   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return: 11
  - testcases:
    - expression: bepaal_factor([[6, 6, 14, 14, 16, 16, 32, 32, 4, 4, 24, 24], [6,
        6, 14, 14, 16, 16, 32, 32, 4, 4, 24, 24], [10, 10, 3, 3, 31, 31, 26, 26, 11,
        11, 0, 0], [10, 10, 3, 3, 31, 31, 26, 26, 11, 11, 0, 0], [15, 15, 1, 1, 25,
        25, 7, 7, 23, 23, 17, 17], [15, 15, 1, 1, 25, 25, 7, 7, 23, 23, 17, 17], [22,
        22, 34, 34, 20, 20, 8, 8, 2, 2, 27, 27], [22, 22, 34, 34, 20, 20, 8, 8, 2,
        2, 27, 27], [18, 18, 5, 5, 30, 30, 35, 35, 12, 12, 19, 19], [18, 18, 5, 5,
        30, 30, 35, 35, 12, 12, 19, 19], [29, 29, 13, 13, 28, 28, 9, 9, 33, 33, 21,
        21], [29, 29, 13, 13, 28, 28, 9, 9, 33, 33, 21, 21]])
      description:
        description: "bepaal_factor([[ 6,  6, 14, 14, 16, 16, 32, 32,  4,  4, 24,
          24],\n               [ 6,  6, 14, 14, 16, 16, 32, 32,  4,  4, 24, 24],\n\
          \               [10, 10,  3,  3, 31, 31, 26, 26, 11, 11,  0,  0],\n    \
          \           [10, 10,  3,  3, 31, 31, 26, 26, 11, 11,  0,  0],\n        \
          \       [15, 15,  1,  1, 25, 25,  7,  7, 23, 23, 17, 17],\n            \
          \   [15, 15,  1,  1, 25, 25,  7,  7, 23, 23, 17, 17],\n               [22,
          22, 34, 34, 20, 20,  8,  8,  2,  2, 27, 27],\n               [22, 22, 34,
          34, 20, 20,  8,  8,  2,  2, 27, 27],\n               [18, 18,  5,  5, 30,
          30, 35, 35, 12, 12, 19, 19],\n               [18, 18,  5,  5, 30, 30, 35,
          35, 12, 12, 19, 19],\n               [29, 29, 13, 13, 28, 28,  9,  9, 33,
          33, 21, 21],\n               [29, 29, 13, 13, 28, 28,  9,  9, 33, 33, 21,
          21]])"
        format: python
      return: 2
  - testcases:
    - expression: bepaal_factor([[7, 7, 7, 13, 13, 13, 9, 9, 9, 15, 15, 15], [7, 7,
        7, 13, 13, 13, 9, 9, 9, 15, 15, 15], [7, 7, 7, 13, 13, 13, 9, 9, 9, 15, 15,
        15], [11, 11, 11, 0, 0, 0, 5, 5, 5, 6, 6, 6], [11, 11, 11, 0, 0, 0, 5, 5,
        5, 6, 6, 6], [11, 11, 11, 0, 0, 0, 5, 5, 5, 6, 6, 6], [8, 8, 8, 2, 2, 2, 12,
        12, 12, 4, 4, 4], [8, 8, 8, 2, 2, 2, 12, 12, 12, 4, 4, 4], [8, 8, 8, 2, 2,
        2, 12, 12, 12, 4, 4, 4], [14, 14, 14, 3, 3, 3, 1, 1, 1, 10, 10, 10], [14,
        14, 14, 3, 3, 3, 1, 1, 1, 10, 10, 10], [14, 14, 14, 3, 3, 3, 1, 1, 1, 10,
        10, 10]])
      description:
        description: "bepaal_factor([[ 7,  7,  7, 13, 13, 13,  9,  9,  9, 15, 15,
          15],\n               [ 7,  7,  7, 13, 13, 13,  9,  9,  9, 15, 15, 15],\n\
          \               [ 7,  7,  7, 13, 13, 13,  9,  9,  9, 15, 15, 15],\n    \
          \           [11, 11, 11,  0,  0,  0,  5,  5,  5,  6,  6,  6],\n        \
          \       [11, 11, 11,  0,  0,  0,  5,  5,  5,  6,  6,  6],\n            \
          \   [11, 11, 11,  0,  0,  0,  5,  5,  5,  6,  6,  6],\n               [
          8,  8,  8,  2,  2,  2, 12, 12, 12,  4,  4,  4],\n               [ 8,  8,\
          \  8,  2,  2,  2, 12, 12, 12,  4,  4,  4],\n               [ 8,  8,  8,\
          \  2,  2,  2, 12, 12, 12,  4,  4,  4],\n               [14, 14, 14,  3,\
          \  3,  3,  1,  1,  1, 10, 10, 10],\n               [14, 14, 14,  3,  3,\
          \  3,  1,  1,  1, 10, 10, 10],\n               [14, 14, 14,  3,  3,  3,\
          \  1,  1,  1, 10, 10, 10]])"
        format: python
      return: 3
  - testcases:
    - expression: bepaal_factor([[0, 0, 31, 31, 21, 21, 25, 25, 33, 33, 5, 5], [0,
        0, 31, 31, 21, 21, 25, 25, 33, 33, 5, 5], [15, 15, 3, 3, 14, 14, 7, 7, 4,
        4, 6, 6], [15, 15, 3, 3, 14, 14, 7, 7, 4, 4, 6, 6], [32, 32, 28, 28, 23, 23,
        34, 34, 27, 27, 9, 9], [32, 32, 28, 28, 23, 23, 34, 34, 27, 27, 9, 9], [30,
        30, 26, 26, 17, 17, 13, 13, 24, 24, 16, 16], [30, 30, 26, 26, 17, 17, 13,
        13, 24, 24, 16, 16], [19, 19, 22, 22, 12, 12, 18, 18, 8, 8, 10, 10], [19,
        19, 22, 22, 12, 12, 18, 18, 8, 8, 10, 10], [2, 2, 11, 11, 29, 29, 20, 20,
        35, 35, 1, 1], [2, 2, 11, 11, 29, 29, 20, 20, 35, 35, 1, 1]])
      description:
        description: "bepaal_factor([[ 0,  0, 31, 31, 21, 21, 25, 25, 33, 33,  5,\
          \  5],\n               [ 0,  0, 31, 31, 21, 21, 25, 25, 33, 33,  5,  5],\n\
          \               [15, 15,  3,  3, 14, 14,  7,  7,  4,  4,  6,  6],\n    \
          \           [15, 15,  3,  3, 14, 14,  7,  7,  4,  4,  6,  6],\n        \
          \       [32, 32, 28, 28, 23, 23, 34, 34, 27, 27,  9,  9],\n            \
          \   [32, 32, 28, 28, 23, 23, 34, 34, 27, 27,  9,  9],\n               [30,
          30, 26, 26, 17, 17, 13, 13, 24, 24, 16, 16],\n               [30, 30, 26,
          26, 17, 17, 13, 13, 24, 24, 16, 16],\n               [19, 19, 22, 22, 12,
          12, 18, 18,  8,  8, 10, 10],\n               [19, 19, 22, 22, 12, 12, 18,
          18,  8,  8, 10, 10],\n               [ 2,  2, 11, 11, 29, 29, 20, 20, 35,
          35,  1,  1],\n               [ 2,  2, 11, 11, 29, 29, 20, 20, 35, 35,  1,\
          \  1]])"
        format: python
      return: 2
  - testcases:
    - expression: bepaal_factor([[11, 11, 28, 28, 14, 14, 10, 10, 32, 32, 3, 3], [11,
        11, 28, 28, 14, 14, 10, 10, 32, 32, 3, 3], [29, 29, 34, 34, 1, 1, 19, 19,
        25, 25, 5, 5], [29, 29, 34, 34, 1, 1, 19, 19, 25, 25, 5, 5], [31, 31, 26,
        26, 30, 30, 15, 15, 33, 33, 16, 16], [31, 31, 26, 26, 30, 30, 15, 15, 33,
        33, 16, 16], [27, 27, 35, 35, 0, 0, 20, 20, 17, 17, 13, 13], [27, 27, 35,
        35, 0, 0, 20, 20, 17, 17, 13, 13], [12, 12, 18, 18, 2, 2, 8, 8, 23, 23, 22,
        22], [12, 12, 18, 18, 2, 2, 8, 8, 23, 23, 22, 22], [9, 9, 24, 24, 7, 7, 21,
        21, 4, 4, 6, 6], [9, 9, 24, 24, 7, 7, 21, 21, 4, 4, 6, 6]])
      description:
        description: "bepaal_factor([[11, 11, 28, 28, 14, 14, 10, 10, 32, 32,  3,\
          \  3],\n               [11, 11, 28, 28, 14, 14, 10, 10, 32, 32,  3,  3],\n\
          \               [29, 29, 34, 34,  1,  1, 19, 19, 25, 25,  5,  5],\n    \
          \           [29, 29, 34, 34,  1,  1, 19, 19, 25, 25,  5,  5],\n        \
          \       [31, 31, 26, 26, 30, 30, 15, 15, 33, 33, 16, 16],\n            \
          \   [31, 31, 26, 26, 30, 30, 15, 15, 33, 33, 16, 16],\n               [27,
          27, 35, 35,  0,  0, 20, 20, 17, 17, 13, 13],\n               [27, 27, 35,
          35,  0,  0, 20, 20, 17, 17, 13, 13],\n               [12, 12, 18, 18,  2,\
          \  2,  8,  8, 23, 23, 22, 22],\n               [12, 12, 18, 18,  2,  2,\
          \  8,  8, 23, 23, 22, 22],\n               [ 9,  9, 24, 24,  7,  7, 21,
          21,  4,  4,  6,  6],\n               [ 9,  9, 24, 24,  7,  7, 21, 21,  4,\
          \  4,  6,  6]])"
        format: python
      return: 2
  - testcases:
    - expression: bepaal_factor([[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1,
        1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0,
        0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2],
        [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
        2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3,
        3, 2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2], [3, 3,
        3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2]])
      description:
        description: "bepaal_factor([[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n\
          \               [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n          \
          \     [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n               [1, 1,
          1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n               [1, 1, 1, 1, 1, 1,
          1, 0, 0, 0, 0, 0, 0, 0],\n               [1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
          0, 0, 0, 0],\n               [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n\
          \               [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2],\n          \
          \     [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2],\n               [3, 3,
          3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2],\n               [3, 3, 3, 3, 3, 3,
          3, 2, 2, 2, 2, 2, 2, 2],\n               [3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
          2, 2, 2, 2],\n               [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2],\n\
          \               [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2]])"
        format: python
      return: 7
  - testcases:
    - expression: bepaal_factor([[3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],
        [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],
        [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],
        [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],
        [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],
        [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "bepaal_factor([[3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
          1],\n               [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \               [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n    \
          \           [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n        \
          \       [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n            \
          \   [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n               [3,
          3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n               [3, 3, 3,
          3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n               [2, 2, 2, 2, 2,
          2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n               [2, 2, 2, 2, 2, 2, 2,
          2, 0, 0, 0, 0, 0, 0, 0, 0],\n               [2, 2, 2, 2, 2, 2, 2, 2, 0,
          0, 0, 0, 0, 0, 0, 0],\n               [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0,
          0, 0, 0, 0, 0],\n               [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0,
          0],\n               [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \               [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return: 8
  - testcases:
    - expression: bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            \
          \   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    \
          \           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return: 20
  - testcases:
    - expression: bepaal_factor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]])
      description:
        description: "bepaal_factor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0],\n               [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            \
          \   [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \               [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0],\n               [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            \
          \   [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \               [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
          3, 3, 3],\n               [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
          3, 3, 3, 3, 3, 3, 3],\n               [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
          3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n               [2, 2, 2, 2, 2, 2, 2,
          2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n               [2, 2, 2,
          2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n            \
          \   [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n\
          \               [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
          3, 3, 3],\n               [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
          3, 3, 3, 3, 3, 3, 3],\n               [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
          3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n               [2, 2, 2, 2, 2, 2, 2,
          2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n               [2, 2, 2,
          2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]])"
        format: python
      return: 11
  - testcases:
    - expression: bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])
      description:
        description: "bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
          2, 2, 2, 2, 2, 2, 2],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n               [0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n               [0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n            \
          \   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n\
          \               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2,
          2, 2, 2],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
          2, 2, 2, 2, 2, 2, 2],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n               [0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n               [0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n            \
          \   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n\
          \               [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1],\n               [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1],\n               [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n               [3, 3, 3, 3, 3, 3, 3,
          3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n               [3, 3, 3,
          3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            \
          \   [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \               [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1],\n               [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1],\n               [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n               [3, 3, 3, 3, 3, 3, 3,
          3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n               [3, 3, 3,
          3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])"
        format: python
      return: 11
  - testcases:
    - expression: bepaal_factor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2]])
      description:
        description: "bepaal_factor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1],\n               [3, 3, 3, 3, 3, 3, 3, 3, 3,
          3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n               [3, 3, 3,
          3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      \
          \         [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1],\n               [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1],\n               [3, 3, 3, 3, 3, 3, 3, 3, 3,
          3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n               [3, 3, 3,
          3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      \
          \         [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1],\n               [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1],\n               [3, 3, 3, 3, 3, 3, 3, 3, 3,
          3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n               [3, 3, 3,
          3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      \
          \         [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
          2, 2, 2, 2, 2, 2, 2, 2, 2],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n               [0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n      \
          \         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
          2, 2, 2],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
          2, 2, 2, 2, 2, 2, 2, 2, 2],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n               [0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n      \
          \         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
          2, 2, 2],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
          2, 2, 2, 2, 2, 2, 2, 2, 2],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n               [0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n      \
          \         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
          2, 2, 2]])"
        format: python
      return: 12
  - testcases:
    - expression: bepaal_factor([[10, 10, 10, 10, 35, 35, 35, 35, 22, 22, 22, 22,
        34, 34, 34, 34, 9, 9, 9, 9, 19, 19, 19, 19], [10, 10, 10, 10, 35, 35, 35,
        35, 22, 22, 22, 22, 34, 34, 34, 34, 9, 9, 9, 9, 19, 19, 19, 19], [10, 10,
        10, 10, 35, 35, 35, 35, 22, 22, 22, 22, 34, 34, 34, 34, 9, 9, 9, 9, 19, 19,
        19, 19], [10, 10, 10, 10, 35, 35, 35, 35, 22, 22, 22, 22, 34, 34, 34, 34,
        9, 9, 9, 9, 19, 19, 19, 19], [28, 28, 28, 28, 3, 3, 3, 3, 13, 13, 13, 13,
        17, 17, 17, 17, 12, 12, 12, 12, 15, 15, 15, 15], [28, 28, 28, 28, 3, 3, 3,
        3, 13, 13, 13, 13, 17, 17, 17, 17, 12, 12, 12, 12, 15, 15, 15, 15], [28, 28,
        28, 28, 3, 3, 3, 3, 13, 13, 13, 13, 17, 17, 17, 17, 12, 12, 12, 12, 15, 15,
        15, 15], [28, 28, 28, 28, 3, 3, 3, 3, 13, 13, 13, 13, 17, 17, 17, 17, 12,
        12, 12, 12, 15, 15, 15, 15], [27, 27, 27, 27, 30, 30, 30, 30, 23, 23, 23,
        23, 4, 4, 4, 4, 5, 5, 5, 5, 32, 32, 32, 32], [27, 27, 27, 27, 30, 30, 30,
        30, 23, 23, 23, 23, 4, 4, 4, 4, 5, 5, 5, 5, 32, 32, 32, 32], [27, 27, 27,
        27, 30, 30, 30, 30, 23, 23, 23, 23, 4, 4, 4, 4, 5, 5, 5, 5, 32, 32, 32, 32],
        [27, 27, 27, 27, 30, 30, 30, 30, 23, 23, 23, 23, 4, 4, 4, 4, 5, 5, 5, 5, 32,
        32, 32, 32], [14, 14, 14, 14, 33, 33, 33, 33, 18, 18, 18, 18, 21, 21, 21,
        21, 1, 1, 1, 1, 8, 8, 8, 8], [14, 14, 14, 14, 33, 33, 33, 33, 18, 18, 18,
        18, 21, 21, 21, 21, 1, 1, 1, 1, 8, 8, 8, 8], [14, 14, 14, 14, 33, 33, 33,
        33, 18, 18, 18, 18, 21, 21, 21, 21, 1, 1, 1, 1, 8, 8, 8, 8], [14, 14, 14,
        14, 33, 33, 33, 33, 18, 18, 18, 18, 21, 21, 21, 21, 1, 1, 1, 1, 8, 8, 8, 8],
        [24, 24, 24, 24, 0, 0, 0, 0, 2, 2, 2, 2, 20, 20, 20, 20, 7, 7, 7, 7, 29, 29,
        29, 29], [24, 24, 24, 24, 0, 0, 0, 0, 2, 2, 2, 2, 20, 20, 20, 20, 7, 7, 7,
        7, 29, 29, 29, 29], [24, 24, 24, 24, 0, 0, 0, 0, 2, 2, 2, 2, 20, 20, 20, 20,
        7, 7, 7, 7, 29, 29, 29, 29], [24, 24, 24, 24, 0, 0, 0, 0, 2, 2, 2, 2, 20,
        20, 20, 20, 7, 7, 7, 7, 29, 29, 29, 29], [6, 6, 6, 6, 26, 26, 26, 26, 31,
        31, 31, 31, 16, 16, 16, 16, 25, 25, 25, 25, 11, 11, 11, 11], [6, 6, 6, 6,
        26, 26, 26, 26, 31, 31, 31, 31, 16, 16, 16, 16, 25, 25, 25, 25, 11, 11, 11,
        11], [6, 6, 6, 6, 26, 26, 26, 26, 31, 31, 31, 31, 16, 16, 16, 16, 25, 25,
        25, 25, 11, 11, 11, 11], [6, 6, 6, 6, 26, 26, 26, 26, 31, 31, 31, 31, 16,
        16, 16, 16, 25, 25, 25, 25, 11, 11, 11, 11]])
      description:
        description: "bepaal_factor([[10, 10, 10, 10, 35, 35, 35, 35, 22, 22, 22,
          22, 34, 34, 34, 34,  9,  9,  9,  9, 19, 19, 19, 19],\n               [10,
          10, 10, 10, 35, 35, 35, 35, 22, 22, 22, 22, 34, 34, 34, 34,  9,  9,  9,\
          \  9, 19, 19, 19, 19],\n               [10, 10, 10, 10, 35, 35, 35, 35,
          22, 22, 22, 22, 34, 34, 34, 34,  9,  9,  9,  9, 19, 19, 19, 19],\n     \
          \          [10, 10, 10, 10, 35, 35, 35, 35, 22, 22, 22, 22, 34, 34, 34,
          34,  9,  9,  9,  9, 19, 19, 19, 19],\n               [28, 28, 28, 28,  3,\
          \  3,  3,  3, 13, 13, 13, 13, 17, 17, 17, 17, 12, 12, 12, 12, 15, 15, 15,
          15],\n               [28, 28, 28, 28,  3,  3,  3,  3, 13, 13, 13, 13, 17,
          17, 17, 17, 12, 12, 12, 12, 15, 15, 15, 15],\n               [28, 28, 28,
          28,  3,  3,  3,  3, 13, 13, 13, 13, 17, 17, 17, 17, 12, 12, 12, 12, 15,
          15, 15, 15],\n               [28, 28, 28, 28,  3,  3,  3,  3, 13, 13, 13,
          13, 17, 17, 17, 17, 12, 12, 12, 12, 15, 15, 15, 15],\n               [27,
          27, 27, 27, 30, 30, 30, 30, 23, 23, 23, 23,  4,  4,  4,  4,  5,  5,  5,\
          \  5, 32, 32, 32, 32],\n               [27, 27, 27, 27, 30, 30, 30, 30,
          23, 23, 23, 23,  4,  4,  4,  4,  5,  5,  5,  5, 32, 32, 32, 32],\n     \
          \          [27, 27, 27, 27, 30, 30, 30, 30, 23, 23, 23, 23,  4,  4,  4,\
          \  4,  5,  5,  5,  5, 32, 32, 32, 32],\n               [27, 27, 27, 27,
          30, 30, 30, 30, 23, 23, 23, 23,  4,  4,  4,  4,  5,  5,  5,  5, 32, 32,
          32, 32],\n               [14, 14, 14, 14, 33, 33, 33, 33, 18, 18, 18, 18,
          21, 21, 21, 21,  1,  1,  1,  1,  8,  8,  8,  8],\n               [14, 14,
          14, 14, 33, 33, 33, 33, 18, 18, 18, 18, 21, 21, 21, 21,  1,  1,  1,  1,\
          \  8,  8,  8,  8],\n               [14, 14, 14, 14, 33, 33, 33, 33, 18,
          18, 18, 18, 21, 21, 21, 21,  1,  1,  1,  1,  8,  8,  8,  8],\n         \
          \      [14, 14, 14, 14, 33, 33, 33, 33, 18, 18, 18, 18, 21, 21, 21, 21,\
          \  1,  1,  1,  1,  8,  8,  8,  8],\n               [24, 24, 24, 24,  0,\
          \  0,  0,  0,  2,  2,  2,  2, 20, 20, 20, 20,  7,  7,  7,  7, 29, 29, 29,
          29],\n               [24, 24, 24, 24,  0,  0,  0,  0,  2,  2,  2,  2, 20,
          20, 20, 20,  7,  7,  7,  7, 29, 29, 29, 29],\n               [24, 24, 24,
          24,  0,  0,  0,  0,  2,  2,  2,  2, 20, 20, 20, 20,  7,  7,  7,  7, 29,
          29, 29, 29],\n               [24, 24, 24, 24,  0,  0,  0,  0,  2,  2,  2,\
          \  2, 20, 20, 20, 20,  7,  7,  7,  7, 29, 29, 29, 29],\n               [
          6,  6,  6,  6, 26, 26, 26, 26, 31, 31, 31, 31, 16, 16, 16, 16, 25, 25, 25,
          25, 11, 11, 11, 11],\n               [ 6,  6,  6,  6, 26, 26, 26, 26, 31,
          31, 31, 31, 16, 16, 16, 16, 25, 25, 25, 25, 11, 11, 11, 11],\n         \
          \      [ 6,  6,  6,  6, 26, 26, 26, 26, 31, 31, 31, 31, 16, 16, 16, 16,
          25, 25, 25, 25, 11, 11, 11, 11],\n               [ 6,  6,  6,  6, 26, 26,
          26, 26, 31, 31, 31, 31, 16, 16, 16, 16, 25, 25, 25, 25, 11, 11, 11, 11]])"
        format: python
      return: 4
  - testcases:
    - expression: bepaal_factor([[2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3,
        3, 3, 6, 6, 6, 6, 6, 6], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3,
        3, 3, 6, 6, 6, 6, 6, 6], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3,
        3, 3, 6, 6, 6, 6, 6, 6], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3,
        3, 3, 6, 6, 6, 6, 6, 6], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3,
        3, 3, 6, 6, 6, 6, 6, 6], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3,
        3, 3, 6, 6, 6, 6, 6, 6], [15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14,
        13, 13, 13, 13, 13, 13, 9, 9, 9, 9, 9, 9], [15, 15, 15, 15, 15, 15, 14, 14,
        14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 9, 9, 9, 9, 9, 9], [15, 15, 15, 15,
        15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 9, 9, 9, 9, 9, 9],
        [15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 9,
        9, 9, 9, 9, 9], [15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13,
        13, 13, 13, 9, 9, 9, 9, 9, 9], [15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14,
        14, 13, 13, 13, 13, 13, 13, 9, 9, 9, 9, 9, 9], [11, 11, 11, 11, 11, 11, 12,
        12, 12, 12, 12, 12, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7], [11, 11, 11, 11,
        11, 11, 12, 12, 12, 12, 12, 12, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7], [11,
        11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7,
        7, 7], [11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 4, 4, 4, 4, 4, 4,
        7, 7, 7, 7, 7, 7], [11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 4, 4,
        4, 4, 4, 4, 7, 7, 7, 7, 7, 7], [11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12,
        12, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7], [8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5,
        5, 10, 10, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1], [8, 8, 8, 8, 8, 8, 5, 5, 5,
        5, 5, 5, 10, 10, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1], [8, 8, 8, 8, 8, 8, 5,
        5, 5, 5, 5, 5, 10, 10, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1], [8, 8, 8, 8, 8,
        8, 5, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1], [8, 8, 8,
        8, 8, 8, 5, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1], [8,
        8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1]])
      description:
        description: "bepaal_factor([[ 2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,\
          \  0,  3,  3,  3,  3,  3,  3,  6,  6,  6,  6,  6,  6],\n               [
          2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  3,  3,  3,  3,  3,  3, \
          \ 6,  6,  6,  6,  6,  6],\n               [ 2,  2,  2,  2,  2,  2,  0, \
          \ 0,  0,  0,  0,  0,  3,  3,  3,  3,  3,  3,  6,  6,  6,  6,  6,  6],\n\
          \               [ 2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  3,  3,\
          \  3,  3,  3,  3,  6,  6,  6,  6,  6,  6],\n               [ 2,  2,  2,\
          \  2,  2,  2,  0,  0,  0,  0,  0,  0,  3,  3,  3,  3,  3,  3,  6,  6,  6,\
          \  6,  6,  6],\n               [ 2,  2,  2,  2,  2,  2,  0,  0,  0,  0,\
          \  0,  0,  3,  3,  3,  3,  3,  3,  6,  6,  6,  6,  6,  6],\n           \
          \    [15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13,
          13,  9,  9,  9,  9,  9,  9],\n               [15, 15, 15, 15, 15, 15, 14,
          14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13,  9,  9,  9,  9,  9,  9],\n \
          \              [15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13,
          13, 13, 13, 13,  9,  9,  9,  9,  9,  9],\n               [15, 15, 15, 15,
          15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13,  9,  9,  9,  9,\
          \  9,  9],\n               [15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14,
          14, 13, 13, 13, 13, 13, 13,  9,  9,  9,  9,  9,  9],\n               [15,
          15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13,  9,\
          \  9,  9,  9,  9,  9],\n               [11, 11, 11, 11, 11, 11, 12, 12,
          12, 12, 12, 12,  4,  4,  4,  4,  4,  4,  7,  7,  7,  7,  7,  7],\n     \
          \          [11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12,  4,  4,  4,\
          \  4,  4,  4,  7,  7,  7,  7,  7,  7],\n               [11, 11, 11, 11,
          11, 11, 12, 12, 12, 12, 12, 12,  4,  4,  4,  4,  4,  4,  7,  7,  7,  7,\
          \  7,  7],\n               [11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12,
          12,  4,  4,  4,  4,  4,  4,  7,  7,  7,  7,  7,  7],\n               [11,
          11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12,  4,  4,  4,  4,  4,  4,  7,\
          \  7,  7,  7,  7,  7],\n               [11, 11, 11, 11, 11, 11, 12, 12,
          12, 12, 12, 12,  4,  4,  4,  4,  4,  4,  7,  7,  7,  7,  7,  7],\n     \
          \          [ 8,  8,  8,  8,  8,  8,  5,  5,  5,  5,  5,  5, 10, 10, 10,
          10, 10, 10,  1,  1,  1,  1,  1,  1],\n               [ 8,  8,  8,  8,  8,\
          \  8,  5,  5,  5,  5,  5,  5, 10, 10, 10, 10, 10, 10,  1,  1,  1,  1,  1,\
          \  1],\n               [ 8,  8,  8,  8,  8,  8,  5,  5,  5,  5,  5,  5,
          10, 10, 10, 10, 10, 10,  1,  1,  1,  1,  1,  1],\n               [ 8,  8,\
          \  8,  8,  8,  8,  5,  5,  5,  5,  5,  5, 10, 10, 10, 10, 10, 10,  1,  1,\
          \  1,  1,  1,  1],\n               [ 8,  8,  8,  8,  8,  8,  5,  5,  5,\
          \  5,  5,  5, 10, 10, 10, 10, 10, 10,  1,  1,  1,  1,  1,  1],\n       \
          \        [ 8,  8,  8,  8,  8,  8,  5,  5,  5,  5,  5,  5, 10, 10, 10, 10,
          10, 10,  1,  1,  1,  1,  1,  1]])"
        format: python
      return: 6
  - testcases:
    - expression: bepaal_factor([[6, 6, 6, 6, 6, 6, 10, 10, 10, 10, 10, 10, 1, 1,
        1, 1, 1, 1, 2, 2, 2, 2, 2, 2], [6, 6, 6, 6, 6, 6, 10, 10, 10, 10, 10, 10,
        1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], [6, 6, 6, 6, 6, 6, 10, 10, 10, 10, 10,
        10, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], [6, 6, 6, 6, 6, 6, 10, 10, 10, 10,
        10, 10, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], [6, 6, 6, 6, 6, 6, 10, 10, 10,
        10, 10, 10, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], [6, 6, 6, 6, 6, 6, 10, 10,
        10, 10, 10, 10, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], [11, 11, 11, 11, 11,
        11, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3], [11, 11, 11, 11,
        11, 11, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3], [11, 11, 11,
        11, 11, 11, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3], [11, 11,
        11, 11, 11, 11, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3], [11,
        11, 11, 11, 11, 11, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3],
        [11, 11, 11, 11, 11, 11, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3,
        3], [14, 14, 14, 14, 14, 14, 12, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15, 15,
        0, 0, 0, 0, 0, 0], [14, 14, 14, 14, 14, 14, 12, 12, 12, 12, 12, 12, 15, 15,
        15, 15, 15, 15, 0, 0, 0, 0, 0, 0], [14, 14, 14, 14, 14, 14, 12, 12, 12, 12,
        12, 12, 15, 15, 15, 15, 15, 15, 0, 0, 0, 0, 0, 0], [14, 14, 14, 14, 14, 14,
        12, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15, 15, 0, 0, 0, 0, 0, 0], [14, 14,
        14, 14, 14, 14, 12, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15, 15, 0, 0, 0, 0,
        0, 0], [14, 14, 14, 14, 14, 14, 12, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15,
        15, 0, 0, 0, 0, 0, 0], [7, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8,
        8, 13, 13, 13, 13, 13, 13], [7, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 8, 8, 8,
        8, 8, 8, 13, 13, 13, 13, 13, 13], [7, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 8,
        8, 8, 8, 8, 8, 13, 13, 13, 13, 13, 13], [7, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5,
        5, 8, 8, 8, 8, 8, 8, 13, 13, 13, 13, 13, 13], [7, 7, 7, 7, 7, 7, 5, 5, 5,
        5, 5, 5, 8, 8, 8, 8, 8, 8, 13, 13, 13, 13, 13, 13], [7, 7, 7, 7, 7, 7, 5,
        5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 8, 13, 13, 13, 13, 13, 13]])
      description:
        description: "bepaal_factor([[ 6,  6,  6,  6,  6,  6, 10, 10, 10, 10, 10,
          10,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2],\n               [ 6,\
          \  6,  6,  6,  6,  6, 10, 10, 10, 10, 10, 10,  1,  1,  1,  1,  1,  1,  2,\
          \  2,  2,  2,  2,  2],\n               [ 6,  6,  6,  6,  6,  6, 10, 10,
          10, 10, 10, 10,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2],\n     \
          \          [ 6,  6,  6,  6,  6,  6, 10, 10, 10, 10, 10, 10,  1,  1,  1,\
          \  1,  1,  1,  2,  2,  2,  2,  2,  2],\n               [ 6,  6,  6,  6,\
          \  6,  6, 10, 10, 10, 10, 10, 10,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,\
          \  2,  2],\n               [ 6,  6,  6,  6,  6,  6, 10, 10, 10, 10, 10,
          10,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2],\n               [11,
          11, 11, 11, 11, 11,  9,  9,  9,  9,  9,  9,  4,  4,  4,  4,  4,  4,  3,\
          \  3,  3,  3,  3,  3],\n               [11, 11, 11, 11, 11, 11,  9,  9,\
          \  9,  9,  9,  9,  4,  4,  4,  4,  4,  4,  3,  3,  3,  3,  3,  3],\n   \
          \            [11, 11, 11, 11, 11, 11,  9,  9,  9,  9,  9,  9,  4,  4,  4,\
          \  4,  4,  4,  3,  3,  3,  3,  3,  3],\n               [11, 11, 11, 11,
          11, 11,  9,  9,  9,  9,  9,  9,  4,  4,  4,  4,  4,  4,  3,  3,  3,  3,\
          \  3,  3],\n               [11, 11, 11, 11, 11, 11,  9,  9,  9,  9,  9,\
          \  9,  4,  4,  4,  4,  4,  4,  3,  3,  3,  3,  3,  3],\n               [11,
          11, 11, 11, 11, 11,  9,  9,  9,  9,  9,  9,  4,  4,  4,  4,  4,  4,  3,\
          \  3,  3,  3,  3,  3],\n               [14, 14, 14, 14, 14, 14, 12, 12,
          12, 12, 12, 12, 15, 15, 15, 15, 15, 15,  0,  0,  0,  0,  0,  0],\n     \
          \          [14, 14, 14, 14, 14, 14, 12, 12, 12, 12, 12, 12, 15, 15, 15,
          15, 15, 15,  0,  0,  0,  0,  0,  0],\n               [14, 14, 14, 14, 14,
          14, 12, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15, 15,  0,  0,  0,  0,  0,\
          \  0],\n               [14, 14, 14, 14, 14, 14, 12, 12, 12, 12, 12, 12,
          15, 15, 15, 15, 15, 15,  0,  0,  0,  0,  0,  0],\n               [14, 14,
          14, 14, 14, 14, 12, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15, 15,  0,  0,\
          \  0,  0,  0,  0],\n               [14, 14, 14, 14, 14, 14, 12, 12, 12,
          12, 12, 12, 15, 15, 15, 15, 15, 15,  0,  0,  0,  0,  0,  0],\n         \
          \      [ 7,  7,  7,  7,  7,  7,  5,  5,  5,  5,  5,  5,  8,  8,  8,  8,\
          \  8,  8, 13, 13, 13, 13, 13, 13],\n               [ 7,  7,  7,  7,  7,\
          \  7,  5,  5,  5,  5,  5,  5,  8,  8,  8,  8,  8,  8, 13, 13, 13, 13, 13,
          13],\n               [ 7,  7,  7,  7,  7,  7,  5,  5,  5,  5,  5,  5,  8,\
          \  8,  8,  8,  8,  8, 13, 13, 13, 13, 13, 13],\n               [ 7,  7,\
          \  7,  7,  7,  7,  5,  5,  5,  5,  5,  5,  8,  8,  8,  8,  8,  8, 13, 13,
          13, 13, 13, 13],\n               [ 7,  7,  7,  7,  7,  7,  5,  5,  5,  5,\
          \  5,  5,  8,  8,  8,  8,  8,  8, 13, 13, 13, 13, 13, 13],\n           \
          \    [ 7,  7,  7,  7,  7,  7,  5,  5,  5,  5,  5,  5,  8,  8,  8,  8,  8,\
          \  8, 13, 13, 13, 13, 13, 13]])"
        format: python
      return: 6
- tab: Feedback inkrimpen
  contexts:
  - testcases:
    - expression: inkrimpen([[2, 3], [1, 0]])
      description:
        description: "inkrimpen([[2, 3],\n           [1, 0]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 2
            - 3
          - - 1
            - 0
  - testcases:
    - expression: inkrimpen([[1, 1, 2, 2], [1, 1, 2, 2], [3, 3, 0, 0], [3, 3, 0, 0]])
      description:
        description: "inkrimpen([[1, 1, 2, 2],\n           [1, 1, 2, 2],\n       \
          \    [3, 3, 0, 0],\n           [3, 3, 0, 0]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 1
            - 2
          - - 3
            - 0
  - testcases:
    - expression: inkrimpen([[5, 5, 1, 1], [5, 5, 1, 1], [3, 3, 2, 2], [3, 3, 2, 2]])
      description:
        description: "inkrimpen([[5, 5, 1, 1],\n           [5, 5, 1, 1],\n       \
          \    [3, 3, 2, 2],\n           [3, 3, 2, 2]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 5
            - 1
          - - 3
            - 2
  - testcases:
    - expression: inkrimpen([[3, 7, 14, 21, 20], [18, 0, 8, 22, 17], [4, 11, 6, 9,
        12], [5, 15, 13, 2, 23], [1, 16, 24, 10, 19]])
      description:
        description: "inkrimpen([[ 3,  7, 14, 21, 20],\n           [18,  0,  8, 22,
          17],\n           [ 4, 11,  6,  9, 12],\n           [ 5, 15, 13,  2, 23],\n\
          \           [ 1, 16, 24, 10, 19]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 3
            - 7
            - 14
            - 21
            - 20
          - - 18
            - 0
            - 8
            - 22
            - 17
          - - 4
            - 11
            - 6
            - 9
            - 12
          - - 5
            - 15
            - 13
            - 2
            - 23
          - - 1
            - 16
            - 24
            - 10
            - 19
  - testcases:
    - expression: inkrimpen([[15, 17, 33, 28, 2, 27], [19, 9, 14, 32, 6, 4], [10,
        22, 8, 20, 7, 24], [12, 31, 25, 13, 35, 3], [34, 21, 11, 5, 16, 0], [1, 26,
        30, 29, 18, 23]])
      description:
        description: "inkrimpen([[15, 17, 33, 28,  2, 27],\n           [19,  9, 14,
          32,  6,  4],\n           [10, 22,  8, 20,  7, 24],\n           [12, 31,
          25, 13, 35,  3],\n           [34, 21, 11,  5, 16,  0],\n           [ 1,
          26, 30, 29, 18, 23]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 15
            - 17
            - 33
            - 28
            - 2
            - 27
          - - 19
            - 9
            - 14
            - 32
            - 6
            - 4
          - - 10
            - 22
            - 8
            - 20
            - 7
            - 24
          - - 12
            - 31
            - 25
            - 13
            - 35
            - 3
          - - 34
            - 21
            - 11
            - 5
            - 16
            - 0
          - - 1
            - 26
            - 30
            - 29
            - 18
            - 23
  - testcases:
    - expression: inkrimpen([[29, 22, 13, 27, 14, 20], [15, 35, 17, 21, 6, 19], [10,
        2, 4, 9, 32, 1], [25, 11, 3, 16, 0, 18], [7, 28, 30, 5, 26, 33], [23, 34,
        31, 8, 24, 12]])
      description:
        description: "inkrimpen([[29, 22, 13, 27, 14, 20],\n           [15, 35, 17,
          21,  6, 19],\n           [10,  2,  4,  9, 32,  1],\n           [25, 11,\
          \  3, 16,  0, 18],\n           [ 7, 28, 30,  5, 26, 33],\n           [23,
          34, 31,  8, 24, 12]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 29
            - 22
            - 13
            - 27
            - 14
            - 20
          - - 15
            - 35
            - 17
            - 21
            - 6
            - 19
          - - 10
            - 2
            - 4
            - 9
            - 32
            - 1
          - - 25
            - 11
            - 3
            - 16
            - 0
            - 18
          - - 7
            - 28
            - 30
            - 5
            - 26
            - 33
          - - 23
            - 34
            - 31
            - 8
            - 24
            - 12
  - testcases:
    - expression: inkrimpen([[35, 20, 2, 29, 27, 14], [31, 21, 7, 32, 9, 34], [3,
        15, 16, 1, 5, 12], [0, 26, 17, 28, 4, 8], [25, 19, 18, 22, 11, 13], [6, 23,
        10, 30, 24, 33]])
      description:
        description: "inkrimpen([[35, 20,  2, 29, 27, 14],\n           [31, 21,  7,
          32,  9, 34],\n           [ 3, 15, 16,  1,  5, 12],\n           [ 0, 26,
          17, 28,  4,  8],\n           [25, 19, 18, 22, 11, 13],\n           [ 6,
          23, 10, 30, 24, 33]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 35
            - 20
            - 2
            - 29
            - 27
            - 14
          - - 31
            - 21
            - 7
            - 32
            - 9
            - 34
          - - 3
            - 15
            - 16
            - 1
            - 5
            - 12
          - - 0
            - 26
            - 17
            - 28
            - 4
            - 8
          - - 25
            - 19
            - 18
            - 22
            - 11
            - 13
          - - 6
            - 23
            - 10
            - 30
            - 24
            - 33
  - testcases:
    - expression: inkrimpen([[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]])
      description:
        description: "inkrimpen([[0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0],\n\
          \           [0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0],\n      \
          \     [0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 0
  - testcases:
    - expression: inkrimpen([[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0,
        0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0], [0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "inkrimpen([[0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0,
          0, 0],\n           [0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0,
          0],\n           [0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0],\n\
          \           [0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 0
  - testcases:
    - expression: inkrimpen([[3, 3, 8, 8, 5, 5, 1, 1], [3, 3, 8, 8, 5, 5, 1, 1], [10,
        10, 15, 15, 7, 7, 12, 12], [10, 10, 15, 15, 7, 7, 12, 12], [13, 13, 14, 14,
        2, 2, 4, 4], [13, 13, 14, 14, 2, 2, 4, 4], [11, 11, 0, 0, 9, 9, 6, 6], [11,
        11, 0, 0, 9, 9, 6, 6]])
      description:
        description: "inkrimpen([[ 3,  3,  8,  8,  5,  5,  1,  1],\n           [ 3,\
          \  3,  8,  8,  5,  5,  1,  1],\n           [10, 10, 15, 15,  7,  7, 12,
          12],\n           [10, 10, 15, 15,  7,  7, 12, 12],\n           [13, 13,
          14, 14,  2,  2,  4,  4],\n           [13, 13, 14, 14,  2,  2,  4,  4],\n\
          \           [11, 11,  0,  0,  9,  9,  6,  6],\n           [11, 11,  0, \
          \ 0,  9,  9,  6,  6]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 3
            - 8
            - 5
            - 1
          - - 10
            - 15
            - 7
            - 12
          - - 13
            - 14
            - 2
            - 4
          - - 11
            - 0
            - 9
            - 6
  - testcases:
    - expression: inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0,
        0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0,
        0]])
      description:
        description: "inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0,
          0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0,
          0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0],\n           [0,
          0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 0
  - testcases:
    - expression: inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n \
          \          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 0
  - testcases:
    - expression: inkrimpen([[6, 6, 14, 14, 16, 16, 32, 32, 4, 4, 24, 24], [6, 6,
        14, 14, 16, 16, 32, 32, 4, 4, 24, 24], [10, 10, 3, 3, 31, 31, 26, 26, 11,
        11, 0, 0], [10, 10, 3, 3, 31, 31, 26, 26, 11, 11, 0, 0], [15, 15, 1, 1, 25,
        25, 7, 7, 23, 23, 17, 17], [15, 15, 1, 1, 25, 25, 7, 7, 23, 23, 17, 17], [22,
        22, 34, 34, 20, 20, 8, 8, 2, 2, 27, 27], [22, 22, 34, 34, 20, 20, 8, 8, 2,
        2, 27, 27], [18, 18, 5, 5, 30, 30, 35, 35, 12, 12, 19, 19], [18, 18, 5, 5,
        30, 30, 35, 35, 12, 12, 19, 19], [29, 29, 13, 13, 28, 28, 9, 9, 33, 33, 21,
        21], [29, 29, 13, 13, 28, 28, 9, 9, 33, 33, 21, 21]])
      description:
        description: "inkrimpen([[ 6,  6, 14, 14, 16, 16, 32, 32,  4,  4, 24, 24],\n\
          \           [ 6,  6, 14, 14, 16, 16, 32, 32,  4,  4, 24, 24],\n        \
          \   [10, 10,  3,  3, 31, 31, 26, 26, 11, 11,  0,  0],\n           [10, 10,\
          \  3,  3, 31, 31, 26, 26, 11, 11,  0,  0],\n           [15, 15,  1,  1,
          25, 25,  7,  7, 23, 23, 17, 17],\n           [15, 15,  1,  1, 25, 25,  7,\
          \  7, 23, 23, 17, 17],\n           [22, 22, 34, 34, 20, 20,  8,  8,  2,\
          \  2, 27, 27],\n           [22, 22, 34, 34, 20, 20,  8,  8,  2,  2, 27,
          27],\n           [18, 18,  5,  5, 30, 30, 35, 35, 12, 12, 19, 19],\n   \
          \        [18, 18,  5,  5, 30, 30, 35, 35, 12, 12, 19, 19],\n           [29,
          29, 13, 13, 28, 28,  9,  9, 33, 33, 21, 21],\n           [29, 29, 13, 13,
          28, 28,  9,  9, 33, 33, 21, 21]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 6
            - 14
            - 16
            - 32
            - 4
            - 24
          - - 10
            - 3
            - 31
            - 26
            - 11
            - 0
          - - 15
            - 1
            - 25
            - 7
            - 23
            - 17
          - - 22
            - 34
            - 20
            - 8
            - 2
            - 27
          - - 18
            - 5
            - 30
            - 35
            - 12
            - 19
          - - 29
            - 13
            - 28
            - 9
            - 33
            - 21
  - testcases:
    - expression: inkrimpen([[7, 7, 7, 13, 13, 13, 9, 9, 9, 15, 15, 15], [7, 7, 7,
        13, 13, 13, 9, 9, 9, 15, 15, 15], [7, 7, 7, 13, 13, 13, 9, 9, 9, 15, 15, 15],
        [11, 11, 11, 0, 0, 0, 5, 5, 5, 6, 6, 6], [11, 11, 11, 0, 0, 0, 5, 5, 5, 6,
        6, 6], [11, 11, 11, 0, 0, 0, 5, 5, 5, 6, 6, 6], [8, 8, 8, 2, 2, 2, 12, 12,
        12, 4, 4, 4], [8, 8, 8, 2, 2, 2, 12, 12, 12, 4, 4, 4], [8, 8, 8, 2, 2, 2,
        12, 12, 12, 4, 4, 4], [14, 14, 14, 3, 3, 3, 1, 1, 1, 10, 10, 10], [14, 14,
        14, 3, 3, 3, 1, 1, 1, 10, 10, 10], [14, 14, 14, 3, 3, 3, 1, 1, 1, 10, 10,
        10]])
      description:
        description: "inkrimpen([[ 7,  7,  7, 13, 13, 13,  9,  9,  9, 15, 15, 15],\n\
          \           [ 7,  7,  7, 13, 13, 13,  9,  9,  9, 15, 15, 15],\n        \
          \   [ 7,  7,  7, 13, 13, 13,  9,  9,  9, 15, 15, 15],\n           [11, 11,
          11,  0,  0,  0,  5,  5,  5,  6,  6,  6],\n           [11, 11, 11,  0,  0,\
          \  0,  5,  5,  5,  6,  6,  6],\n           [11, 11, 11,  0,  0,  0,  5,\
          \  5,  5,  6,  6,  6],\n           [ 8,  8,  8,  2,  2,  2, 12, 12, 12,\
          \  4,  4,  4],\n           [ 8,  8,  8,  2,  2,  2, 12, 12, 12,  4,  4,\
          \  4],\n           [ 8,  8,  8,  2,  2,  2, 12, 12, 12,  4,  4,  4],\n \
          \          [14, 14, 14,  3,  3,  3,  1,  1,  1, 10, 10, 10],\n         \
          \  [14, 14, 14,  3,  3,  3,  1,  1,  1, 10, 10, 10],\n           [14, 14,
          14,  3,  3,  3,  1,  1,  1, 10, 10, 10]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 7
            - 13
            - 9
            - 15
          - - 11
            - 0
            - 5
            - 6
          - - 8
            - 2
            - 12
            - 4
          - - 14
            - 3
            - 1
            - 10
  - testcases:
    - expression: inkrimpen([[0, 0, 31, 31, 21, 21, 25, 25, 33, 33, 5, 5], [0, 0,
        31, 31, 21, 21, 25, 25, 33, 33, 5, 5], [15, 15, 3, 3, 14, 14, 7, 7, 4, 4,
        6, 6], [15, 15, 3, 3, 14, 14, 7, 7, 4, 4, 6, 6], [32, 32, 28, 28, 23, 23,
        34, 34, 27, 27, 9, 9], [32, 32, 28, 28, 23, 23, 34, 34, 27, 27, 9, 9], [30,
        30, 26, 26, 17, 17, 13, 13, 24, 24, 16, 16], [30, 30, 26, 26, 17, 17, 13,
        13, 24, 24, 16, 16], [19, 19, 22, 22, 12, 12, 18, 18, 8, 8, 10, 10], [19,
        19, 22, 22, 12, 12, 18, 18, 8, 8, 10, 10], [2, 2, 11, 11, 29, 29, 20, 20,
        35, 35, 1, 1], [2, 2, 11, 11, 29, 29, 20, 20, 35, 35, 1, 1]])
      description:
        description: "inkrimpen([[ 0,  0, 31, 31, 21, 21, 25, 25, 33, 33,  5,  5],\n\
          \           [ 0,  0, 31, 31, 21, 21, 25, 25, 33, 33,  5,  5],\n        \
          \   [15, 15,  3,  3, 14, 14,  7,  7,  4,  4,  6,  6],\n           [15, 15,\
          \  3,  3, 14, 14,  7,  7,  4,  4,  6,  6],\n           [32, 32, 28, 28,
          23, 23, 34, 34, 27, 27,  9,  9],\n           [32, 32, 28, 28, 23, 23, 34,
          34, 27, 27,  9,  9],\n           [30, 30, 26, 26, 17, 17, 13, 13, 24, 24,
          16, 16],\n           [30, 30, 26, 26, 17, 17, 13, 13, 24, 24, 16, 16],\n\
          \           [19, 19, 22, 22, 12, 12, 18, 18,  8,  8, 10, 10],\n        \
          \   [19, 19, 22, 22, 12, 12, 18, 18,  8,  8, 10, 10],\n           [ 2, \
          \ 2, 11, 11, 29, 29, 20, 20, 35, 35,  1,  1],\n           [ 2,  2, 11, 11,
          29, 29, 20, 20, 35, 35,  1,  1]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 0
            - 31
            - 21
            - 25
            - 33
            - 5
          - - 15
            - 3
            - 14
            - 7
            - 4
            - 6
          - - 32
            - 28
            - 23
            - 34
            - 27
            - 9
          - - 30
            - 26
            - 17
            - 13
            - 24
            - 16
          - - 19
            - 22
            - 12
            - 18
            - 8
            - 10
          - - 2
            - 11
            - 29
            - 20
            - 35
            - 1
  - testcases:
    - expression: inkrimpen([[11, 11, 28, 28, 14, 14, 10, 10, 32, 32, 3, 3], [11,
        11, 28, 28, 14, 14, 10, 10, 32, 32, 3, 3], [29, 29, 34, 34, 1, 1, 19, 19,
        25, 25, 5, 5], [29, 29, 34, 34, 1, 1, 19, 19, 25, 25, 5, 5], [31, 31, 26,
        26, 30, 30, 15, 15, 33, 33, 16, 16], [31, 31, 26, 26, 30, 30, 15, 15, 33,
        33, 16, 16], [27, 27, 35, 35, 0, 0, 20, 20, 17, 17, 13, 13], [27, 27, 35,
        35, 0, 0, 20, 20, 17, 17, 13, 13], [12, 12, 18, 18, 2, 2, 8, 8, 23, 23, 22,
        22], [12, 12, 18, 18, 2, 2, 8, 8, 23, 23, 22, 22], [9, 9, 24, 24, 7, 7, 21,
        21, 4, 4, 6, 6], [9, 9, 24, 24, 7, 7, 21, 21, 4, 4, 6, 6]])
      description:
        description: "inkrimpen([[11, 11, 28, 28, 14, 14, 10, 10, 32, 32,  3,  3],\n\
          \           [11, 11, 28, 28, 14, 14, 10, 10, 32, 32,  3,  3],\n        \
          \   [29, 29, 34, 34,  1,  1, 19, 19, 25, 25,  5,  5],\n           [29, 29,
          34, 34,  1,  1, 19, 19, 25, 25,  5,  5],\n           [31, 31, 26, 26, 30,
          30, 15, 15, 33, 33, 16, 16],\n           [31, 31, 26, 26, 30, 30, 15, 15,
          33, 33, 16, 16],\n           [27, 27, 35, 35,  0,  0, 20, 20, 17, 17, 13,
          13],\n           [27, 27, 35, 35,  0,  0, 20, 20, 17, 17, 13, 13],\n   \
          \        [12, 12, 18, 18,  2,  2,  8,  8, 23, 23, 22, 22],\n           [12,
          12, 18, 18,  2,  2,  8,  8, 23, 23, 22, 22],\n           [ 9,  9, 24, 24,\
          \  7,  7, 21, 21,  4,  4,  6,  6],\n           [ 9,  9, 24, 24,  7,  7,
          21, 21,  4,  4,  6,  6]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 11
            - 28
            - 14
            - 10
            - 32
            - 3
          - - 29
            - 34
            - 1
            - 19
            - 25
            - 5
          - - 31
            - 26
            - 30
            - 15
            - 33
            - 16
          - - 27
            - 35
            - 0
            - 20
            - 17
            - 13
          - - 12
            - 18
            - 2
            - 8
            - 23
            - 22
          - - 9
            - 24
            - 7
            - 21
            - 4
            - 6
  - testcases:
    - expression: inkrimpen([[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,
        0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0,
        0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1,
        1, 1, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2], [3,
        3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
        2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3,
        2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2], [3, 3, 3,
        3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2]])
      description:
        description: "inkrimpen([[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n   \
          \        [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n           [1, 1,
          1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n           [1, 1, 1, 1, 1, 1, 1, 0,
          0, 0, 0, 0, 0, 0],\n           [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n\
          \           [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n           [1,
          1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n           [3, 3, 3, 3, 3, 3, 3,
          2, 2, 2, 2, 2, 2, 2],\n           [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
          2],\n           [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2],\n          \
          \ [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2],\n           [3, 3, 3, 3, 3,
          3, 3, 2, 2, 2, 2, 2, 2, 2],\n           [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
          2, 2, 2],\n           [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 1
            - 0
          - - 3
            - 2
  - testcases:
    - expression: inkrimpen([[3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [3,
        3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 1,
        1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [3,
        3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 1,
        1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [3,
        3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2,
        2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2,
        2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "inkrimpen([[3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \           [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n        \
          \   [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3,
          3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3,
          3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
          1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
          1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n \
          \          [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n         \
          \  [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n           [2, 2,
          2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n           [2, 2, 2, 2, 2, 2,
          2, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n           [2, 2, 2, 2, 2, 2, 2, 2, 0, 0,
          0, 0, 0, 0, 0, 0],\n           [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0,
          0, 0],\n           [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n \
          \          [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 3
            - 1
          - - 2
            - 0
  - testcases:
    - expression: inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 0
  - testcases:
    - expression: inkrimpen([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3]])
      description:
        description: "inkrimpen([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n         \
          \  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0],\n           [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n           [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
          3, 3, 3, 3, 3, 3],\n           [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3,
          3, 3, 3, 3, 3, 3, 3, 3],\n           [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3,
          3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n           [2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
          2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n           [2, 2, 2, 2, 2, 2, 2, 2,
          2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n           [2, 2, 2, 2, 2, 2,
          2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n           [2, 2, 2, 2,
          2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n           [2, 2,
          2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n         \
          \  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n\
          \           [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          3, 3],\n           [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
          3, 3, 3, 3]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 1
            - 0
          - - 2
            - 3
  - testcases:
    - expression: inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])
      description:
        description: "inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2,
          2, 2, 2, 2, 2, 2],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
          2, 2, 2, 2, 2, 2, 2, 2],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
          2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n           [0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n           [0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n           [0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n           [0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n         \
          \  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n\
          \           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
          2, 2],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
          2, 2, 2, 2],\n           [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3,
          3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3,
          3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3,
          3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3,
          3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n         \
          \  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \           [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 0
            - 2
          - - 3
            - 1
  - testcases:
    - expression: inkrimpen([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2]])
      description:
        description: "inkrimpen([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3,
          3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3,
          3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n         \
          \  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3, 3,
          3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3,
          3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      \
          \     [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
          2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n           [0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n           [0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n   \
          \        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
          2, 2, 2],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2,
          2, 2, 2, 2, 2, 2, 2],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
          2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n           [0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n           [0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n\
          \           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2,
          2, 2, 2, 2],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
          2, 2, 2, 2, 2, 2, 2, 2]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 3
            - 1
          - - 0
            - 2
  - testcases:
    - expression: inkrimpen([[10, 10, 10, 10, 35, 35, 35, 35, 22, 22, 22, 22, 34,
        34, 34, 34, 9, 9, 9, 9, 19, 19, 19, 19], [10, 10, 10, 10, 35, 35, 35, 35,
        22, 22, 22, 22, 34, 34, 34, 34, 9, 9, 9, 9, 19, 19, 19, 19], [10, 10, 10,
        10, 35, 35, 35, 35, 22, 22, 22, 22, 34, 34, 34, 34, 9, 9, 9, 9, 19, 19, 19,
        19], [10, 10, 10, 10, 35, 35, 35, 35, 22, 22, 22, 22, 34, 34, 34, 34, 9, 9,
        9, 9, 19, 19, 19, 19], [28, 28, 28, 28, 3, 3, 3, 3, 13, 13, 13, 13, 17, 17,
        17, 17, 12, 12, 12, 12, 15, 15, 15, 15], [28, 28, 28, 28, 3, 3, 3, 3, 13,
        13, 13, 13, 17, 17, 17, 17, 12, 12, 12, 12, 15, 15, 15, 15], [28, 28, 28,
        28, 3, 3, 3, 3, 13, 13, 13, 13, 17, 17, 17, 17, 12, 12, 12, 12, 15, 15, 15,
        15], [28, 28, 28, 28, 3, 3, 3, 3, 13, 13, 13, 13, 17, 17, 17, 17, 12, 12,
        12, 12, 15, 15, 15, 15], [27, 27, 27, 27, 30, 30, 30, 30, 23, 23, 23, 23,
        4, 4, 4, 4, 5, 5, 5, 5, 32, 32, 32, 32], [27, 27, 27, 27, 30, 30, 30, 30,
        23, 23, 23, 23, 4, 4, 4, 4, 5, 5, 5, 5, 32, 32, 32, 32], [27, 27, 27, 27,
        30, 30, 30, 30, 23, 23, 23, 23, 4, 4, 4, 4, 5, 5, 5, 5, 32, 32, 32, 32], [27,
        27, 27, 27, 30, 30, 30, 30, 23, 23, 23, 23, 4, 4, 4, 4, 5, 5, 5, 5, 32, 32,
        32, 32], [14, 14, 14, 14, 33, 33, 33, 33, 18, 18, 18, 18, 21, 21, 21, 21,
        1, 1, 1, 1, 8, 8, 8, 8], [14, 14, 14, 14, 33, 33, 33, 33, 18, 18, 18, 18,
        21, 21, 21, 21, 1, 1, 1, 1, 8, 8, 8, 8], [14, 14, 14, 14, 33, 33, 33, 33,
        18, 18, 18, 18, 21, 21, 21, 21, 1, 1, 1, 1, 8, 8, 8, 8], [14, 14, 14, 14,
        33, 33, 33, 33, 18, 18, 18, 18, 21, 21, 21, 21, 1, 1, 1, 1, 8, 8, 8, 8], [24,
        24, 24, 24, 0, 0, 0, 0, 2, 2, 2, 2, 20, 20, 20, 20, 7, 7, 7, 7, 29, 29, 29,
        29], [24, 24, 24, 24, 0, 0, 0, 0, 2, 2, 2, 2, 20, 20, 20, 20, 7, 7, 7, 7,
        29, 29, 29, 29], [24, 24, 24, 24, 0, 0, 0, 0, 2, 2, 2, 2, 20, 20, 20, 20,
        7, 7, 7, 7, 29, 29, 29, 29], [24, 24, 24, 24, 0, 0, 0, 0, 2, 2, 2, 2, 20,
        20, 20, 20, 7, 7, 7, 7, 29, 29, 29, 29], [6, 6, 6, 6, 26, 26, 26, 26, 31,
        31, 31, 31, 16, 16, 16, 16, 25, 25, 25, 25, 11, 11, 11, 11], [6, 6, 6, 6,
        26, 26, 26, 26, 31, 31, 31, 31, 16, 16, 16, 16, 25, 25, 25, 25, 11, 11, 11,
        11], [6, 6, 6, 6, 26, 26, 26, 26, 31, 31, 31, 31, 16, 16, 16, 16, 25, 25,
        25, 25, 11, 11, 11, 11], [6, 6, 6, 6, 26, 26, 26, 26, 31, 31, 31, 31, 16,
        16, 16, 16, 25, 25, 25, 25, 11, 11, 11, 11]])
      description:
        description: "inkrimpen([[10, 10, 10, 10, 35, 35, 35, 35, 22, 22, 22, 22,
          34, 34, 34, 34,  9,  9,  9,  9, 19, 19, 19, 19],\n           [10, 10, 10,
          10, 35, 35, 35, 35, 22, 22, 22, 22, 34, 34, 34, 34,  9,  9,  9,  9, 19,
          19, 19, 19],\n           [10, 10, 10, 10, 35, 35, 35, 35, 22, 22, 22, 22,
          34, 34, 34, 34,  9,  9,  9,  9, 19, 19, 19, 19],\n           [10, 10, 10,
          10, 35, 35, 35, 35, 22, 22, 22, 22, 34, 34, 34, 34,  9,  9,  9,  9, 19,
          19, 19, 19],\n           [28, 28, 28, 28,  3,  3,  3,  3, 13, 13, 13, 13,
          17, 17, 17, 17, 12, 12, 12, 12, 15, 15, 15, 15],\n           [28, 28, 28,
          28,  3,  3,  3,  3, 13, 13, 13, 13, 17, 17, 17, 17, 12, 12, 12, 12, 15,
          15, 15, 15],\n           [28, 28, 28, 28,  3,  3,  3,  3, 13, 13, 13, 13,
          17, 17, 17, 17, 12, 12, 12, 12, 15, 15, 15, 15],\n           [28, 28, 28,
          28,  3,  3,  3,  3, 13, 13, 13, 13, 17, 17, 17, 17, 12, 12, 12, 12, 15,
          15, 15, 15],\n           [27, 27, 27, 27, 30, 30, 30, 30, 23, 23, 23, 23,\
          \  4,  4,  4,  4,  5,  5,  5,  5, 32, 32, 32, 32],\n           [27, 27,
          27, 27, 30, 30, 30, 30, 23, 23, 23, 23,  4,  4,  4,  4,  5,  5,  5,  5,
          32, 32, 32, 32],\n           [27, 27, 27, 27, 30, 30, 30, 30, 23, 23, 23,
          23,  4,  4,  4,  4,  5,  5,  5,  5, 32, 32, 32, 32],\n           [27, 27,
          27, 27, 30, 30, 30, 30, 23, 23, 23, 23,  4,  4,  4,  4,  5,  5,  5,  5,
          32, 32, 32, 32],\n           [14, 14, 14, 14, 33, 33, 33, 33, 18, 18, 18,
          18, 21, 21, 21, 21,  1,  1,  1,  1,  8,  8,  8,  8],\n           [14, 14,
          14, 14, 33, 33, 33, 33, 18, 18, 18, 18, 21, 21, 21, 21,  1,  1,  1,  1,\
          \  8,  8,  8,  8],\n           [14, 14, 14, 14, 33, 33, 33, 33, 18, 18,
          18, 18, 21, 21, 21, 21,  1,  1,  1,  1,  8,  8,  8,  8],\n           [14,
          14, 14, 14, 33, 33, 33, 33, 18, 18, 18, 18, 21, 21, 21, 21,  1,  1,  1,\
          \  1,  8,  8,  8,  8],\n           [24, 24, 24, 24,  0,  0,  0,  0,  2,\
          \  2,  2,  2, 20, 20, 20, 20,  7,  7,  7,  7, 29, 29, 29, 29],\n       \
          \    [24, 24, 24, 24,  0,  0,  0,  0,  2,  2,  2,  2, 20, 20, 20, 20,  7,\
          \  7,  7,  7, 29, 29, 29, 29],\n           [24, 24, 24, 24,  0,  0,  0,\
          \  0,  2,  2,  2,  2, 20, 20, 20, 20,  7,  7,  7,  7, 29, 29, 29, 29],\n\
          \           [24, 24, 24, 24,  0,  0,  0,  0,  2,  2,  2,  2, 20, 20, 20,
          20,  7,  7,  7,  7, 29, 29, 29, 29],\n           [ 6,  6,  6,  6, 26, 26,
          26, 26, 31, 31, 31, 31, 16, 16, 16, 16, 25, 25, 25, 25, 11, 11, 11, 11],\n\
          \           [ 6,  6,  6,  6, 26, 26, 26, 26, 31, 31, 31, 31, 16, 16, 16,
          16, 25, 25, 25, 25, 11, 11, 11, 11],\n           [ 6,  6,  6,  6, 26, 26,
          26, 26, 31, 31, 31, 31, 16, 16, 16, 16, 25, 25, 25, 25, 11, 11, 11, 11],\n\
          \           [ 6,  6,  6,  6, 26, 26, 26, 26, 31, 31, 31, 31, 16, 16, 16,
          16, 25, 25, 25, 25, 11, 11, 11, 11]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 10
            - 35
            - 22
            - 34
            - 9
            - 19
          - - 28
            - 3
            - 13
            - 17
            - 12
            - 15
          - - 27
            - 30
            - 23
            - 4
            - 5
            - 32
          - - 14
            - 33
            - 18
            - 21
            - 1
            - 8
          - - 24
            - 0
            - 2
            - 20
            - 7
            - 29
          - - 6
            - 26
            - 31
            - 16
            - 25
            - 11
  - testcases:
    - expression: inkrimpen([[2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3,
        6, 6, 6, 6, 6, 6], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3,
        6, 6, 6, 6, 6, 6], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3,
        6, 6, 6, 6, 6, 6], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3,
        6, 6, 6, 6, 6, 6], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3,
        6, 6, 6, 6, 6, 6], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3,
        6, 6, 6, 6, 6, 6], [15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13,
        13, 13, 13, 13, 9, 9, 9, 9, 9, 9], [15, 15, 15, 15, 15, 15, 14, 14, 14, 14,
        14, 14, 13, 13, 13, 13, 13, 13, 9, 9, 9, 9, 9, 9], [15, 15, 15, 15, 15, 15,
        14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 9, 9, 9, 9, 9, 9], [15, 15,
        15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 9, 9, 9, 9,
        9, 9], [15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13,
        13, 9, 9, 9, 9, 9, 9], [15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13,
        13, 13, 13, 13, 13, 9, 9, 9, 9, 9, 9], [11, 11, 11, 11, 11, 11, 12, 12, 12,
        12, 12, 12, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7], [11, 11, 11, 11, 11, 11,
        12, 12, 12, 12, 12, 12, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7], [11, 11, 11,
        11, 11, 11, 12, 12, 12, 12, 12, 12, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7], [11,
        11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7,
        7, 7], [11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 4, 4, 4, 4, 4, 4,
        7, 7, 7, 7, 7, 7], [11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 4, 4,
        4, 4, 4, 4, 7, 7, 7, 7, 7, 7], [8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 5, 10, 10,
        10, 10, 10, 10, 1, 1, 1, 1, 1, 1], [8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 5, 10,
        10, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1], [8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 5,
        10, 10, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1], [8, 8, 8, 8, 8, 8, 5, 5, 5, 5,
        5, 5, 10, 10, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1], [8, 8, 8, 8, 8, 8, 5, 5,
        5, 5, 5, 5, 10, 10, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1], [8, 8, 8, 8, 8, 8,
        5, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1]])
      description:
        description: "inkrimpen([[ 2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,\
          \  3,  3,  3,  3,  3,  3,  6,  6,  6,  6,  6,  6],\n           [ 2,  2,\
          \  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  3,  3,  3,  3,  3,  3,  6,  6,\
          \  6,  6,  6,  6],\n           [ 2,  2,  2,  2,  2,  2,  0,  0,  0,  0,\
          \  0,  0,  3,  3,  3,  3,  3,  3,  6,  6,  6,  6,  6,  6],\n           [
          2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  3,  3,  3,  3,  3,  3, \
          \ 6,  6,  6,  6,  6,  6],\n           [ 2,  2,  2,  2,  2,  2,  0,  0, \
          \ 0,  0,  0,  0,  3,  3,  3,  3,  3,  3,  6,  6,  6,  6,  6,  6],\n    \
          \       [ 2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  3,  3,  3,  3,\
          \  3,  3,  6,  6,  6,  6,  6,  6],\n           [15, 15, 15, 15, 15, 15,
          14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13,  9,  9,  9,  9,  9,  9],\n\
          \           [15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13,
          13, 13, 13,  9,  9,  9,  9,  9,  9],\n           [15, 15, 15, 15, 15, 15,
          14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13,  9,  9,  9,  9,  9,  9],\n\
          \           [15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13,
          13, 13, 13,  9,  9,  9,  9,  9,  9],\n           [15, 15, 15, 15, 15, 15,
          14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13,  9,  9,  9,  9,  9,  9],\n\
          \           [15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13,
          13, 13, 13,  9,  9,  9,  9,  9,  9],\n           [11, 11, 11, 11, 11, 11,
          12, 12, 12, 12, 12, 12,  4,  4,  4,  4,  4,  4,  7,  7,  7,  7,  7,  7],\n\
          \           [11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12,  4,  4,  4,\
          \  4,  4,  4,  7,  7,  7,  7,  7,  7],\n           [11, 11, 11, 11, 11,
          11, 12, 12, 12, 12, 12, 12,  4,  4,  4,  4,  4,  4,  7,  7,  7,  7,  7,\
          \  7],\n           [11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12,  4,\
          \  4,  4,  4,  4,  4,  7,  7,  7,  7,  7,  7],\n           [11, 11, 11,
          11, 11, 11, 12, 12, 12, 12, 12, 12,  4,  4,  4,  4,  4,  4,  7,  7,  7,\
          \  7,  7,  7],\n           [11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12,
          12,  4,  4,  4,  4,  4,  4,  7,  7,  7,  7,  7,  7],\n           [ 8,  8,\
          \  8,  8,  8,  8,  5,  5,  5,  5,  5,  5, 10, 10, 10, 10, 10, 10,  1,  1,\
          \  1,  1,  1,  1],\n           [ 8,  8,  8,  8,  8,  8,  5,  5,  5,  5,\
          \  5,  5, 10, 10, 10, 10, 10, 10,  1,  1,  1,  1,  1,  1],\n           [
          8,  8,  8,  8,  8,  8,  5,  5,  5,  5,  5,  5, 10, 10, 10, 10, 10, 10, \
          \ 1,  1,  1,  1,  1,  1],\n           [ 8,  8,  8,  8,  8,  8,  5,  5, \
          \ 5,  5,  5,  5, 10, 10, 10, 10, 10, 10,  1,  1,  1,  1,  1,  1],\n    \
          \       [ 8,  8,  8,  8,  8,  8,  5,  5,  5,  5,  5,  5, 10, 10, 10, 10,
          10, 10,  1,  1,  1,  1,  1,  1],\n           [ 8,  8,  8,  8,  8,  8,  5,\
          \  5,  5,  5,  5,  5, 10, 10, 10, 10, 10, 10,  1,  1,  1,  1,  1,  1]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 2
            - 0
            - 3
            - 6
          - - 15
            - 14
            - 13
            - 9
          - - 11
            - 12
            - 4
            - 7
          - - 8
            - 5
            - 10
            - 1
  - testcases:
    - expression: inkrimpen([[6, 6, 6, 6, 6, 6, 10, 10, 10, 10, 10, 10, 1, 1, 1, 1,
        1, 1, 2, 2, 2, 2, 2, 2], [6, 6, 6, 6, 6, 6, 10, 10, 10, 10, 10, 10, 1, 1,
        1, 1, 1, 1, 2, 2, 2, 2, 2, 2], [6, 6, 6, 6, 6, 6, 10, 10, 10, 10, 10, 10,
        1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], [6, 6, 6, 6, 6, 6, 10, 10, 10, 10, 10,
        10, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], [6, 6, 6, 6, 6, 6, 10, 10, 10, 10,
        10, 10, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], [6, 6, 6, 6, 6, 6, 10, 10, 10,
        10, 10, 10, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], [11, 11, 11, 11, 11, 11,
        9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3], [11, 11, 11, 11, 11,
        11, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3], [11, 11, 11, 11,
        11, 11, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3], [11, 11, 11,
        11, 11, 11, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3], [11, 11,
        11, 11, 11, 11, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3], [11,
        11, 11, 11, 11, 11, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3],
        [14, 14, 14, 14, 14, 14, 12, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15, 15, 0,
        0, 0, 0, 0, 0], [14, 14, 14, 14, 14, 14, 12, 12, 12, 12, 12, 12, 15, 15, 15,
        15, 15, 15, 0, 0, 0, 0, 0, 0], [14, 14, 14, 14, 14, 14, 12, 12, 12, 12, 12,
        12, 15, 15, 15, 15, 15, 15, 0, 0, 0, 0, 0, 0], [14, 14, 14, 14, 14, 14, 12,
        12, 12, 12, 12, 12, 15, 15, 15, 15, 15, 15, 0, 0, 0, 0, 0, 0], [14, 14, 14,
        14, 14, 14, 12, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15, 15, 0, 0, 0, 0, 0,
        0], [14, 14, 14, 14, 14, 14, 12, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15, 15,
        0, 0, 0, 0, 0, 0], [7, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 8,
        13, 13, 13, 13, 13, 13], [7, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 8, 8, 8, 8,
        8, 8, 13, 13, 13, 13, 13, 13], [7, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 8, 8,
        8, 8, 8, 8, 13, 13, 13, 13, 13, 13], [7, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5,
        8, 8, 8, 8, 8, 8, 13, 13, 13, 13, 13, 13], [7, 7, 7, 7, 7, 7, 5, 5, 5, 5,
        5, 5, 8, 8, 8, 8, 8, 8, 13, 13, 13, 13, 13, 13], [7, 7, 7, 7, 7, 7, 5, 5,
        5, 5, 5, 5, 8, 8, 8, 8, 8, 8, 13, 13, 13, 13, 13, 13]])
      description:
        description: "inkrimpen([[ 6,  6,  6,  6,  6,  6, 10, 10, 10, 10, 10, 10,\
          \  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2],\n           [ 6,  6,\
          \  6,  6,  6,  6, 10, 10, 10, 10, 10, 10,  1,  1,  1,  1,  1,  1,  2,  2,\
          \  2,  2,  2,  2],\n           [ 6,  6,  6,  6,  6,  6, 10, 10, 10, 10,
          10, 10,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2],\n           [ 6,\
          \  6,  6,  6,  6,  6, 10, 10, 10, 10, 10, 10,  1,  1,  1,  1,  1,  1,  2,\
          \  2,  2,  2,  2,  2],\n           [ 6,  6,  6,  6,  6,  6, 10, 10, 10,
          10, 10, 10,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2],\n         \
          \  [ 6,  6,  6,  6,  6,  6, 10, 10, 10, 10, 10, 10,  1,  1,  1,  1,  1,\
          \  1,  2,  2,  2,  2,  2,  2],\n           [11, 11, 11, 11, 11, 11,  9,\
          \  9,  9,  9,  9,  9,  4,  4,  4,  4,  4,  4,  3,  3,  3,  3,  3,  3],\n\
          \           [11, 11, 11, 11, 11, 11,  9,  9,  9,  9,  9,  9,  4,  4,  4,\
          \  4,  4,  4,  3,  3,  3,  3,  3,  3],\n           [11, 11, 11, 11, 11,
          11,  9,  9,  9,  9,  9,  9,  4,  4,  4,  4,  4,  4,  3,  3,  3,  3,  3,\
          \  3],\n           [11, 11, 11, 11, 11, 11,  9,  9,  9,  9,  9,  9,  4,\
          \  4,  4,  4,  4,  4,  3,  3,  3,  3,  3,  3],\n           [11, 11, 11,
          11, 11, 11,  9,  9,  9,  9,  9,  9,  4,  4,  4,  4,  4,  4,  3,  3,  3,\
          \  3,  3,  3],\n           [11, 11, 11, 11, 11, 11,  9,  9,  9,  9,  9,\
          \  9,  4,  4,  4,  4,  4,  4,  3,  3,  3,  3,  3,  3],\n           [14,
          14, 14, 14, 14, 14, 12, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15, 15,  0,\
          \  0,  0,  0,  0,  0],\n           [14, 14, 14, 14, 14, 14, 12, 12, 12,
          12, 12, 12, 15, 15, 15, 15, 15, 15,  0,  0,  0,  0,  0,  0],\n         \
          \  [14, 14, 14, 14, 14, 14, 12, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15,
          15,  0,  0,  0,  0,  0,  0],\n           [14, 14, 14, 14, 14, 14, 12, 12,
          12, 12, 12, 12, 15, 15, 15, 15, 15, 15,  0,  0,  0,  0,  0,  0],\n     \
          \      [14, 14, 14, 14, 14, 14, 12, 12, 12, 12, 12, 12, 15, 15, 15, 15,
          15, 15,  0,  0,  0,  0,  0,  0],\n           [14, 14, 14, 14, 14, 14, 12,
          12, 12, 12, 12, 12, 15, 15, 15, 15, 15, 15,  0,  0,  0,  0,  0,  0],\n \
          \          [ 7,  7,  7,  7,  7,  7,  5,  5,  5,  5,  5,  5,  8,  8,  8,\
          \  8,  8,  8, 13, 13, 13, 13, 13, 13],\n           [ 7,  7,  7,  7,  7,\
          \  7,  5,  5,  5,  5,  5,  5,  8,  8,  8,  8,  8,  8, 13, 13, 13, 13, 13,
          13],\n           [ 7,  7,  7,  7,  7,  7,  5,  5,  5,  5,  5,  5,  8,  8,\
          \  8,  8,  8,  8, 13, 13, 13, 13, 13, 13],\n           [ 7,  7,  7,  7,\
          \  7,  7,  5,  5,  5,  5,  5,  5,  8,  8,  8,  8,  8,  8, 13, 13, 13, 13,
          13, 13],\n           [ 7,  7,  7,  7,  7,  7,  5,  5,  5,  5,  5,  5,  8,\
          \  8,  8,  8,  8,  8, 13, 13, 13, 13, 13, 13],\n           [ 7,  7,  7,\
          \  7,  7,  7,  5,  5,  5,  5,  5,  5,  8,  8,  8,  8,  8,  8, 13, 13, 13,
          13, 13, 13]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 6
            - 10
            - 1
            - 2
          - - 11
            - 9
            - 4
            - 3
          - - 14
            - 12
            - 15
            - 0
          - - 7
            - 5
            - 8
            - 13
