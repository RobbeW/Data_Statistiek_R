- tab: Feedback bepaal_factor
  contexts:
  - testcases:
    - expression: bepaal_factor([[3, 1], [0, 2]])
      description:
        description: "bepaal_factor([[3, 1],\n               [0, 2]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[0, 1], [3, 2]])
      description:
        description: "bepaal_factor([[0, 1],\n               [3, 2]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[0, 0], [0, 0]])
      description:
        description: "bepaal_factor([[0, 0],\n               [0, 0]])"
        format: python
      return: 2
  - testcases:
    - expression: bepaal_factor([[8, 5, 4], [7, 0, 6], [2, 1, 3]])
      description:
        description: "bepaal_factor([[8, 5, 4],\n               [7, 0, 6],\n     \
          \          [2, 1, 3]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[21, 6, 19, 10, 2], [4, 9, 17, 1, 23], [5, 16, 11,
        0, 13], [7, 3, 14, 20, 12], [8, 15, 22, 24, 18]])
      description:
        description: "bepaal_factor([[21,  6, 19, 10,  2],\n               [ 4,  9,
          17,  1, 23],\n               [ 5, 16, 11,  0, 13],\n               [ 7,\
          \  3, 14, 20, 12],\n               [ 8, 15, 22, 24, 18]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[6, 14, 16, 32, 4, 24], [10, 3, 31, 26, 11, 0], [15,
        1, 25, 7, 23, 17], [22, 34, 20, 8, 2, 27], [18, 5, 30, 35, 12, 19], [29, 13,
        28, 9, 33, 21]])
      description:
        description: "bepaal_factor([[ 6, 14, 16, 32,  4, 24],\n               [10,\
          \  3, 31, 26, 11,  0],\n               [15,  1, 25,  7, 23, 17],\n     \
          \          [22, 34, 20,  8,  2, 27],\n               [18,  5, 30, 35, 12,
          19],\n               [29, 13, 28,  9, 33, 21]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[0, 31, 21, 25, 33, 5], [15, 3, 14, 7, 4, 6], [32,
        28, 23, 34, 27, 9], [30, 26, 17, 13, 24, 16], [19, 22, 12, 18, 8, 10], [2,
        11, 29, 20, 35, 1]])
      description:
        description: "bepaal_factor([[ 0, 31, 21, 25, 33,  5],\n               [15,\
          \  3, 14,  7,  4,  6],\n               [32, 28, 23, 34, 27,  9],\n     \
          \          [30, 26, 17, 13, 24, 16],\n               [19, 22, 12, 18,  8,
          10],\n               [ 2, 11, 29, 20, 35,  1]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[15, 15, 6, 6, 3, 3, 5, 5], [15, 15, 6, 6, 3, 3,
        5, 5], [8, 8, 7, 7, 11, 11, 4, 4], [8, 8, 7, 7, 11, 11, 4, 4], [14, 14, 13,
        13, 0, 0, 12, 12], [14, 14, 13, 13, 0, 0, 12, 12], [1, 1, 10, 10, 9, 9, 2,
        2], [1, 1, 10, 10, 9, 9, 2, 2]])
      description:
        description: "bepaal_factor([[15, 15,  6,  6,  3,  3,  5,  5],\n         \
          \      [15, 15,  6,  6,  3,  3,  5,  5],\n               [ 8,  8,  7,  7,
          11, 11,  4,  4],\n               [ 8,  8,  7,  7, 11, 11,  4,  4],\n   \
          \            [14, 14, 13, 13,  0,  0, 12, 12],\n               [14, 14,
          13, 13,  0,  0, 12, 12],\n               [ 1,  1, 10, 10,  9,  9,  2,  2],\n\
          \               [ 1,  1, 10, 10,  9,  9,  2,  2]])"
        format: python
      return: 2
  - testcases:
    - expression: bepaal_factor([[1, 1, 1, 1, 1, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 3,
        3, 3, 3, 3], [1, 1, 1, 1, 1, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 3, 3, 3, 3, 3],
        [1, 1, 1, 1, 1, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [2, 2, 2,
        2, 2, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 0, 0,
        0, 0, 0], [2, 2, 2, 2, 2, 0, 0, 0, 0, 0]])
      description:
        description: "bepaal_factor([[1, 1, 1, 1, 1, 3, 3, 3, 3, 3],\n           \
          \    [1, 1, 1, 1, 1, 3, 3, 3, 3, 3],\n               [1, 1, 1, 1, 1, 3,
          3, 3, 3, 3],\n               [1, 1, 1, 1, 1, 3, 3, 3, 3, 3],\n         \
          \      [1, 1, 1, 1, 1, 3, 3, 3, 3, 3],\n               [2, 2, 2, 2, 2, 0,
          0, 0, 0, 0],\n               [2, 2, 2, 2, 2, 0, 0, 0, 0, 0],\n         \
          \      [2, 2, 2, 2, 2, 0, 0, 0, 0, 0],\n               [2, 2, 2, 2, 2, 0,
          0, 0, 0, 0],\n               [2, 2, 2, 2, 2, 0, 0, 0, 0, 0]])"
        format: python
      return: 5
  - testcases:
    - expression: bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n     \
          \          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n   \
          \            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n   \
          \            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0]])"
        format: python
      return: 12
  - testcases:
    - expression: bepaal_factor([[15, 15, 15, 6, 6, 6, 9, 9, 9, 14, 14, 14], [15,
        15, 15, 6, 6, 6, 9, 9, 9, 14, 14, 14], [15, 15, 15, 6, 6, 6, 9, 9, 9, 14,
        14, 14], [2, 2, 2, 11, 11, 11, 5, 5, 5, 7, 7, 7], [2, 2, 2, 11, 11, 11, 5,
        5, 5, 7, 7, 7], [2, 2, 2, 11, 11, 11, 5, 5, 5, 7, 7, 7], [10, 10, 10, 13,
        13, 13, 12, 12, 12, 8, 8, 8], [10, 10, 10, 13, 13, 13, 12, 12, 12, 8, 8, 8],
        [10, 10, 10, 13, 13, 13, 12, 12, 12, 8, 8, 8], [0, 0, 0, 4, 4, 4, 3, 3, 3,
        1, 1, 1], [0, 0, 0, 4, 4, 4, 3, 3, 3, 1, 1, 1], [0, 0, 0, 4, 4, 4, 3, 3, 3,
        1, 1, 1]])
      description:
        description: "bepaal_factor([[15, 15, 15,  6,  6,  6,  9,  9,  9, 14, 14,
          14],\n               [15, 15, 15,  6,  6,  6,  9,  9,  9, 14, 14, 14],\n\
          \               [15, 15, 15,  6,  6,  6,  9,  9,  9, 14, 14, 14],\n    \
          \           [ 2,  2,  2, 11, 11, 11,  5,  5,  5,  7,  7,  7],\n        \
          \       [ 2,  2,  2, 11, 11, 11,  5,  5,  5,  7,  7,  7],\n            \
          \   [ 2,  2,  2, 11, 11, 11,  5,  5,  5,  7,  7,  7],\n               [10,
          10, 10, 13, 13, 13, 12, 12, 12,  8,  8,  8],\n               [10, 10, 10,
          13, 13, 13, 12, 12, 12,  8,  8,  8],\n               [10, 10, 10, 13, 13,
          13, 12, 12, 12,  8,  8,  8],\n               [ 0,  0,  0,  4,  4,  4,  3,\
          \  3,  3,  1,  1,  1],\n               [ 0,  0,  0,  4,  4,  4,  3,  3,\
          \  3,  1,  1,  1],\n               [ 0,  0,  0,  4,  4,  4,  3,  3,  3,\
          \  1,  1,  1]])"
        format: python
      return: 3
  - testcases:
    - expression: bepaal_factor([[3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],
        [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 3,
        2, 2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],
        [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 3,
        2, 2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],
        [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],
        [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],
        [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]])
      description:
        description: "bepaal_factor([[3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2,
          2],\n               [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],\n\
          \               [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],\n    \
          \           [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],\n        \
          \       [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],\n            \
          \   [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],\n               [3,
          3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],\n               [3, 3, 3,
          3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],\n               [0, 0, 0, 0, 0,
          0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n               [0, 0, 0, 0, 0, 0, 0,
          0, 1, 1, 1, 1, 1, 1, 1, 1],\n               [0, 0, 0, 0, 0, 0, 0, 0, 1,
          1, 1, 1, 1, 1, 1, 1],\n               [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
          1, 1, 1, 1, 1],\n               [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
          1, 1, 1],\n               [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
          1],\n               [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \               [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]])"
        format: python
      return: 8
  - testcases:
    - expression: bepaal_factor([[13, 13, 13, 13, 7, 7, 7, 7, 15, 15, 15, 15, 10,
        10, 10, 10], [13, 13, 13, 13, 7, 7, 7, 7, 15, 15, 15, 15, 10, 10, 10, 10],
        [13, 13, 13, 13, 7, 7, 7, 7, 15, 15, 15, 15, 10, 10, 10, 10], [13, 13, 13,
        13, 7, 7, 7, 7, 15, 15, 15, 15, 10, 10, 10, 10], [3, 3, 3, 3, 11, 11, 11,
        11, 4, 4, 4, 4, 1, 1, 1, 1], [3, 3, 3, 3, 11, 11, 11, 11, 4, 4, 4, 4, 1, 1,
        1, 1], [3, 3, 3, 3, 11, 11, 11, 11, 4, 4, 4, 4, 1, 1, 1, 1], [3, 3, 3, 3,
        11, 11, 11, 11, 4, 4, 4, 4, 1, 1, 1, 1], [14, 14, 14, 14, 9, 9, 9, 9, 0, 0,
        0, 0, 8, 8, 8, 8], [14, 14, 14, 14, 9, 9, 9, 9, 0, 0, 0, 0, 8, 8, 8, 8], [14,
        14, 14, 14, 9, 9, 9, 9, 0, 0, 0, 0, 8, 8, 8, 8], [14, 14, 14, 14, 9, 9, 9,
        9, 0, 0, 0, 0, 8, 8, 8, 8], [12, 12, 12, 12, 5, 5, 5, 5, 2, 2, 2, 2, 6, 6,
        6, 6], [12, 12, 12, 12, 5, 5, 5, 5, 2, 2, 2, 2, 6, 6, 6, 6], [12, 12, 12,
        12, 5, 5, 5, 5, 2, 2, 2, 2, 6, 6, 6, 6], [12, 12, 12, 12, 5, 5, 5, 5, 2, 2,
        2, 2, 6, 6, 6, 6]])
      description:
        description: "bepaal_factor([[13, 13, 13, 13,  7,  7,  7,  7, 15, 15, 15,
          15, 10, 10, 10, 10],\n               [13, 13, 13, 13,  7,  7,  7,  7, 15,
          15, 15, 15, 10, 10, 10, 10],\n               [13, 13, 13, 13,  7,  7,  7,\
          \  7, 15, 15, 15, 15, 10, 10, 10, 10],\n               [13, 13, 13, 13,\
          \  7,  7,  7,  7, 15, 15, 15, 15, 10, 10, 10, 10],\n               [ 3,\
          \  3,  3,  3, 11, 11, 11, 11,  4,  4,  4,  4,  1,  1,  1,  1],\n       \
          \        [ 3,  3,  3,  3, 11, 11, 11, 11,  4,  4,  4,  4,  1,  1,  1,  1],\n\
          \               [ 3,  3,  3,  3, 11, 11, 11, 11,  4,  4,  4,  4,  1,  1,\
          \  1,  1],\n               [ 3,  3,  3,  3, 11, 11, 11, 11,  4,  4,  4,\
          \  4,  1,  1,  1,  1],\n               [14, 14, 14, 14,  9,  9,  9,  9,\
          \  0,  0,  0,  0,  8,  8,  8,  8],\n               [14, 14, 14, 14,  9,\
          \  9,  9,  9,  0,  0,  0,  0,  8,  8,  8,  8],\n               [14, 14,
          14, 14,  9,  9,  9,  9,  0,  0,  0,  0,  8,  8,  8,  8],\n             \
          \  [14, 14, 14, 14,  9,  9,  9,  9,  0,  0,  0,  0,  8,  8,  8,  8],\n \
          \              [12, 12, 12, 12,  5,  5,  5,  5,  2,  2,  2,  2,  6,  6,\
          \  6,  6],\n               [12, 12, 12, 12,  5,  5,  5,  5,  2,  2,  2,\
          \  2,  6,  6,  6,  6],\n               [12, 12, 12, 12,  5,  5,  5,  5,\
          \  2,  2,  2,  2,  6,  6,  6,  6],\n               [12, 12, 12, 12,  5,\
          \  5,  5,  5,  2,  2,  2,  2,  6,  6,  6,  6]])"
        format: python
      return: 4
  - testcases:
    - expression: bepaal_factor([[3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0,
        0, 0], [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3,
        3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
        2, 2, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0,
        0, 0], [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0], [8, 8, 8, 8,
        8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5], [8, 8, 8, 8, 8, 8, 1, 1, 1, 1,
        1, 1, 5, 5, 5, 5, 5, 5], [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5,
        5, 5], [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5], [8, 8, 8, 8,
        8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5], [8, 8, 8, 8, 8, 8, 1, 1, 1, 1,
        1, 1, 5, 5, 5, 5, 5, 5], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4,
        4, 4], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4], [6, 6, 6, 6,
        6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7,
        7, 7, 4, 4, 4, 4, 4, 4], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4,
        4, 4], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4]])
      description:
        description: "bepaal_factor([[3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0,
          0, 0, 0],\n               [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0,
          0, 0, 0],\n               [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0,
          0, 0, 0],\n               [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0,
          0, 0, 0],\n               [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0,
          0, 0, 0],\n               [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0,
          0, 0, 0],\n               [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5,
          5, 5, 5],\n               [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5,
          5, 5, 5],\n               [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5,
          5, 5, 5],\n               [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5,
          5, 5, 5],\n               [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5,
          5, 5, 5],\n               [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5,
          5, 5, 5],\n               [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4,
          4, 4, 4],\n               [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4,
          4, 4, 4],\n               [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4,
          4, 4, 4],\n               [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4,
          4, 4, 4],\n               [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4,
          4, 4, 4],\n               [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4,
          4, 4, 4]])"
        format: python
      return: 6
  - testcases:
    - expression: bepaal_factor([[20, 20, 20, 25, 25, 25, 26, 26, 26, 16, 16, 16,
        23, 23, 23, 19, 19, 19], [20, 20, 20, 25, 25, 25, 26, 26, 26, 16, 16, 16,
        23, 23, 23, 19, 19, 19], [20, 20, 20, 25, 25, 25, 26, 26, 26, 16, 16, 16,
        23, 23, 23, 19, 19, 19], [22, 22, 22, 8, 8, 8, 29, 29, 29, 9, 9, 9, 31, 31,
        31, 34, 34, 34], [22, 22, 22, 8, 8, 8, 29, 29, 29, 9, 9, 9, 31, 31, 31, 34,
        34, 34], [22, 22, 22, 8, 8, 8, 29, 29, 29, 9, 9, 9, 31, 31, 31, 34, 34, 34],
        [6, 6, 6, 10, 10, 10, 13, 13, 13, 3, 3, 3, 17, 17, 17, 27, 27, 27], [6, 6,
        6, 10, 10, 10, 13, 13, 13, 3, 3, 3, 17, 17, 17, 27, 27, 27], [6, 6, 6, 10,
        10, 10, 13, 13, 13, 3, 3, 3, 17, 17, 17, 27, 27, 27], [35, 35, 35, 24, 24,
        24, 15, 15, 15, 12, 12, 12, 21, 21, 21, 11, 11, 11], [35, 35, 35, 24, 24,
        24, 15, 15, 15, 12, 12, 12, 21, 21, 21, 11, 11, 11], [35, 35, 35, 24, 24,
        24, 15, 15, 15, 12, 12, 12, 21, 21, 21, 11, 11, 11], [14, 14, 14, 1, 1, 1,
        5, 5, 5, 30, 30, 30, 4, 4, 4, 7, 7, 7], [14, 14, 14, 1, 1, 1, 5, 5, 5, 30,
        30, 30, 4, 4, 4, 7, 7, 7], [14, 14, 14, 1, 1, 1, 5, 5, 5, 30, 30, 30, 4, 4,
        4, 7, 7, 7], [32, 32, 32, 28, 28, 28, 0, 0, 0, 33, 33, 33, 18, 18, 18, 2,
        2, 2], [32, 32, 32, 28, 28, 28, 0, 0, 0, 33, 33, 33, 18, 18, 18, 2, 2, 2],
        [32, 32, 32, 28, 28, 28, 0, 0, 0, 33, 33, 33, 18, 18, 18, 2, 2, 2]])
      description:
        description: "bepaal_factor([[20, 20, 20, 25, 25, 25, 26, 26, 26, 16, 16,
          16, 23, 23, 23, 19, 19, 19],\n               [20, 20, 20, 25, 25, 25, 26,
          26, 26, 16, 16, 16, 23, 23, 23, 19, 19, 19],\n               [20, 20, 20,
          25, 25, 25, 26, 26, 26, 16, 16, 16, 23, 23, 23, 19, 19, 19],\n         \
          \      [22, 22, 22,  8,  8,  8, 29, 29, 29,  9,  9,  9, 31, 31, 31, 34,
          34, 34],\n               [22, 22, 22,  8,  8,  8, 29, 29, 29,  9,  9,  9,
          31, 31, 31, 34, 34, 34],\n               [22, 22, 22,  8,  8,  8, 29, 29,
          29,  9,  9,  9, 31, 31, 31, 34, 34, 34],\n               [ 6,  6,  6, 10,
          10, 10, 13, 13, 13,  3,  3,  3, 17, 17, 17, 27, 27, 27],\n             \
          \  [ 6,  6,  6, 10, 10, 10, 13, 13, 13,  3,  3,  3, 17, 17, 17, 27, 27,
          27],\n               [ 6,  6,  6, 10, 10, 10, 13, 13, 13,  3,  3,  3, 17,
          17, 17, 27, 27, 27],\n               [35, 35, 35, 24, 24, 24, 15, 15, 15,
          12, 12, 12, 21, 21, 21, 11, 11, 11],\n               [35, 35, 35, 24, 24,
          24, 15, 15, 15, 12, 12, 12, 21, 21, 21, 11, 11, 11],\n               [35,
          35, 35, 24, 24, 24, 15, 15, 15, 12, 12, 12, 21, 21, 21, 11, 11, 11],\n \
          \              [14, 14, 14,  1,  1,  1,  5,  5,  5, 30, 30, 30,  4,  4,\
          \  4,  7,  7,  7],\n               [14, 14, 14,  1,  1,  1,  5,  5,  5,
          30, 30, 30,  4,  4,  4,  7,  7,  7],\n               [14, 14, 14,  1,  1,\
          \  1,  5,  5,  5, 30, 30, 30,  4,  4,  4,  7,  7,  7],\n               [32,
          32, 32, 28, 28, 28,  0,  0,  0, 33, 33, 33, 18, 18, 18,  2,  2,  2],\n \
          \              [32, 32, 32, 28, 28, 28,  0,  0,  0, 33, 33, 33, 18, 18,
          18,  2,  2,  2],\n               [32, 32, 32, 28, 28, 28,  0,  0,  0, 33,
          33, 33, 18, 18, 18,  2,  2,  2]])"
        format: python
      return: 3
  - testcases:
    - expression: bepaal_factor([[15, 15, 15, 17, 17, 17, 33, 33, 33, 28, 28, 28,
        2, 2, 2, 27, 27, 27], [15, 15, 15, 17, 17, 17, 33, 33, 33, 28, 28, 28, 2,
        2, 2, 27, 27, 27], [15, 15, 15, 17, 17, 17, 33, 33, 33, 28, 28, 28, 2, 2,
        2, 27, 27, 27], [19, 19, 19, 9, 9, 9, 14, 14, 14, 32, 32, 32, 6, 6, 6, 4,
        4, 4], [19, 19, 19, 9, 9, 9, 14, 14, 14, 32, 32, 32, 6, 6, 6, 4, 4, 4], [19,
        19, 19, 9, 9, 9, 14, 14, 14, 32, 32, 32, 6, 6, 6, 4, 4, 4], [10, 10, 10, 22,
        22, 22, 8, 8, 8, 20, 20, 20, 7, 7, 7, 24, 24, 24], [10, 10, 10, 22, 22, 22,
        8, 8, 8, 20, 20, 20, 7, 7, 7, 24, 24, 24], [10, 10, 10, 22, 22, 22, 8, 8,
        8, 20, 20, 20, 7, 7, 7, 24, 24, 24], [12, 12, 12, 31, 31, 31, 25, 25, 25,
        13, 13, 13, 35, 35, 35, 3, 3, 3], [12, 12, 12, 31, 31, 31, 25, 25, 25, 13,
        13, 13, 35, 35, 35, 3, 3, 3], [12, 12, 12, 31, 31, 31, 25, 25, 25, 13, 13,
        13, 35, 35, 35, 3, 3, 3], [34, 34, 34, 21, 21, 21, 11, 11, 11, 5, 5, 5, 16,
        16, 16, 0, 0, 0], [34, 34, 34, 21, 21, 21, 11, 11, 11, 5, 5, 5, 16, 16, 16,
        0, 0, 0], [34, 34, 34, 21, 21, 21, 11, 11, 11, 5, 5, 5, 16, 16, 16, 0, 0,
        0], [1, 1, 1, 26, 26, 26, 30, 30, 30, 29, 29, 29, 18, 18, 18, 23, 23, 23],
        [1, 1, 1, 26, 26, 26, 30, 30, 30, 29, 29, 29, 18, 18, 18, 23, 23, 23], [1,
        1, 1, 26, 26, 26, 30, 30, 30, 29, 29, 29, 18, 18, 18, 23, 23, 23]])
      description:
        description: "bepaal_factor([[15, 15, 15, 17, 17, 17, 33, 33, 33, 28, 28,
          28,  2,  2,  2, 27, 27, 27],\n               [15, 15, 15, 17, 17, 17, 33,
          33, 33, 28, 28, 28,  2,  2,  2, 27, 27, 27],\n               [15, 15, 15,
          17, 17, 17, 33, 33, 33, 28, 28, 28,  2,  2,  2, 27, 27, 27],\n         \
          \      [19, 19, 19,  9,  9,  9, 14, 14, 14, 32, 32, 32,  6,  6,  6,  4,\
          \  4,  4],\n               [19, 19, 19,  9,  9,  9, 14, 14, 14, 32, 32,
          32,  6,  6,  6,  4,  4,  4],\n               [19, 19, 19,  9,  9,  9, 14,
          14, 14, 32, 32, 32,  6,  6,  6,  4,  4,  4],\n               [10, 10, 10,
          22, 22, 22,  8,  8,  8, 20, 20, 20,  7,  7,  7, 24, 24, 24],\n         \
          \      [10, 10, 10, 22, 22, 22,  8,  8,  8, 20, 20, 20,  7,  7,  7, 24,
          24, 24],\n               [10, 10, 10, 22, 22, 22,  8,  8,  8, 20, 20, 20,\
          \  7,  7,  7, 24, 24, 24],\n               [12, 12, 12, 31, 31, 31, 25,
          25, 25, 13, 13, 13, 35, 35, 35,  3,  3,  3],\n               [12, 12, 12,
          31, 31, 31, 25, 25, 25, 13, 13, 13, 35, 35, 35,  3,  3,  3],\n         \
          \      [12, 12, 12, 31, 31, 31, 25, 25, 25, 13, 13, 13, 35, 35, 35,  3,\
          \  3,  3],\n               [34, 34, 34, 21, 21, 21, 11, 11, 11,  5,  5,\
          \  5, 16, 16, 16,  0,  0,  0],\n               [34, 34, 34, 21, 21, 21,
          11, 11, 11,  5,  5,  5, 16, 16, 16,  0,  0,  0],\n               [34, 34,
          34, 21, 21, 21, 11, 11, 11,  5,  5,  5, 16, 16, 16,  0,  0,  0],\n     \
          \          [ 1,  1,  1, 26, 26, 26, 30, 30, 30, 29, 29, 29, 18, 18, 18,
          23, 23, 23],\n               [ 1,  1,  1, 26, 26, 26, 30, 30, 30, 29, 29,
          29, 18, 18, 18, 23, 23, 23],\n               [ 1,  1,  1, 26, 26, 26, 30,
          30, 30, 29, 29, 29, 18, 18, 18, 23, 23, 23]])"
        format: python
      return: 3
  - testcases:
    - expression: bepaal_factor([[1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7,
        7, 7], [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7], [1, 1, 1, 1,
        1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7], [1, 1, 1, 1, 1, 1, 8, 8, 8, 8,
        8, 8, 7, 7, 7, 7, 7, 7], [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7,
        7, 7], [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7], [0, 0, 0, 0,
        0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5,
        5, 5], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0,
        0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 5, 5, 5, 5, 5, 5], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3,
        3, 3], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3], [4, 4, 4, 4,
        4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6,
        6, 6, 3, 3, 3, 3, 3, 3], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3,
        3, 3], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3]])
      description:
        description: "bepaal_factor([[1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7,
          7, 7, 7],\n               [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7,
          7, 7, 7],\n               [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7,
          7, 7, 7],\n               [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7,
          7, 7, 7],\n               [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7,
          7, 7, 7],\n               [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7,
          7, 7, 7],\n               [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5,
          5, 5, 5],\n               [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5,
          5, 5, 5],\n               [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5,
          5, 5, 5],\n               [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5,
          5, 5, 5],\n               [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5,
          5, 5, 5],\n               [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5,
          5, 5, 5],\n               [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3,
          3, 3, 3],\n               [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3,
          3, 3, 3],\n               [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3,
          3, 3, 3],\n               [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3,
          3, 3, 3],\n               [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3,
          3, 3, 3],\n               [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3,
          3, 3, 3]])"
        format: python
      return: 6
  - testcases:
    - expression: bepaal_factor([[11, 11, 11, 28, 28, 28, 14, 14, 14, 10, 10, 10,
        32, 32, 32, 3, 3, 3], [11, 11, 11, 28, 28, 28, 14, 14, 14, 10, 10, 10, 32,
        32, 32, 3, 3, 3], [11, 11, 11, 28, 28, 28, 14, 14, 14, 10, 10, 10, 32, 32,
        32, 3, 3, 3], [29, 29, 29, 34, 34, 34, 1, 1, 1, 19, 19, 19, 25, 25, 25, 5,
        5, 5], [29, 29, 29, 34, 34, 34, 1, 1, 1, 19, 19, 19, 25, 25, 25, 5, 5, 5],
        [29, 29, 29, 34, 34, 34, 1, 1, 1, 19, 19, 19, 25, 25, 25, 5, 5, 5], [31, 31,
        31, 26, 26, 26, 30, 30, 30, 15, 15, 15, 33, 33, 33, 16, 16, 16], [31, 31,
        31, 26, 26, 26, 30, 30, 30, 15, 15, 15, 33, 33, 33, 16, 16, 16], [31, 31,
        31, 26, 26, 26, 30, 30, 30, 15, 15, 15, 33, 33, 33, 16, 16, 16], [27, 27,
        27, 35, 35, 35, 0, 0, 0, 20, 20, 20, 17, 17, 17, 13, 13, 13], [27, 27, 27,
        35, 35, 35, 0, 0, 0, 20, 20, 20, 17, 17, 17, 13, 13, 13], [27, 27, 27, 35,
        35, 35, 0, 0, 0, 20, 20, 20, 17, 17, 17, 13, 13, 13], [12, 12, 12, 18, 18,
        18, 2, 2, 2, 8, 8, 8, 23, 23, 23, 22, 22, 22], [12, 12, 12, 18, 18, 18, 2,
        2, 2, 8, 8, 8, 23, 23, 23, 22, 22, 22], [12, 12, 12, 18, 18, 18, 2, 2, 2,
        8, 8, 8, 23, 23, 23, 22, 22, 22], [9, 9, 9, 24, 24, 24, 7, 7, 7, 21, 21, 21,
        4, 4, 4, 6, 6, 6], [9, 9, 9, 24, 24, 24, 7, 7, 7, 21, 21, 21, 4, 4, 4, 6,
        6, 6], [9, 9, 9, 24, 24, 24, 7, 7, 7, 21, 21, 21, 4, 4, 4, 6, 6, 6]])
      description:
        description: "bepaal_factor([[11, 11, 11, 28, 28, 28, 14, 14, 14, 10, 10,
          10, 32, 32, 32,  3,  3,  3],\n               [11, 11, 11, 28, 28, 28, 14,
          14, 14, 10, 10, 10, 32, 32, 32,  3,  3,  3],\n               [11, 11, 11,
          28, 28, 28, 14, 14, 14, 10, 10, 10, 32, 32, 32,  3,  3,  3],\n         \
          \      [29, 29, 29, 34, 34, 34,  1,  1,  1, 19, 19, 19, 25, 25, 25,  5,\
          \  5,  5],\n               [29, 29, 29, 34, 34, 34,  1,  1,  1, 19, 19,
          19, 25, 25, 25,  5,  5,  5],\n               [29, 29, 29, 34, 34, 34,  1,\
          \  1,  1, 19, 19, 19, 25, 25, 25,  5,  5,  5],\n               [31, 31,
          31, 26, 26, 26, 30, 30, 30, 15, 15, 15, 33, 33, 33, 16, 16, 16],\n     \
          \          [31, 31, 31, 26, 26, 26, 30, 30, 30, 15, 15, 15, 33, 33, 33,
          16, 16, 16],\n               [31, 31, 31, 26, 26, 26, 30, 30, 30, 15, 15,
          15, 33, 33, 33, 16, 16, 16],\n               [27, 27, 27, 35, 35, 35,  0,\
          \  0,  0, 20, 20, 20, 17, 17, 17, 13, 13, 13],\n               [27, 27,
          27, 35, 35, 35,  0,  0,  0, 20, 20, 20, 17, 17, 17, 13, 13, 13],\n     \
          \          [27, 27, 27, 35, 35, 35,  0,  0,  0, 20, 20, 20, 17, 17, 17,
          13, 13, 13],\n               [12, 12, 12, 18, 18, 18,  2,  2,  2,  8,  8,\
          \  8, 23, 23, 23, 22, 22, 22],\n               [12, 12, 12, 18, 18, 18,\
          \  2,  2,  2,  8,  8,  8, 23, 23, 23, 22, 22, 22],\n               [12,
          12, 12, 18, 18, 18,  2,  2,  2,  8,  8,  8, 23, 23, 23, 22, 22, 22],\n \
          \              [ 9,  9,  9, 24, 24, 24,  7,  7,  7, 21, 21, 21,  4,  4,\
          \  4,  6,  6,  6],\n               [ 9,  9,  9, 24, 24, 24,  7,  7,  7,
          21, 21, 21,  4,  4,  4,  6,  6,  6],\n               [ 9,  9,  9, 24, 24,
          24,  7,  7,  7, 21, 21, 21,  4,  4,  4,  6,  6,  6]])"
        format: python
      return: 3
  - testcases:
    - expression: bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0]])"
        format: python
      return: 18
  - testcases:
    - expression: bepaal_factor([[7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 12,
        12, 12, 12, 12], [7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 12, 12, 12,
        12, 12], [7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12],
        [7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12], [7, 7,
        7, 7, 7, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12], [4, 4, 4, 4, 4,
        9, 9, 9, 9, 9, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [4, 4, 4, 4, 4, 9, 9, 9, 9,
        9, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [4, 4, 4, 4, 4, 9, 9, 9, 9, 9, 2, 2, 2,
        2, 2, 0, 0, 0, 0, 0], [4, 4, 4, 4, 4, 9, 9, 9, 9, 9, 2, 2, 2, 2, 2, 0, 0,
        0, 0, 0], [4, 4, 4, 4, 4, 9, 9, 9, 9, 9, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [1,
        1, 1, 1, 1, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14], [1, 1,
        1, 1, 1, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14], [1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14], [1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14], [1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14], [11, 11, 11, 11, 11,
        6, 6, 6, 6, 6, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10], [11, 11, 11, 11, 11,
        6, 6, 6, 6, 6, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10], [11, 11, 11, 11, 11,
        6, 6, 6, 6, 6, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10], [11, 11, 11, 11, 11,
        6, 6, 6, 6, 6, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10], [11, 11, 11, 11, 11,
        6, 6, 6, 6, 6, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10]])
      description:
        description: "bepaal_factor([[ 7,  7,  7,  7,  7,  5,  5,  5,  5,  5,  8,\
          \  8,  8,  8,  8, 12, 12, 12, 12, 12],\n               [ 7,  7,  7,  7,\
          \  7,  5,  5,  5,  5,  5,  8,  8,  8,  8,  8, 12, 12, 12, 12, 12],\n   \
          \            [ 7,  7,  7,  7,  7,  5,  5,  5,  5,  5,  8,  8,  8,  8,  8,
          12, 12, 12, 12, 12],\n               [ 7,  7,  7,  7,  7,  5,  5,  5,  5,\
          \  5,  8,  8,  8,  8,  8, 12, 12, 12, 12, 12],\n               [ 7,  7,\
          \  7,  7,  7,  5,  5,  5,  5,  5,  8,  8,  8,  8,  8, 12, 12, 12, 12, 12],\n\
          \               [ 4,  4,  4,  4,  4,  9,  9,  9,  9,  9,  2,  2,  2,  2,\
          \  2,  0,  0,  0,  0,  0],\n               [ 4,  4,  4,  4,  4,  9,  9,\
          \  9,  9,  9,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0],\n               [
          4,  4,  4,  4,  4,  9,  9,  9,  9,  9,  2,  2,  2,  2,  2,  0,  0,  0, \
          \ 0,  0],\n               [ 4,  4,  4,  4,  4,  9,  9,  9,  9,  9,  2, \
          \ 2,  2,  2,  2,  0,  0,  0,  0,  0],\n               [ 4,  4,  4,  4, \
          \ 4,  9,  9,  9,  9,  9,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0],\n    \
          \           [ 1,  1,  1,  1,  1,  3,  3,  3,  3,  3, 15, 15, 15, 15, 15,
          14, 14, 14, 14, 14],\n               [ 1,  1,  1,  1,  1,  3,  3,  3,  3,\
          \  3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14],\n               [ 1,  1,\
          \  1,  1,  1,  3,  3,  3,  3,  3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14],\n\
          \               [ 1,  1,  1,  1,  1,  3,  3,  3,  3,  3, 15, 15, 15, 15,
          15, 14, 14, 14, 14, 14],\n               [ 1,  1,  1,  1,  1,  3,  3,  3,\
          \  3,  3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14],\n               [11,
          11, 11, 11, 11,  6,  6,  6,  6,  6, 13, 13, 13, 13, 13, 10, 10, 10, 10,
          10],\n               [11, 11, 11, 11, 11,  6,  6,  6,  6,  6, 13, 13, 13,
          13, 13, 10, 10, 10, 10, 10],\n               [11, 11, 11, 11, 11,  6,  6,\
          \  6,  6,  6, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10],\n               [11,
          11, 11, 11, 11,  6,  6,  6,  6,  6, 13, 13, 13, 13, 13, 10, 10, 10, 10,
          10],\n               [11, 11, 11, 11, 11,  6,  6,  6,  6,  6, 13, 13, 13,
          13, 13, 10, 10, 10, 10, 10]])"
        format: python
      return: 5
- tab: Feedback inkrimpen
  contexts:
  - testcases:
    - expression: inkrimpen([[3, 1], [0, 2]])
      description:
        description: "inkrimpen([[3, 1],\n           [0, 2]])"
        format: python
      return:
      - - 3
        - 1
      - - 0
        - 2
  - testcases:
    - expression: inkrimpen([[0, 1], [3, 2]])
      description:
        description: "inkrimpen([[0, 1],\n           [3, 2]])"
        format: python
      return:
      - - 0
        - 1
      - - 3
        - 2
  - testcases:
    - expression: inkrimpen([[0, 0], [0, 0]])
      description:
        description: "inkrimpen([[0, 0],\n           [0, 0]])"
        format: python
      return:
      - - 0
  - testcases:
    - expression: inkrimpen([[8, 5, 4], [7, 0, 6], [2, 1, 3]])
      description:
        description: "inkrimpen([[8, 5, 4],\n           [7, 0, 6],\n           [2,
          1, 3]])"
        format: python
      return:
      - - 8
        - 5
        - 4
      - - 7
        - 0
        - 6
      - - 2
        - 1
        - 3
  - testcases:
    - expression: inkrimpen([[21, 6, 19, 10, 2], [4, 9, 17, 1, 23], [5, 16, 11, 0,
        13], [7, 3, 14, 20, 12], [8, 15, 22, 24, 18]])
      description:
        description: "inkrimpen([[21,  6, 19, 10,  2],\n           [ 4,  9, 17,  1,
          23],\n           [ 5, 16, 11,  0, 13],\n           [ 7,  3, 14, 20, 12],\n\
          \           [ 8, 15, 22, 24, 18]])"
        format: python
      return:
      - - 21
        - 6
        - 19
        - 10
        - 2
      - - 4
        - 9
        - 17
        - 1
        - 23
      - - 5
        - 16
        - 11
        - 0
        - 13
      - - 7
        - 3
        - 14
        - 20
        - 12
      - - 8
        - 15
        - 22
        - 24
        - 18
  - testcases:
    - expression: inkrimpen([[6, 14, 16, 32, 4, 24], [10, 3, 31, 26, 11, 0], [15,
        1, 25, 7, 23, 17], [22, 34, 20, 8, 2, 27], [18, 5, 30, 35, 12, 19], [29, 13,
        28, 9, 33, 21]])
      description:
        description: "inkrimpen([[ 6, 14, 16, 32,  4, 24],\n           [10,  3, 31,
          26, 11,  0],\n           [15,  1, 25,  7, 23, 17],\n           [22, 34,
          20,  8,  2, 27],\n           [18,  5, 30, 35, 12, 19],\n           [29,
          13, 28,  9, 33, 21]])"
        format: python
      return:
      - - 6
        - 14
        - 16
        - 32
        - 4
        - 24
      - - 10
        - 3
        - 31
        - 26
        - 11
        - 0
      - - 15
        - 1
        - 25
        - 7
        - 23
        - 17
      - - 22
        - 34
        - 20
        - 8
        - 2
        - 27
      - - 18
        - 5
        - 30
        - 35
        - 12
        - 19
      - - 29
        - 13
        - 28
        - 9
        - 33
        - 21
  - testcases:
    - expression: inkrimpen([[0, 31, 21, 25, 33, 5], [15, 3, 14, 7, 4, 6], [32, 28,
        23, 34, 27, 9], [30, 26, 17, 13, 24, 16], [19, 22, 12, 18, 8, 10], [2, 11,
        29, 20, 35, 1]])
      description:
        description: "inkrimpen([[ 0, 31, 21, 25, 33,  5],\n           [15,  3, 14,\
          \  7,  4,  6],\n           [32, 28, 23, 34, 27,  9],\n           [30, 26,
          17, 13, 24, 16],\n           [19, 22, 12, 18,  8, 10],\n           [ 2,
          11, 29, 20, 35,  1]])"
        format: python
      return:
      - - 0
        - 31
        - 21
        - 25
        - 33
        - 5
      - - 15
        - 3
        - 14
        - 7
        - 4
        - 6
      - - 32
        - 28
        - 23
        - 34
        - 27
        - 9
      - - 30
        - 26
        - 17
        - 13
        - 24
        - 16
      - - 19
        - 22
        - 12
        - 18
        - 8
        - 10
      - - 2
        - 11
        - 29
        - 20
        - 35
        - 1
  - testcases:
    - expression: inkrimpen([[15, 15, 6, 6, 3, 3, 5, 5], [15, 15, 6, 6, 3, 3, 5, 5],
        [8, 8, 7, 7, 11, 11, 4, 4], [8, 8, 7, 7, 11, 11, 4, 4], [14, 14, 13, 13, 0,
        0, 12, 12], [14, 14, 13, 13, 0, 0, 12, 12], [1, 1, 10, 10, 9, 9, 2, 2], [1,
        1, 10, 10, 9, 9, 2, 2]])
      description:
        description: "inkrimpen([[15, 15,  6,  6,  3,  3,  5,  5],\n           [15,
          15,  6,  6,  3,  3,  5,  5],\n           [ 8,  8,  7,  7, 11, 11,  4,  4],\n\
          \           [ 8,  8,  7,  7, 11, 11,  4,  4],\n           [14, 14, 13, 13,\
          \  0,  0, 12, 12],\n           [14, 14, 13, 13,  0,  0, 12, 12],\n     \
          \      [ 1,  1, 10, 10,  9,  9,  2,  2],\n           [ 1,  1, 10, 10,  9,\
          \  9,  2,  2]])"
        format: python
      return:
      - - 15
        - 6
        - 3
        - 5
      - - 8
        - 7
        - 11
        - 4
      - - 14
        - 13
        - 0
        - 12
      - - 1
        - 10
        - 9
        - 2
  - testcases:
    - expression: inkrimpen([[1, 1, 1, 1, 1, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 3, 3,
        3, 3, 3], [1, 1, 1, 1, 1, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 3, 3, 3, 3, 3],
        [1, 1, 1, 1, 1, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [2, 2, 2,
        2, 2, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 0, 0,
        0, 0, 0], [2, 2, 2, 2, 2, 0, 0, 0, 0, 0]])
      description:
        description: "inkrimpen([[1, 1, 1, 1, 1, 3, 3, 3, 3, 3],\n           [1, 1,
          1, 1, 1, 3, 3, 3, 3, 3],\n           [1, 1, 1, 1, 1, 3, 3, 3, 3, 3],\n \
          \          [1, 1, 1, 1, 1, 3, 3, 3, 3, 3],\n           [1, 1, 1, 1, 1, 3,
          3, 3, 3, 3],\n           [2, 2, 2, 2, 2, 0, 0, 0, 0, 0],\n           [2,
          2, 2, 2, 2, 0, 0, 0, 0, 0],\n           [2, 2, 2, 2, 2, 0, 0, 0, 0, 0],\n\
          \           [2, 2, 2, 2, 2, 0, 0, 0, 0, 0],\n           [2, 2, 2, 2, 2,
          0, 0, 0, 0, 0]])"
        format: python
      return:
      - - 1
        - 3
      - - 2
        - 0
  - testcases:
    - expression: inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n         \
          \  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n \
          \          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return:
      - - 0
  - testcases:
    - expression: inkrimpen([[15, 15, 15, 6, 6, 6, 9, 9, 9, 14, 14, 14], [15, 15,
        15, 6, 6, 6, 9, 9, 9, 14, 14, 14], [15, 15, 15, 6, 6, 6, 9, 9, 9, 14, 14,
        14], [2, 2, 2, 11, 11, 11, 5, 5, 5, 7, 7, 7], [2, 2, 2, 11, 11, 11, 5, 5,
        5, 7, 7, 7], [2, 2, 2, 11, 11, 11, 5, 5, 5, 7, 7, 7], [10, 10, 10, 13, 13,
        13, 12, 12, 12, 8, 8, 8], [10, 10, 10, 13, 13, 13, 12, 12, 12, 8, 8, 8], [10,
        10, 10, 13, 13, 13, 12, 12, 12, 8, 8, 8], [0, 0, 0, 4, 4, 4, 3, 3, 3, 1, 1,
        1], [0, 0, 0, 4, 4, 4, 3, 3, 3, 1, 1, 1], [0, 0, 0, 4, 4, 4, 3, 3, 3, 1, 1,
        1]])
      description:
        description: "inkrimpen([[15, 15, 15,  6,  6,  6,  9,  9,  9, 14, 14, 14],\n\
          \           [15, 15, 15,  6,  6,  6,  9,  9,  9, 14, 14, 14],\n        \
          \   [15, 15, 15,  6,  6,  6,  9,  9,  9, 14, 14, 14],\n           [ 2, \
          \ 2,  2, 11, 11, 11,  5,  5,  5,  7,  7,  7],\n           [ 2,  2,  2, 11,
          11, 11,  5,  5,  5,  7,  7,  7],\n           [ 2,  2,  2, 11, 11, 11,  5,\
          \  5,  5,  7,  7,  7],\n           [10, 10, 10, 13, 13, 13, 12, 12, 12,\
          \  8,  8,  8],\n           [10, 10, 10, 13, 13, 13, 12, 12, 12,  8,  8,\
          \  8],\n           [10, 10, 10, 13, 13, 13, 12, 12, 12,  8,  8,  8],\n \
          \          [ 0,  0,  0,  4,  4,  4,  3,  3,  3,  1,  1,  1],\n         \
          \  [ 0,  0,  0,  4,  4,  4,  3,  3,  3,  1,  1,  1],\n           [ 0,  0,\
          \  0,  4,  4,  4,  3,  3,  3,  1,  1,  1]])"
        format: python
      return:
      - - 15
        - 6
        - 9
        - 14
      - - 2
        - 11
        - 5
        - 7
      - - 10
        - 13
        - 12
        - 8
      - - 0
        - 4
        - 3
        - 1
  - testcases:
    - expression: inkrimpen([[3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2], [3,
        3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 3, 2,
        2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2], [3,
        3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 3, 2,
        2, 2, 2, 2, 2, 2, 2], [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2], [3,
        3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 1,
        1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0,
        0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1,
        1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0,
        0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1,
        1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]])
      description:
        description: "inkrimpen([[3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],\n\
          \           [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],\n        \
          \   [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],\n           [3, 3,
          3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],\n           [3, 3, 3, 3, 3, 3,
          3, 3, 2, 2, 2, 2, 2, 2, 2, 2],\n           [3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
          2, 2, 2, 2, 2, 2],\n           [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
          2, 2],\n           [3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2],\n \
          \          [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n         \
          \  [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n           [0, 0,
          0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n           [0, 0, 0, 0, 0, 0,
          0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n           [0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
          1, 1, 1, 1, 1, 1],\n           [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
          1, 1],\n           [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n \
          \          [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]])"
        format: python
      return:
      - - 3
        - 2
      - - 0
        - 1
  - testcases:
    - expression: inkrimpen([[13, 13, 13, 13, 7, 7, 7, 7, 15, 15, 15, 15, 10, 10,
        10, 10], [13, 13, 13, 13, 7, 7, 7, 7, 15, 15, 15, 15, 10, 10, 10, 10], [13,
        13, 13, 13, 7, 7, 7, 7, 15, 15, 15, 15, 10, 10, 10, 10], [13, 13, 13, 13,
        7, 7, 7, 7, 15, 15, 15, 15, 10, 10, 10, 10], [3, 3, 3, 3, 11, 11, 11, 11,
        4, 4, 4, 4, 1, 1, 1, 1], [3, 3, 3, 3, 11, 11, 11, 11, 4, 4, 4, 4, 1, 1, 1,
        1], [3, 3, 3, 3, 11, 11, 11, 11, 4, 4, 4, 4, 1, 1, 1, 1], [3, 3, 3, 3, 11,
        11, 11, 11, 4, 4, 4, 4, 1, 1, 1, 1], [14, 14, 14, 14, 9, 9, 9, 9, 0, 0, 0,
        0, 8, 8, 8, 8], [14, 14, 14, 14, 9, 9, 9, 9, 0, 0, 0, 0, 8, 8, 8, 8], [14,
        14, 14, 14, 9, 9, 9, 9, 0, 0, 0, 0, 8, 8, 8, 8], [14, 14, 14, 14, 9, 9, 9,
        9, 0, 0, 0, 0, 8, 8, 8, 8], [12, 12, 12, 12, 5, 5, 5, 5, 2, 2, 2, 2, 6, 6,
        6, 6], [12, 12, 12, 12, 5, 5, 5, 5, 2, 2, 2, 2, 6, 6, 6, 6], [12, 12, 12,
        12, 5, 5, 5, 5, 2, 2, 2, 2, 6, 6, 6, 6], [12, 12, 12, 12, 5, 5, 5, 5, 2, 2,
        2, 2, 6, 6, 6, 6]])
      description:
        description: "inkrimpen([[13, 13, 13, 13,  7,  7,  7,  7, 15, 15, 15, 15,
          10, 10, 10, 10],\n           [13, 13, 13, 13,  7,  7,  7,  7, 15, 15, 15,
          15, 10, 10, 10, 10],\n           [13, 13, 13, 13,  7,  7,  7,  7, 15, 15,
          15, 15, 10, 10, 10, 10],\n           [13, 13, 13, 13,  7,  7,  7,  7, 15,
          15, 15, 15, 10, 10, 10, 10],\n           [ 3,  3,  3,  3, 11, 11, 11, 11,\
          \  4,  4,  4,  4,  1,  1,  1,  1],\n           [ 3,  3,  3,  3, 11, 11,
          11, 11,  4,  4,  4,  4,  1,  1,  1,  1],\n           [ 3,  3,  3,  3, 11,
          11, 11, 11,  4,  4,  4,  4,  1,  1,  1,  1],\n           [ 3,  3,  3,  3,
          11, 11, 11, 11,  4,  4,  4,  4,  1,  1,  1,  1],\n           [14, 14, 14,
          14,  9,  9,  9,  9,  0,  0,  0,  0,  8,  8,  8,  8],\n           [14, 14,
          14, 14,  9,  9,  9,  9,  0,  0,  0,  0,  8,  8,  8,  8],\n           [14,
          14, 14, 14,  9,  9,  9,  9,  0,  0,  0,  0,  8,  8,  8,  8],\n         \
          \  [14, 14, 14, 14,  9,  9,  9,  9,  0,  0,  0,  0,  8,  8,  8,  8],\n \
          \          [12, 12, 12, 12,  5,  5,  5,  5,  2,  2,  2,  2,  6,  6,  6,\
          \  6],\n           [12, 12, 12, 12,  5,  5,  5,  5,  2,  2,  2,  2,  6,\
          \  6,  6,  6],\n           [12, 12, 12, 12,  5,  5,  5,  5,  2,  2,  2,\
          \  2,  6,  6,  6,  6],\n           [12, 12, 12, 12,  5,  5,  5,  5,  2,\
          \  2,  2,  2,  6,  6,  6,  6]])"
        format: python
      return:
      - - 13
        - 7
        - 15
        - 10
      - - 3
        - 11
        - 4
        - 1
      - - 14
        - 9
        - 0
        - 8
      - - 12
        - 5
        - 2
        - 6
  - testcases:
    - expression: inkrimpen([[3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0],
        [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3,
        2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
        0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0],
        [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0], [8, 8, 8, 8, 8, 8,
        1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5], [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1,
        5, 5, 5, 5, 5, 5], [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5],
        [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5], [8, 8, 8, 8, 8, 8,
        1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5], [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1,
        5, 5, 5, 5, 5, 5], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4],
        [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4], [6, 6, 6, 6, 6, 6,
        7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7,
        4, 4, 4, 4, 4, 4], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4],
        [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4]])
      description:
        description: "inkrimpen([[3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0,
          0, 0],\n           [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0],\n\
          \           [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0],\n  \
          \         [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0],\n    \
          \       [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0],\n      \
          \     [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0],\n        \
          \   [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5],\n          \
          \ [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5],\n           [8,
          8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5],\n           [8, 8, 8,
          8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5],\n           [8, 8, 8, 8, 8,
          8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5],\n           [8, 8, 8, 8, 8, 8, 1,
          1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5],\n           [6, 6, 6, 6, 6, 6, 7, 7, 7,
          7, 7, 7, 4, 4, 4, 4, 4, 4],\n           [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7,
          7, 4, 4, 4, 4, 4, 4],\n           [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4,
          4, 4, 4, 4, 4],\n           [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4,
          4, 4, 4],\n           [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4,
          4],\n           [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4]])"
        format: python
      return:
      - - 3
        - 2
        - 0
      - - 8
        - 1
        - 5
      - - 6
        - 7
        - 4
  - testcases:
    - expression: inkrimpen([[20, 20, 20, 25, 25, 25, 26, 26, 26, 16, 16, 16, 23,
        23, 23, 19, 19, 19], [20, 20, 20, 25, 25, 25, 26, 26, 26, 16, 16, 16, 23,
        23, 23, 19, 19, 19], [20, 20, 20, 25, 25, 25, 26, 26, 26, 16, 16, 16, 23,
        23, 23, 19, 19, 19], [22, 22, 22, 8, 8, 8, 29, 29, 29, 9, 9, 9, 31, 31, 31,
        34, 34, 34], [22, 22, 22, 8, 8, 8, 29, 29, 29, 9, 9, 9, 31, 31, 31, 34, 34,
        34], [22, 22, 22, 8, 8, 8, 29, 29, 29, 9, 9, 9, 31, 31, 31, 34, 34, 34], [6,
        6, 6, 10, 10, 10, 13, 13, 13, 3, 3, 3, 17, 17, 17, 27, 27, 27], [6, 6, 6,
        10, 10, 10, 13, 13, 13, 3, 3, 3, 17, 17, 17, 27, 27, 27], [6, 6, 6, 10, 10,
        10, 13, 13, 13, 3, 3, 3, 17, 17, 17, 27, 27, 27], [35, 35, 35, 24, 24, 24,
        15, 15, 15, 12, 12, 12, 21, 21, 21, 11, 11, 11], [35, 35, 35, 24, 24, 24,
        15, 15, 15, 12, 12, 12, 21, 21, 21, 11, 11, 11], [35, 35, 35, 24, 24, 24,
        15, 15, 15, 12, 12, 12, 21, 21, 21, 11, 11, 11], [14, 14, 14, 1, 1, 1, 5,
        5, 5, 30, 30, 30, 4, 4, 4, 7, 7, 7], [14, 14, 14, 1, 1, 1, 5, 5, 5, 30, 30,
        30, 4, 4, 4, 7, 7, 7], [14, 14, 14, 1, 1, 1, 5, 5, 5, 30, 30, 30, 4, 4, 4,
        7, 7, 7], [32, 32, 32, 28, 28, 28, 0, 0, 0, 33, 33, 33, 18, 18, 18, 2, 2,
        2], [32, 32, 32, 28, 28, 28, 0, 0, 0, 33, 33, 33, 18, 18, 18, 2, 2, 2], [32,
        32, 32, 28, 28, 28, 0, 0, 0, 33, 33, 33, 18, 18, 18, 2, 2, 2]])
      description:
        description: "inkrimpen([[20, 20, 20, 25, 25, 25, 26, 26, 26, 16, 16, 16,
          23, 23, 23, 19, 19, 19],\n           [20, 20, 20, 25, 25, 25, 26, 26, 26,
          16, 16, 16, 23, 23, 23, 19, 19, 19],\n           [20, 20, 20, 25, 25, 25,
          26, 26, 26, 16, 16, 16, 23, 23, 23, 19, 19, 19],\n           [22, 22, 22,\
          \  8,  8,  8, 29, 29, 29,  9,  9,  9, 31, 31, 31, 34, 34, 34],\n       \
          \    [22, 22, 22,  8,  8,  8, 29, 29, 29,  9,  9,  9, 31, 31, 31, 34, 34,
          34],\n           [22, 22, 22,  8,  8,  8, 29, 29, 29,  9,  9,  9, 31, 31,
          31, 34, 34, 34],\n           [ 6,  6,  6, 10, 10, 10, 13, 13, 13,  3,  3,\
          \  3, 17, 17, 17, 27, 27, 27],\n           [ 6,  6,  6, 10, 10, 10, 13,
          13, 13,  3,  3,  3, 17, 17, 17, 27, 27, 27],\n           [ 6,  6,  6, 10,
          10, 10, 13, 13, 13,  3,  3,  3, 17, 17, 17, 27, 27, 27],\n           [35,
          35, 35, 24, 24, 24, 15, 15, 15, 12, 12, 12, 21, 21, 21, 11, 11, 11],\n \
          \          [35, 35, 35, 24, 24, 24, 15, 15, 15, 12, 12, 12, 21, 21, 21,
          11, 11, 11],\n           [35, 35, 35, 24, 24, 24, 15, 15, 15, 12, 12, 12,
          21, 21, 21, 11, 11, 11],\n           [14, 14, 14,  1,  1,  1,  5,  5,  5,
          30, 30, 30,  4,  4,  4,  7,  7,  7],\n           [14, 14, 14,  1,  1,  1,\
          \  5,  5,  5, 30, 30, 30,  4,  4,  4,  7,  7,  7],\n           [14, 14,
          14,  1,  1,  1,  5,  5,  5, 30, 30, 30,  4,  4,  4,  7,  7,  7],\n     \
          \      [32, 32, 32, 28, 28, 28,  0,  0,  0, 33, 33, 33, 18, 18, 18,  2,\
          \  2,  2],\n           [32, 32, 32, 28, 28, 28,  0,  0,  0, 33, 33, 33,
          18, 18, 18,  2,  2,  2],\n           [32, 32, 32, 28, 28, 28,  0,  0,  0,
          33, 33, 33, 18, 18, 18,  2,  2,  2]])"
        format: python
      return:
      - - 20
        - 25
        - 26
        - 16
        - 23
        - 19
      - - 22
        - 8
        - 29
        - 9
        - 31
        - 34
      - - 6
        - 10
        - 13
        - 3
        - 17
        - 27
      - - 35
        - 24
        - 15
        - 12
        - 21
        - 11
      - - 14
        - 1
        - 5
        - 30
        - 4
        - 7
      - - 32
        - 28
        - 0
        - 33
        - 18
        - 2
  - testcases:
    - expression: inkrimpen([[15, 15, 15, 17, 17, 17, 33, 33, 33, 28, 28, 28, 2, 2,
        2, 27, 27, 27], [15, 15, 15, 17, 17, 17, 33, 33, 33, 28, 28, 28, 2, 2, 2,
        27, 27, 27], [15, 15, 15, 17, 17, 17, 33, 33, 33, 28, 28, 28, 2, 2, 2, 27,
        27, 27], [19, 19, 19, 9, 9, 9, 14, 14, 14, 32, 32, 32, 6, 6, 6, 4, 4, 4],
        [19, 19, 19, 9, 9, 9, 14, 14, 14, 32, 32, 32, 6, 6, 6, 4, 4, 4], [19, 19,
        19, 9, 9, 9, 14, 14, 14, 32, 32, 32, 6, 6, 6, 4, 4, 4], [10, 10, 10, 22, 22,
        22, 8, 8, 8, 20, 20, 20, 7, 7, 7, 24, 24, 24], [10, 10, 10, 22, 22, 22, 8,
        8, 8, 20, 20, 20, 7, 7, 7, 24, 24, 24], [10, 10, 10, 22, 22, 22, 8, 8, 8,
        20, 20, 20, 7, 7, 7, 24, 24, 24], [12, 12, 12, 31, 31, 31, 25, 25, 25, 13,
        13, 13, 35, 35, 35, 3, 3, 3], [12, 12, 12, 31, 31, 31, 25, 25, 25, 13, 13,
        13, 35, 35, 35, 3, 3, 3], [12, 12, 12, 31, 31, 31, 25, 25, 25, 13, 13, 13,
        35, 35, 35, 3, 3, 3], [34, 34, 34, 21, 21, 21, 11, 11, 11, 5, 5, 5, 16, 16,
        16, 0, 0, 0], [34, 34, 34, 21, 21, 21, 11, 11, 11, 5, 5, 5, 16, 16, 16, 0,
        0, 0], [34, 34, 34, 21, 21, 21, 11, 11, 11, 5, 5, 5, 16, 16, 16, 0, 0, 0],
        [1, 1, 1, 26, 26, 26, 30, 30, 30, 29, 29, 29, 18, 18, 18, 23, 23, 23], [1,
        1, 1, 26, 26, 26, 30, 30, 30, 29, 29, 29, 18, 18, 18, 23, 23, 23], [1, 1,
        1, 26, 26, 26, 30, 30, 30, 29, 29, 29, 18, 18, 18, 23, 23, 23]])
      description:
        description: "inkrimpen([[15, 15, 15, 17, 17, 17, 33, 33, 33, 28, 28, 28,\
          \  2,  2,  2, 27, 27, 27],\n           [15, 15, 15, 17, 17, 17, 33, 33,
          33, 28, 28, 28,  2,  2,  2, 27, 27, 27],\n           [15, 15, 15, 17, 17,
          17, 33, 33, 33, 28, 28, 28,  2,  2,  2, 27, 27, 27],\n           [19, 19,
          19,  9,  9,  9, 14, 14, 14, 32, 32, 32,  6,  6,  6,  4,  4,  4],\n     \
          \      [19, 19, 19,  9,  9,  9, 14, 14, 14, 32, 32, 32,  6,  6,  6,  4,\
          \  4,  4],\n           [19, 19, 19,  9,  9,  9, 14, 14, 14, 32, 32, 32,\
          \  6,  6,  6,  4,  4,  4],\n           [10, 10, 10, 22, 22, 22,  8,  8,\
          \  8, 20, 20, 20,  7,  7,  7, 24, 24, 24],\n           [10, 10, 10, 22,
          22, 22,  8,  8,  8, 20, 20, 20,  7,  7,  7, 24, 24, 24],\n           [10,
          10, 10, 22, 22, 22,  8,  8,  8, 20, 20, 20,  7,  7,  7, 24, 24, 24],\n \
          \          [12, 12, 12, 31, 31, 31, 25, 25, 25, 13, 13, 13, 35, 35, 35,\
          \  3,  3,  3],\n           [12, 12, 12, 31, 31, 31, 25, 25, 25, 13, 13,
          13, 35, 35, 35,  3,  3,  3],\n           [12, 12, 12, 31, 31, 31, 25, 25,
          25, 13, 13, 13, 35, 35, 35,  3,  3,  3],\n           [34, 34, 34, 21, 21,
          21, 11, 11, 11,  5,  5,  5, 16, 16, 16,  0,  0,  0],\n           [34, 34,
          34, 21, 21, 21, 11, 11, 11,  5,  5,  5, 16, 16, 16,  0,  0,  0],\n     \
          \      [34, 34, 34, 21, 21, 21, 11, 11, 11,  5,  5,  5, 16, 16, 16,  0,\
          \  0,  0],\n           [ 1,  1,  1, 26, 26, 26, 30, 30, 30, 29, 29, 29,
          18, 18, 18, 23, 23, 23],\n           [ 1,  1,  1, 26, 26, 26, 30, 30, 30,
          29, 29, 29, 18, 18, 18, 23, 23, 23],\n           [ 1,  1,  1, 26, 26, 26,
          30, 30, 30, 29, 29, 29, 18, 18, 18, 23, 23, 23]])"
        format: python
      return:
      - - 15
        - 17
        - 33
        - 28
        - 2
        - 27
      - - 19
        - 9
        - 14
        - 32
        - 6
        - 4
      - - 10
        - 22
        - 8
        - 20
        - 7
        - 24
      - - 12
        - 31
        - 25
        - 13
        - 35
        - 3
      - - 34
        - 21
        - 11
        - 5
        - 16
        - 0
      - - 1
        - 26
        - 30
        - 29
        - 18
        - 23
  - testcases:
    - expression: inkrimpen([[1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7],
        [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7], [1, 1, 1, 1, 1, 1,
        8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7], [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8,
        7, 7, 7, 7, 7, 7], [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7],
        [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7], [0, 0, 0, 0, 0, 0,
        2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5],
        [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0,
        2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        5, 5, 5, 5, 5, 5], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3],
        [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3], [4, 4, 4, 4, 4, 4,
        6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6,
        3, 3, 3, 3, 3, 3], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3],
        [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3]])
      description:
        description: "inkrimpen([[1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7,
          7, 7],\n           [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7],\n\
          \           [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7],\n  \
          \         [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7],\n    \
          \       [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7],\n      \
          \     [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7],\n        \
          \   [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5],\n          \
          \ [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5],\n           [0,
          0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5],\n           [0, 0, 0,
          0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5],\n           [0, 0, 0, 0, 0,
          0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5],\n           [0, 0, 0, 0, 0, 0, 2,
          2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5],\n           [4, 4, 4, 4, 4, 4, 6, 6, 6,
          6, 6, 6, 3, 3, 3, 3, 3, 3],\n           [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6,
          6, 3, 3, 3, 3, 3, 3],\n           [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3,
          3, 3, 3, 3, 3],\n           [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3,
          3, 3, 3],\n           [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3,
          3],\n           [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3]])"
        format: python
      return:
      - - 1
        - 8
        - 7
      - - 0
        - 2
        - 5
      - - 4
        - 6
        - 3
  - testcases:
    - expression: inkrimpen([[11, 11, 11, 28, 28, 28, 14, 14, 14, 10, 10, 10, 32,
        32, 32, 3, 3, 3], [11, 11, 11, 28, 28, 28, 14, 14, 14, 10, 10, 10, 32, 32,
        32, 3, 3, 3], [11, 11, 11, 28, 28, 28, 14, 14, 14, 10, 10, 10, 32, 32, 32,
        3, 3, 3], [29, 29, 29, 34, 34, 34, 1, 1, 1, 19, 19, 19, 25, 25, 25, 5, 5,
        5], [29, 29, 29, 34, 34, 34, 1, 1, 1, 19, 19, 19, 25, 25, 25, 5, 5, 5], [29,
        29, 29, 34, 34, 34, 1, 1, 1, 19, 19, 19, 25, 25, 25, 5, 5, 5], [31, 31, 31,
        26, 26, 26, 30, 30, 30, 15, 15, 15, 33, 33, 33, 16, 16, 16], [31, 31, 31,
        26, 26, 26, 30, 30, 30, 15, 15, 15, 33, 33, 33, 16, 16, 16], [31, 31, 31,
        26, 26, 26, 30, 30, 30, 15, 15, 15, 33, 33, 33, 16, 16, 16], [27, 27, 27,
        35, 35, 35, 0, 0, 0, 20, 20, 20, 17, 17, 17, 13, 13, 13], [27, 27, 27, 35,
        35, 35, 0, 0, 0, 20, 20, 20, 17, 17, 17, 13, 13, 13], [27, 27, 27, 35, 35,
        35, 0, 0, 0, 20, 20, 20, 17, 17, 17, 13, 13, 13], [12, 12, 12, 18, 18, 18,
        2, 2, 2, 8, 8, 8, 23, 23, 23, 22, 22, 22], [12, 12, 12, 18, 18, 18, 2, 2,
        2, 8, 8, 8, 23, 23, 23, 22, 22, 22], [12, 12, 12, 18, 18, 18, 2, 2, 2, 8,
        8, 8, 23, 23, 23, 22, 22, 22], [9, 9, 9, 24, 24, 24, 7, 7, 7, 21, 21, 21,
        4, 4, 4, 6, 6, 6], [9, 9, 9, 24, 24, 24, 7, 7, 7, 21, 21, 21, 4, 4, 4, 6,
        6, 6], [9, 9, 9, 24, 24, 24, 7, 7, 7, 21, 21, 21, 4, 4, 4, 6, 6, 6]])
      description:
        description: "inkrimpen([[11, 11, 11, 28, 28, 28, 14, 14, 14, 10, 10, 10,
          32, 32, 32,  3,  3,  3],\n           [11, 11, 11, 28, 28, 28, 14, 14, 14,
          10, 10, 10, 32, 32, 32,  3,  3,  3],\n           [11, 11, 11, 28, 28, 28,
          14, 14, 14, 10, 10, 10, 32, 32, 32,  3,  3,  3],\n           [29, 29, 29,
          34, 34, 34,  1,  1,  1, 19, 19, 19, 25, 25, 25,  5,  5,  5],\n         \
          \  [29, 29, 29, 34, 34, 34,  1,  1,  1, 19, 19, 19, 25, 25, 25,  5,  5,\
          \  5],\n           [29, 29, 29, 34, 34, 34,  1,  1,  1, 19, 19, 19, 25,
          25, 25,  5,  5,  5],\n           [31, 31, 31, 26, 26, 26, 30, 30, 30, 15,
          15, 15, 33, 33, 33, 16, 16, 16],\n           [31, 31, 31, 26, 26, 26, 30,
          30, 30, 15, 15, 15, 33, 33, 33, 16, 16, 16],\n           [31, 31, 31, 26,
          26, 26, 30, 30, 30, 15, 15, 15, 33, 33, 33, 16, 16, 16],\n           [27,
          27, 27, 35, 35, 35,  0,  0,  0, 20, 20, 20, 17, 17, 17, 13, 13, 13],\n \
          \          [27, 27, 27, 35, 35, 35,  0,  0,  0, 20, 20, 20, 17, 17, 17,
          13, 13, 13],\n           [27, 27, 27, 35, 35, 35,  0,  0,  0, 20, 20, 20,
          17, 17, 17, 13, 13, 13],\n           [12, 12, 12, 18, 18, 18,  2,  2,  2,\
          \  8,  8,  8, 23, 23, 23, 22, 22, 22],\n           [12, 12, 12, 18, 18,
          18,  2,  2,  2,  8,  8,  8, 23, 23, 23, 22, 22, 22],\n           [12, 12,
          12, 18, 18, 18,  2,  2,  2,  8,  8,  8, 23, 23, 23, 22, 22, 22],\n     \
          \      [ 9,  9,  9, 24, 24, 24,  7,  7,  7, 21, 21, 21,  4,  4,  4,  6,\
          \  6,  6],\n           [ 9,  9,  9, 24, 24, 24,  7,  7,  7, 21, 21, 21,\
          \  4,  4,  4,  6,  6,  6],\n           [ 9,  9,  9, 24, 24, 24,  7,  7,\
          \  7, 21, 21, 21,  4,  4,  4,  6,  6,  6]])"
        format: python
      return:
      - - 11
        - 28
        - 14
        - 10
        - 32
        - 3
      - - 29
        - 34
        - 1
        - 19
        - 25
        - 5
      - - 31
        - 26
        - 30
        - 15
        - 33
        - 16
      - - 27
        - 35
        - 0
        - 20
        - 17
        - 13
      - - 12
        - 18
        - 2
        - 8
        - 23
        - 22
      - - 9
        - 24
        - 7
        - 21
        - 4
        - 6
  - testcases:
    - expression: inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  \
          \         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    \
          \       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      \
          \     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        \
          \   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n          \
          \ [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return:
      - - 0
  - testcases:
    - expression: inkrimpen([[7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 12, 12,
        12, 12, 12], [7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 12, 12, 12, 12,
        12], [7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12], [7,
        7, 7, 7, 7, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12], [7, 7, 7, 7,
        7, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12], [4, 4, 4, 4, 4, 9, 9,
        9, 9, 9, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [4, 4, 4, 4, 4, 9, 9, 9, 9, 9, 2,
        2, 2, 2, 2, 0, 0, 0, 0, 0], [4, 4, 4, 4, 4, 9, 9, 9, 9, 9, 2, 2, 2, 2, 2,
        0, 0, 0, 0, 0], [4, 4, 4, 4, 4, 9, 9, 9, 9, 9, 2, 2, 2, 2, 2, 0, 0, 0, 0,
        0], [4, 4, 4, 4, 4, 9, 9, 9, 9, 9, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [1, 1, 1,
        1, 1, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14], [1, 1, 1, 1,
        1, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14], [1, 1, 1, 1, 1,
        3, 3, 3, 3, 3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14], [1, 1, 1, 1, 1, 3,
        3, 3, 3, 3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14], [1, 1, 1, 1, 1, 3, 3,
        3, 3, 3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14], [11, 11, 11, 11, 11, 6,
        6, 6, 6, 6, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10], [11, 11, 11, 11, 11,
        6, 6, 6, 6, 6, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10], [11, 11, 11, 11, 11,
        6, 6, 6, 6, 6, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10], [11, 11, 11, 11, 11,
        6, 6, 6, 6, 6, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10], [11, 11, 11, 11, 11,
        6, 6, 6, 6, 6, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10]])
      description:
        description: "inkrimpen([[ 7,  7,  7,  7,  7,  5,  5,  5,  5,  5,  8,  8,\
          \  8,  8,  8, 12, 12, 12, 12, 12],\n           [ 7,  7,  7,  7,  7,  5,\
          \  5,  5,  5,  5,  8,  8,  8,  8,  8, 12, 12, 12, 12, 12],\n           [
          7,  7,  7,  7,  7,  5,  5,  5,  5,  5,  8,  8,  8,  8,  8, 12, 12, 12, 12,
          12],\n           [ 7,  7,  7,  7,  7,  5,  5,  5,  5,  5,  8,  8,  8,  8,\
          \  8, 12, 12, 12, 12, 12],\n           [ 7,  7,  7,  7,  7,  5,  5,  5,\
          \  5,  5,  8,  8,  8,  8,  8, 12, 12, 12, 12, 12],\n           [ 4,  4,\
          \  4,  4,  4,  9,  9,  9,  9,  9,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0],\n\
          \           [ 4,  4,  4,  4,  4,  9,  9,  9,  9,  9,  2,  2,  2,  2,  2,\
          \  0,  0,  0,  0,  0],\n           [ 4,  4,  4,  4,  4,  9,  9,  9,  9,\
          \  9,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0],\n           [ 4,  4,  4,\
          \  4,  4,  9,  9,  9,  9,  9,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0],\n\
          \           [ 4,  4,  4,  4,  4,  9,  9,  9,  9,  9,  2,  2,  2,  2,  2,\
          \  0,  0,  0,  0,  0],\n           [ 1,  1,  1,  1,  1,  3,  3,  3,  3,\
          \  3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14],\n           [ 1,  1,  1,\
          \  1,  1,  3,  3,  3,  3,  3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14],\n\
          \           [ 1,  1,  1,  1,  1,  3,  3,  3,  3,  3, 15, 15, 15, 15, 15,
          14, 14, 14, 14, 14],\n           [ 1,  1,  1,  1,  1,  3,  3,  3,  3,  3,
          15, 15, 15, 15, 15, 14, 14, 14, 14, 14],\n           [ 1,  1,  1,  1,  1,\
          \  3,  3,  3,  3,  3, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14],\n       \
          \    [11, 11, 11, 11, 11,  6,  6,  6,  6,  6, 13, 13, 13, 13, 13, 10, 10,
          10, 10, 10],\n           [11, 11, 11, 11, 11,  6,  6,  6,  6,  6, 13, 13,
          13, 13, 13, 10, 10, 10, 10, 10],\n           [11, 11, 11, 11, 11,  6,  6,\
          \  6,  6,  6, 13, 13, 13, 13, 13, 10, 10, 10, 10, 10],\n           [11,
          11, 11, 11, 11,  6,  6,  6,  6,  6, 13, 13, 13, 13, 13, 10, 10, 10, 10,
          10],\n           [11, 11, 11, 11, 11,  6,  6,  6,  6,  6, 13, 13, 13, 13,
          13, 10, 10, 10, 10, 10]])"
        format: python
      return:
      - - 7
        - 5
        - 8
        - 12
      - - 4
        - 9
        - 2
        - 0
      - - 1
        - 3
        - 15
        - 14
      - - 11
        - 6
        - 13
        - 10
