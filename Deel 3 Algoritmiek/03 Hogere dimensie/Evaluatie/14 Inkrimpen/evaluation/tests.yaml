- tab: Feedback bepaal_factor
  contexts:
  - testcases:
    - expression: bepaal_factor([[0, 1], [3, 2]])
      description:
        description: "bepaal_factor([[0, 1],\n               [3, 2]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[8, 5, 4], [7, 0, 6], [2, 1, 3]])
      description:
        description: "bepaal_factor([[8, 5, 4],\n               [7, 0, 6],\n     \
          \          [2, 1, 3]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[8, 15, 13, 10], [4, 6, 2, 0], [9, 1, 12, 11], [3,
        5, 14, 7]])
      description:
        description: "bepaal_factor([[ 8, 15, 13, 10],\n               [ 4,  6,  2,\
          \  0],\n               [ 9,  1, 12, 11],\n               [ 3,  5, 14,  7]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[3, 3, 0, 0], [3, 3, 0, 0], [2, 2, 1, 1], [2, 2,
        1, 1]])
      description:
        description: "bepaal_factor([[3, 3, 0, 0],\n               [3, 3, 0, 0],\n\
          \               [2, 2, 1, 1],\n               [2, 2, 1, 1]])"
        format: python
      return: 2
  - testcases:
    - expression: bepaal_factor([[16, 18, 24, 2, 10], [3, 4, 11, 0, 15], [22, 12,
        5, 17, 19], [7, 8, 14, 20, 1], [23, 13, 6, 9, 21]])
      description:
        description: "bepaal_factor([[16, 18, 24,  2, 10],\n               [ 3,  4,
          11,  0, 15],\n               [22, 12,  5, 17, 19],\n               [ 7,\
          \  8, 14, 20,  1],\n               [23, 13,  6,  9, 21]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[24, 23, 6, 9, 3], [14, 11, 22, 13, 7], [10, 15,
        16, 8, 19], [20, 5, 1, 12, 2], [4, 0, 21, 17, 18]])
      description:
        description: "bepaal_factor([[24, 23,  6,  9,  3],\n               [14, 11,
          22, 13,  7],\n               [10, 15, 16,  8, 19],\n               [20,\
          \  5,  1, 12,  2],\n               [ 4,  0, 21, 17, 18]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[11, 8, 2, 15, 9], [18, 19, 10, 1, 3], [0, 24, 23,
        13, 5], [14, 7, 6, 21, 17], [16, 4, 12, 20, 22]])
      description:
        description: "bepaal_factor([[11,  8,  2, 15,  9],\n               [18, 19,
          10,  1,  3],\n               [ 0, 24, 23, 13,  5],\n               [14,\
          \  7,  6, 21, 17],\n               [16,  4, 12, 20, 22]])"
        format: python
      return: 1
  - testcases:
    - expression: bepaal_factor([[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0,
        0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0,
        0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "bepaal_factor([[0, 0, 0, 0, 0, 0, 0],\n               [0, 0,
          0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0],\n               [0,
          0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0],\n            \
          \   [0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return: 7
  - testcases:
    - expression: bepaal_factor([[3, 3, 8, 8, 5, 5, 1, 1], [3, 3, 8, 8, 5, 5, 1, 1],
        [10, 10, 15, 15, 7, 7, 12, 12], [10, 10, 15, 15, 7, 7, 12, 12], [13, 13, 14,
        14, 2, 2, 4, 4], [13, 13, 14, 14, 2, 2, 4, 4], [11, 11, 0, 0, 9, 9, 6, 6],
        [11, 11, 0, 0, 9, 9, 6, 6]])
      description:
        description: "bepaal_factor([[ 3,  3,  8,  8,  5,  5,  1,  1],\n         \
          \      [ 3,  3,  8,  8,  5,  5,  1,  1],\n               [10, 10, 15, 15,\
          \  7,  7, 12, 12],\n               [10, 10, 15, 15,  7,  7, 12, 12],\n \
          \              [13, 13, 14, 14,  2,  2,  4,  4],\n               [13, 13,
          14, 14,  2,  2,  4,  4],\n               [11, 11,  0,  0,  9,  9,  6,  6],\n\
          \               [11, 11,  0,  0,  9,  9,  6,  6]])"
        format: python
      return: 2
  - testcases:
    - expression: bepaal_factor([[10, 10, 2, 2, 7, 7, 1, 1], [10, 10, 2, 2, 7, 7,
        1, 1], [13, 13, 3, 3, 14, 14, 15, 15], [13, 13, 3, 3, 14, 14, 15, 15], [9,
        9, 0, 0, 12, 12, 5, 5], [9, 9, 0, 0, 12, 12, 5, 5], [8, 8, 11, 11, 4, 4, 6,
        6], [8, 8, 11, 11, 4, 4, 6, 6]])
      description:
        description: "bepaal_factor([[10, 10,  2,  2,  7,  7,  1,  1],\n         \
          \      [10, 10,  2,  2,  7,  7,  1,  1],\n               [13, 13,  3,  3,
          14, 14, 15, 15],\n               [13, 13,  3,  3, 14, 14, 15, 15],\n   \
          \            [ 9,  9,  0,  0, 12, 12,  5,  5],\n               [ 9,  9,\
          \  0,  0, 12, 12,  5,  5],\n               [ 8,  8, 11, 11,  4,  4,  6,\
          \  6],\n               [ 8,  8, 11, 11,  4,  4,  6,  6]])"
        format: python
      return: 2
  - testcases:
    - expression: bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0,
        0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0,
        0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0, 0],\n              \
          \ [0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0,
          0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0,
          0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0],\n   \
          \            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0,
          0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return: 9
  - testcases:
    - expression: bepaal_factor([[6, 6, 6, 8, 8, 8, 2, 2, 2], [6, 6, 6, 8, 8, 8, 2,
        2, 2], [6, 6, 6, 8, 8, 8, 2, 2, 2], [7, 7, 7, 4, 4, 4, 5, 5, 5], [7, 7, 7,
        4, 4, 4, 5, 5, 5], [7, 7, 7, 4, 4, 4, 5, 5, 5], [3, 3, 3, 1, 1, 1, 0, 0, 0],
        [3, 3, 3, 1, 1, 1, 0, 0, 0], [3, 3, 3, 1, 1, 1, 0, 0, 0]])
      description:
        description: "bepaal_factor([[6, 6, 6, 8, 8, 8, 2, 2, 2],\n              \
          \ [6, 6, 6, 8, 8, 8, 2, 2, 2],\n               [6, 6, 6, 8, 8, 8, 2, 2,
          2],\n               [7, 7, 7, 4, 4, 4, 5, 5, 5],\n               [7, 7,
          7, 4, 4, 4, 5, 5, 5],\n               [7, 7, 7, 4, 4, 4, 5, 5, 5],\n   \
          \            [3, 3, 3, 1, 1, 1, 0, 0, 0],\n               [3, 3, 3, 1, 1,
          1, 0, 0, 0],\n               [3, 3, 3, 1, 1, 1, 0, 0, 0]])"
        format: python
      return: 3
  - testcases:
    - expression: bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "bepaal_factor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        \
          \       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            \
          \   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0],\n               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return: 11
  - testcases:
    - expression: bepaal_factor([[3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],
        [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],
        [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3,
        1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],
        [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],
        [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],
        [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "bepaal_factor([[3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
          1],\n               [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \               [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n    \
          \           [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n        \
          \       [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n            \
          \   [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n               [3,
          3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n               [3, 3, 3,
          3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n               [2, 2, 2, 2, 2,
          2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n               [2, 2, 2, 2, 2, 2, 2,
          2, 0, 0, 0, 0, 0, 0, 0, 0],\n               [2, 2, 2, 2, 2, 2, 2, 2, 0,
          0, 0, 0, 0, 0, 0, 0],\n               [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0,
          0, 0, 0, 0, 0],\n               [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0,
          0, 0, 0],\n               [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0,
          0],\n               [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \               [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return: 8
  - testcases:
    - expression: bepaal_factor([[3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3,
        0, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3,
        0, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2,
        1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1],
        [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2,
        1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1],
        [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2,
        1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1]])
      description:
        description: "bepaal_factor([[3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0,
          0],\n               [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \               [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n    \
          \           [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n        \
          \       [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n            \
          \   [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n               [3,
          3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n               [3, 3, 3,
          3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n               [2, 2, 2, 2, 2,
          2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1],\n               [2, 2, 2, 2, 2, 2, 2,
          2, 1, 1, 1, 1, 1, 1, 1, 1],\n               [2, 2, 2, 2, 2, 2, 2, 2, 1,
          1, 1, 1, 1, 1, 1, 1],\n               [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
          1, 1, 1, 1, 1],\n               [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
          1, 1, 1],\n               [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
          1],\n               [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \               [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1]])"
        format: python
      return: 8
  - testcases:
    - expression: bepaal_factor([[3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0,
        0, 0], [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3,
        3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
        2, 2, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0,
        0, 0], [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0], [8, 8, 8, 8,
        8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5], [8, 8, 8, 8, 8, 8, 1, 1, 1, 1,
        1, 1, 5, 5, 5, 5, 5, 5], [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5,
        5, 5], [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5], [8, 8, 8, 8,
        8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5], [8, 8, 8, 8, 8, 8, 1, 1, 1, 1,
        1, 1, 5, 5, 5, 5, 5, 5], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4,
        4, 4], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4], [6, 6, 6, 6,
        6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7,
        7, 7, 4, 4, 4, 4, 4, 4], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4,
        4, 4], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4]])
      description:
        description: "bepaal_factor([[3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0,
          0, 0, 0],\n               [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0,
          0, 0, 0],\n               [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0,
          0, 0, 0],\n               [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0,
          0, 0, 0],\n               [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0,
          0, 0, 0],\n               [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0,
          0, 0, 0],\n               [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5,
          5, 5, 5],\n               [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5,
          5, 5, 5],\n               [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5,
          5, 5, 5],\n               [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5,
          5, 5, 5],\n               [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5,
          5, 5, 5],\n               [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5,
          5, 5, 5],\n               [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4,
          4, 4, 4],\n               [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4,
          4, 4, 4],\n               [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4,
          4, 4, 4],\n               [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4,
          4, 4, 4],\n               [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4,
          4, 4, 4],\n               [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4,
          4, 4, 4]])"
        format: python
      return: 6
  - testcases:
    - expression: bepaal_factor([[7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1,
        1, 1], [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1], [7, 7, 7, 7,
        7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1], [7, 7, 7, 7, 7, 7, 4, 4, 4, 4,
        4, 4, 1, 1, 1, 1, 1, 1], [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1,
        1, 1], [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1], [6, 6, 6, 6,
        6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8], [6, 6, 6, 6, 6, 6, 2, 2, 2, 2,
        2, 2, 8, 8, 8, 8, 8, 8], [6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8,
        8, 8], [6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8], [6, 6, 6, 6,
        6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8], [6, 6, 6, 6, 6, 6, 2, 2, 2, 2,
        2, 2, 8, 8, 8, 8, 8, 8], [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5,
        5, 5], [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5], [3, 3, 3, 3,
        3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5], [3, 3, 3, 3, 3, 3, 0, 0, 0, 0,
        0, 0, 5, 5, 5, 5, 5, 5], [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5,
        5, 5], [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5]])
      description:
        description: "bepaal_factor([[7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1,
          1, 1, 1],\n               [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1,
          1, 1, 1],\n               [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1,
          1, 1, 1],\n               [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1,
          1, 1, 1],\n               [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1,
          1, 1, 1],\n               [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1,
          1, 1, 1],\n               [6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8,
          8, 8, 8],\n               [6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8,
          8, 8, 8],\n               [6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8,
          8, 8, 8],\n               [6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8,
          8, 8, 8],\n               [6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8,
          8, 8, 8],\n               [6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8,
          8, 8, 8],\n               [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5,
          5, 5, 5],\n               [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5,
          5, 5, 5],\n               [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5,
          5, 5, 5],\n               [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5,
          5, 5, 5],\n               [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5,
          5, 5, 5],\n               [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5,
          5, 5, 5]])"
        format: python
      return: 6
  - testcases:
    - expression: bepaal_factor([[1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7,
        7, 7], [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7], [1, 1, 1, 1,
        1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7], [1, 1, 1, 1, 1, 1, 8, 8, 8, 8,
        8, 8, 7, 7, 7, 7, 7, 7], [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7,
        7, 7], [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7], [0, 0, 0, 0,
        0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5,
        5, 5], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0,
        0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
        2, 2, 5, 5, 5, 5, 5, 5], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3,
        3, 3], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3], [4, 4, 4, 4,
        4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6,
        6, 6, 3, 3, 3, 3, 3, 3], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3,
        3, 3], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3]])
      description:
        description: "bepaal_factor([[1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7,
          7, 7, 7],\n               [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7,
          7, 7, 7],\n               [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7,
          7, 7, 7],\n               [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7,
          7, 7, 7],\n               [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7,
          7, 7, 7],\n               [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7,
          7, 7, 7],\n               [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5,
          5, 5, 5],\n               [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5,
          5, 5, 5],\n               [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5,
          5, 5, 5],\n               [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5,
          5, 5, 5],\n               [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5,
          5, 5, 5],\n               [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5,
          5, 5, 5],\n               [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3,
          3, 3, 3],\n               [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3,
          3, 3, 3],\n               [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3,
          3, 3, 3],\n               [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3,
          3, 3, 3],\n               [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3,
          3, 3, 3],\n               [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3,
          3, 3, 3]])"
        format: python
      return: 6
  - testcases:
    - expression: bepaal_factor([[14, 14, 14, 14, 14, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4,
        7, 7, 7, 7, 7], [14, 14, 14, 14, 14, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 7, 7, 7,
        7, 7], [14, 14, 14, 14, 14, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7],
        [14, 14, 14, 14, 14, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7], [14, 14,
        14, 14, 14, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7], [10, 10, 10, 10,
        10, 13, 13, 13, 13, 13, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15], [10, 10, 10, 10,
        10, 13, 13, 13, 13, 13, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15], [10, 10, 10, 10,
        10, 13, 13, 13, 13, 13, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15], [10, 10, 10, 10,
        10, 13, 13, 13, 13, 13, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15], [10, 10, 10, 10,
        10, 13, 13, 13, 13, 13, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15], [9, 9, 9, 9, 9,
        5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 11, 11, 11, 11, 11], [9, 9, 9, 9, 9, 5, 5, 5,
        5, 5, 1, 1, 1, 1, 1, 11, 11, 11, 11, 11], [9, 9, 9, 9, 9, 5, 5, 5, 5, 5, 1,
        1, 1, 1, 1, 11, 11, 11, 11, 11], [9, 9, 9, 9, 9, 5, 5, 5, 5, 5, 1, 1, 1, 1,
        1, 11, 11, 11, 11, 11], [9, 9, 9, 9, 9, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 11,
        11, 11, 11, 11], [2, 2, 2, 2, 2, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 0, 0,
        0, 0, 0], [2, 2, 2, 2, 2, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0],
        [2, 2, 2, 2, 2, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0], [2, 2,
        2, 2, 2, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2,
        12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0]])
      description:
        description: "bepaal_factor([[14, 14, 14, 14, 14,  6,  6,  6,  6,  6,  4,\
          \  4,  4,  4,  4,  7,  7,  7,  7,  7],\n               [14, 14, 14, 14,
          14,  6,  6,  6,  6,  6,  4,  4,  4,  4,  4,  7,  7,  7,  7,  7],\n     \
          \          [14, 14, 14, 14, 14,  6,  6,  6,  6,  6,  4,  4,  4,  4,  4,\
          \  7,  7,  7,  7,  7],\n               [14, 14, 14, 14, 14,  6,  6,  6,\
          \  6,  6,  4,  4,  4,  4,  4,  7,  7,  7,  7,  7],\n               [14,
          14, 14, 14, 14,  6,  6,  6,  6,  6,  4,  4,  4,  4,  4,  7,  7,  7,  7,\
          \  7],\n               [10, 10, 10, 10, 10, 13, 13, 13, 13, 13,  3,  3,\
          \  3,  3,  3, 15, 15, 15, 15, 15],\n               [10, 10, 10, 10, 10,
          13, 13, 13, 13, 13,  3,  3,  3,  3,  3, 15, 15, 15, 15, 15],\n         \
          \      [10, 10, 10, 10, 10, 13, 13, 13, 13, 13,  3,  3,  3,  3,  3, 15,
          15, 15, 15, 15],\n               [10, 10, 10, 10, 10, 13, 13, 13, 13, 13,\
          \  3,  3,  3,  3,  3, 15, 15, 15, 15, 15],\n               [10, 10, 10,
          10, 10, 13, 13, 13, 13, 13,  3,  3,  3,  3,  3, 15, 15, 15, 15, 15],\n \
          \              [ 9,  9,  9,  9,  9,  5,  5,  5,  5,  5,  1,  1,  1,  1,\
          \  1, 11, 11, 11, 11, 11],\n               [ 9,  9,  9,  9,  9,  5,  5,\
          \  5,  5,  5,  1,  1,  1,  1,  1, 11, 11, 11, 11, 11],\n               [
          9,  9,  9,  9,  9,  5,  5,  5,  5,  5,  1,  1,  1,  1,  1, 11, 11, 11, 11,
          11],\n               [ 9,  9,  9,  9,  9,  5,  5,  5,  5,  5,  1,  1,  1,\
          \  1,  1, 11, 11, 11, 11, 11],\n               [ 9,  9,  9,  9,  9,  5,\
          \  5,  5,  5,  5,  1,  1,  1,  1,  1, 11, 11, 11, 11, 11],\n           \
          \    [ 2,  2,  2,  2,  2, 12, 12, 12, 12, 12,  8,  8,  8,  8,  8,  0,  0,\
          \  0,  0,  0],\n               [ 2,  2,  2,  2,  2, 12, 12, 12, 12, 12,\
          \  8,  8,  8,  8,  8,  0,  0,  0,  0,  0],\n               [ 2,  2,  2,\
          \  2,  2, 12, 12, 12, 12, 12,  8,  8,  8,  8,  8,  0,  0,  0,  0,  0],\n\
          \               [ 2,  2,  2,  2,  2, 12, 12, 12, 12, 12,  8,  8,  8,  8,\
          \  8,  0,  0,  0,  0,  0],\n               [ 2,  2,  2,  2,  2, 12, 12,
          12, 12, 12,  8,  8,  8,  8,  8,  0,  0,  0,  0,  0]])"
        format: python
      return: 5
  - testcases:
    - expression: bepaal_factor([[2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 13, 13, 13, 13, 13,
        6, 6, 6, 6, 6], [2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 13, 13, 13, 13, 13, 6, 6, 6,
        6, 6], [2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 13, 13, 13, 13, 13, 6, 6, 6, 6, 6],
        [2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 13, 13, 13, 13, 13, 6, 6, 6, 6, 6], [2, 2,
        2, 2, 2, 3, 3, 3, 3, 3, 13, 13, 13, 13, 13, 6, 6, 6, 6, 6], [14, 14, 14, 14,
        14, 11, 11, 11, 11, 11, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10], [14, 14, 14, 14,
        14, 11, 11, 11, 11, 11, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10], [14, 14, 14, 14,
        14, 11, 11, 11, 11, 11, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10], [14, 14, 14, 14,
        14, 11, 11, 11, 11, 11, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10], [14, 14, 14, 14,
        14, 11, 11, 11, 11, 11, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10], [5, 5, 5, 5, 5,
        4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 1, 1, 1, 1, 1], [5, 5, 5, 5, 5, 4, 4, 4, 4,
        4, 7, 7, 7, 7, 7, 1, 1, 1, 1, 1], [5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 7, 7, 7,
        7, 7, 1, 1, 1, 1, 1], [5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 1, 1,
        1, 1, 1], [5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 1, 1, 1, 1, 1], [0,
        0, 0, 0, 0, 9, 9, 9, 9, 9, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15], [0, 0,
        0, 0, 0, 9, 9, 9, 9, 9, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15], [0, 0, 0,
        0, 0, 9, 9, 9, 9, 9, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15], [0, 0, 0, 0,
        0, 9, 9, 9, 9, 9, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15], [0, 0, 0, 0, 0,
        9, 9, 9, 9, 9, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15]])
      description:
        description: "bepaal_factor([[ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3, 13,
          13, 13, 13, 13,  6,  6,  6,  6,  6],\n               [ 2,  2,  2,  2,  2,\
          \  3,  3,  3,  3,  3, 13, 13, 13, 13, 13,  6,  6,  6,  6,  6],\n       \
          \        [ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3, 13, 13, 13, 13, 13,  6,\
          \  6,  6,  6,  6],\n               [ 2,  2,  2,  2,  2,  3,  3,  3,  3,\
          \  3, 13, 13, 13, 13, 13,  6,  6,  6,  6,  6],\n               [ 2,  2,\
          \  2,  2,  2,  3,  3,  3,  3,  3, 13, 13, 13, 13, 13,  6,  6,  6,  6,  6],\n\
          \               [14, 14, 14, 14, 14, 11, 11, 11, 11, 11,  8,  8,  8,  8,\
          \  8, 10, 10, 10, 10, 10],\n               [14, 14, 14, 14, 14, 11, 11,
          11, 11, 11,  8,  8,  8,  8,  8, 10, 10, 10, 10, 10],\n               [14,
          14, 14, 14, 14, 11, 11, 11, 11, 11,  8,  8,  8,  8,  8, 10, 10, 10, 10,
          10],\n               [14, 14, 14, 14, 14, 11, 11, 11, 11, 11,  8,  8,  8,\
          \  8,  8, 10, 10, 10, 10, 10],\n               [14, 14, 14, 14, 14, 11,
          11, 11, 11, 11,  8,  8,  8,  8,  8, 10, 10, 10, 10, 10],\n             \
          \  [ 5,  5,  5,  5,  5,  4,  4,  4,  4,  4,  7,  7,  7,  7,  7,  1,  1,\
          \  1,  1,  1],\n               [ 5,  5,  5,  5,  5,  4,  4,  4,  4,  4,\
          \  7,  7,  7,  7,  7,  1,  1,  1,  1,  1],\n               [ 5,  5,  5,\
          \  5,  5,  4,  4,  4,  4,  4,  7,  7,  7,  7,  7,  1,  1,  1,  1,  1],\n\
          \               [ 5,  5,  5,  5,  5,  4,  4,  4,  4,  4,  7,  7,  7,  7,\
          \  7,  1,  1,  1,  1,  1],\n               [ 5,  5,  5,  5,  5,  4,  4,\
          \  4,  4,  4,  7,  7,  7,  7,  7,  1,  1,  1,  1,  1],\n               [
          0,  0,  0,  0,  0,  9,  9,  9,  9,  9, 12, 12, 12, 12, 12, 15, 15, 15, 15,
          15],\n               [ 0,  0,  0,  0,  0,  9,  9,  9,  9,  9, 12, 12, 12,
          12, 12, 15, 15, 15, 15, 15],\n               [ 0,  0,  0,  0,  0,  9,  9,\
          \  9,  9,  9, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15],\n               [
          0,  0,  0,  0,  0,  9,  9,  9,  9,  9, 12, 12, 12, 12, 12, 15, 15, 15, 15,
          15],\n               [ 0,  0,  0,  0,  0,  9,  9,  9,  9,  9, 12, 12, 12,
          12, 12, 15, 15, 15, 15, 15]])"
        format: python
      return: 5
- tab: Feedback inkrimpen
  contexts:
  - testcases:
    - expression: inkrimpen([[0, 1], [3, 2]])
      description:
        description: "inkrimpen([[0, 1],\n           [3, 2]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 0
            - 1
          - - 3
            - 2
  - testcases:
    - expression: inkrimpen([[8, 5, 4], [7, 0, 6], [2, 1, 3]])
      description:
        description: "inkrimpen([[8, 5, 4],\n           [7, 0, 6],\n           [2,
          1, 3]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 8
            - 5
            - 4
          - - 7
            - 0
            - 6
          - - 2
            - 1
            - 3
  - testcases:
    - expression: inkrimpen([[8, 15, 13, 10], [4, 6, 2, 0], [9, 1, 12, 11], [3, 5,
        14, 7]])
      description:
        description: "inkrimpen([[ 8, 15, 13, 10],\n           [ 4,  6,  2,  0],\n\
          \           [ 9,  1, 12, 11],\n           [ 3,  5, 14,  7]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 8
            - 15
            - 13
            - 10
          - - 4
            - 6
            - 2
            - 0
          - - 9
            - 1
            - 12
            - 11
          - - 3
            - 5
            - 14
            - 7
  - testcases:
    - expression: inkrimpen([[3, 3, 0, 0], [3, 3, 0, 0], [2, 2, 1, 1], [2, 2, 1, 1]])
      description:
        description: "inkrimpen([[3, 3, 0, 0],\n           [3, 3, 0, 0],\n       \
          \    [2, 2, 1, 1],\n           [2, 2, 1, 1]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 3
            - 0
          - - 2
            - 1
  - testcases:
    - expression: inkrimpen([[16, 18, 24, 2, 10], [3, 4, 11, 0, 15], [22, 12, 5, 17,
        19], [7, 8, 14, 20, 1], [23, 13, 6, 9, 21]])
      description:
        description: "inkrimpen([[16, 18, 24,  2, 10],\n           [ 3,  4, 11,  0,
          15],\n           [22, 12,  5, 17, 19],\n           [ 7,  8, 14, 20,  1],\n\
          \           [23, 13,  6,  9, 21]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 16
            - 18
            - 24
            - 2
            - 10
          - - 3
            - 4
            - 11
            - 0
            - 15
          - - 22
            - 12
            - 5
            - 17
            - 19
          - - 7
            - 8
            - 14
            - 20
            - 1
          - - 23
            - 13
            - 6
            - 9
            - 21
  - testcases:
    - expression: inkrimpen([[24, 23, 6, 9, 3], [14, 11, 22, 13, 7], [10, 15, 16,
        8, 19], [20, 5, 1, 12, 2], [4, 0, 21, 17, 18]])
      description:
        description: "inkrimpen([[24, 23,  6,  9,  3],\n           [14, 11, 22, 13,\
          \  7],\n           [10, 15, 16,  8, 19],\n           [20,  5,  1, 12,  2],\n\
          \           [ 4,  0, 21, 17, 18]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 24
            - 23
            - 6
            - 9
            - 3
          - - 14
            - 11
            - 22
            - 13
            - 7
          - - 10
            - 15
            - 16
            - 8
            - 19
          - - 20
            - 5
            - 1
            - 12
            - 2
          - - 4
            - 0
            - 21
            - 17
            - 18
  - testcases:
    - expression: inkrimpen([[11, 8, 2, 15, 9], [18, 19, 10, 1, 3], [0, 24, 23, 13,
        5], [14, 7, 6, 21, 17], [16, 4, 12, 20, 22]])
      description:
        description: "inkrimpen([[11,  8,  2, 15,  9],\n           [18, 19, 10,  1,\
          \  3],\n           [ 0, 24, 23, 13,  5],\n           [14,  7,  6, 21, 17],\n\
          \           [16,  4, 12, 20, 22]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 11
            - 8
            - 2
            - 15
            - 9
          - - 18
            - 19
            - 10
            - 1
            - 3
          - - 0
            - 24
            - 23
            - 13
            - 5
          - - 14
            - 7
            - 6
            - 21
            - 17
          - - 16
            - 4
            - 12
            - 20
            - 22
  - testcases:
    - expression: inkrimpen([[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0,
        0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0], [0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "inkrimpen([[0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0,
          0, 0],\n           [0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0,
          0],\n           [0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0],\n\
          \           [0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return:
      - - 0
  - testcases:
    - expression: inkrimpen([[3, 3, 8, 8, 5, 5, 1, 1], [3, 3, 8, 8, 5, 5, 1, 1], [10,
        10, 15, 15, 7, 7, 12, 12], [10, 10, 15, 15, 7, 7, 12, 12], [13, 13, 14, 14,
        2, 2, 4, 4], [13, 13, 14, 14, 2, 2, 4, 4], [11, 11, 0, 0, 9, 9, 6, 6], [11,
        11, 0, 0, 9, 9, 6, 6]])
      description:
        description: "inkrimpen([[ 3,  3,  8,  8,  5,  5,  1,  1],\n           [ 3,\
          \  3,  8,  8,  5,  5,  1,  1],\n           [10, 10, 15, 15,  7,  7, 12,
          12],\n           [10, 10, 15, 15,  7,  7, 12, 12],\n           [13, 13,
          14, 14,  2,  2,  4,  4],\n           [13, 13, 14, 14,  2,  2,  4,  4],\n\
          \           [11, 11,  0,  0,  9,  9,  6,  6],\n           [11, 11,  0, \
          \ 0,  9,  9,  6,  6]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 3
            - 8
            - 5
            - 1
          - - 10
            - 15
            - 7
            - 12
          - - 13
            - 14
            - 2
            - 4
          - - 11
            - 0
            - 9
            - 6
  - testcases:
    - expression: inkrimpen([[10, 10, 2, 2, 7, 7, 1, 1], [10, 10, 2, 2, 7, 7, 1, 1],
        [13, 13, 3, 3, 14, 14, 15, 15], [13, 13, 3, 3, 14, 14, 15, 15], [9, 9, 0,
        0, 12, 12, 5, 5], [9, 9, 0, 0, 12, 12, 5, 5], [8, 8, 11, 11, 4, 4, 6, 6],
        [8, 8, 11, 11, 4, 4, 6, 6]])
      description:
        description: "inkrimpen([[10, 10,  2,  2,  7,  7,  1,  1],\n           [10,
          10,  2,  2,  7,  7,  1,  1],\n           [13, 13,  3,  3, 14, 14, 15, 15],\n\
          \           [13, 13,  3,  3, 14, 14, 15, 15],\n           [ 9,  9,  0, \
          \ 0, 12, 12,  5,  5],\n           [ 9,  9,  0,  0, 12, 12,  5,  5],\n  \
          \         [ 8,  8, 11, 11,  4,  4,  6,  6],\n           [ 8,  8, 11, 11,\
          \  4,  4,  6,  6]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 10
            - 2
            - 7
            - 1
          - - 13
            - 3
            - 14
            - 15
          - - 9
            - 0
            - 12
            - 5
          - - 8
            - 11
            - 4
            - 6
  - testcases:
    - expression: inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0,
        0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0,
        0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0,
          0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0],\n          \
          \ [0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \           [0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0,
          0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0,
          0, 0, 0, 0, 0, 0]])"
        format: python
      return:
      - - 0
  - testcases:
    - expression: inkrimpen([[6, 6, 6, 8, 8, 8, 2, 2, 2], [6, 6, 6, 8, 8, 8, 2, 2,
        2], [6, 6, 6, 8, 8, 8, 2, 2, 2], [7, 7, 7, 4, 4, 4, 5, 5, 5], [7, 7, 7, 4,
        4, 4, 5, 5, 5], [7, 7, 7, 4, 4, 4, 5, 5, 5], [3, 3, 3, 1, 1, 1, 0, 0, 0],
        [3, 3, 3, 1, 1, 1, 0, 0, 0], [3, 3, 3, 1, 1, 1, 0, 0, 0]])
      description:
        description: "inkrimpen([[6, 6, 6, 8, 8, 8, 2, 2, 2],\n           [6, 6, 6,
          8, 8, 8, 2, 2, 2],\n           [6, 6, 6, 8, 8, 8, 2, 2, 2],\n          \
          \ [7, 7, 7, 4, 4, 4, 5, 5, 5],\n           [7, 7, 7, 4, 4, 4, 5, 5, 5],\n\
          \           [7, 7, 7, 4, 4, 4, 5, 5, 5],\n           [3, 3, 3, 1, 1, 1,
          0, 0, 0],\n           [3, 3, 3, 1, 1, 1, 0, 0, 0],\n           [3, 3, 3,
          1, 1, 1, 0, 0, 0]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 6
            - 8
            - 2
          - - 7
            - 4
            - 5
          - - 3
            - 1
            - 0
  - testcases:
    - expression: inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "inkrimpen([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n \
          \          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0]])"
        format: python
      return:
      - - 0
  - testcases:
    - expression: inkrimpen([[3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [3,
        3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 1,
        1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [3,
        3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 1,
        1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [3,
        3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2,
        2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2,
        2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]])
      description:
        description: "inkrimpen([[3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n\
          \           [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n        \
          \   [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3,
          3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3,
          3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
          1, 1, 1, 1, 1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
          1, 1],\n           [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1],\n \
          \          [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n         \
          \  [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n           [2, 2,
          2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n           [2, 2, 2, 2, 2, 2,
          2, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n           [2, 2, 2, 2, 2, 2, 2, 2, 0, 0,
          0, 0, 0, 0, 0, 0],\n           [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0,
          0, 0],\n           [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],\n \
          \          [2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 3
            - 1
          - - 2
            - 0
  - testcases:
    - expression: inkrimpen([[3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0], [3,
        3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0,
        0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0], [3,
        3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0,
        0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0], [3,
        3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1,
        1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1], [2,
        2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1,
        1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1], [2,
        2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1,
        1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1]])
      description:
        description: "inkrimpen([[3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n\
          \           [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n        \
          \   [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n           [3, 3,
          3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n           [3, 3, 3, 3, 3, 3,
          3, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n           [3, 3, 3, 3, 3, 3, 3, 3, 0, 0,
          0, 0, 0, 0, 0, 0],\n           [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0,
          0, 0],\n           [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n \
          \          [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1],\n         \
          \  [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1],\n           [2, 2,
          2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1],\n           [2, 2, 2, 2, 2, 2,
          2, 2, 1, 1, 1, 1, 1, 1, 1, 1],\n           [2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
          1, 1, 1, 1, 1, 1],\n           [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
          1, 1],\n           [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1],\n \
          \          [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 3
            - 0
          - - 2
            - 1
  - testcases:
    - expression: inkrimpen([[3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0],
        [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3,
        2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
        0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0],
        [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0], [8, 8, 8, 8, 8, 8,
        1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5], [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1,
        5, 5, 5, 5, 5, 5], [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5],
        [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5], [8, 8, 8, 8, 8, 8,
        1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5], [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1,
        5, 5, 5, 5, 5, 5], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4],
        [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4], [6, 6, 6, 6, 6, 6,
        7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7,
        4, 4, 4, 4, 4, 4], [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4],
        [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4]])
      description:
        description: "inkrimpen([[3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0,
          0, 0],\n           [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0],\n\
          \           [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0],\n  \
          \         [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0],\n    \
          \       [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0],\n      \
          \     [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0],\n        \
          \   [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5],\n          \
          \ [8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5],\n           [8,
          8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5],\n           [8, 8, 8,
          8, 8, 8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5],\n           [8, 8, 8, 8, 8,
          8, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5],\n           [8, 8, 8, 8, 8, 8, 1,
          1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5],\n           [6, 6, 6, 6, 6, 6, 7, 7, 7,
          7, 7, 7, 4, 4, 4, 4, 4, 4],\n           [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7,
          7, 4, 4, 4, 4, 4, 4],\n           [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4,
          4, 4, 4, 4, 4],\n           [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4,
          4, 4, 4],\n           [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4,
          4],\n           [6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 3
            - 2
            - 0
          - - 8
            - 1
            - 5
          - - 6
            - 7
            - 4
  - testcases:
    - expression: inkrimpen([[7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1],
        [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1], [7, 7, 7, 7, 7, 7,
        4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1], [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4,
        1, 1, 1, 1, 1, 1], [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1],
        [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1], [6, 6, 6, 6, 6, 6,
        2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8], [6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2,
        8, 8, 8, 8, 8, 8], [6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8],
        [6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8], [6, 6, 6, 6, 6, 6,
        2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8], [6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2,
        8, 8, 8, 8, 8, 8], [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5],
        [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5], [3, 3, 3, 3, 3, 3,
        0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5], [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0,
        5, 5, 5, 5, 5, 5], [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5],
        [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5]])
      description:
        description: "inkrimpen([[7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1,
          1, 1],\n           [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1],\n\
          \           [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1],\n  \
          \         [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1],\n    \
          \       [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1],\n      \
          \     [7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1],\n        \
          \   [6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8],\n          \
          \ [6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8],\n           [6,
          6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8],\n           [6, 6, 6,
          6, 6, 6, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8],\n           [6, 6, 6, 6, 6,
          6, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8],\n           [6, 6, 6, 6, 6, 6, 2,
          2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8],\n           [3, 3, 3, 3, 3, 3, 0, 0, 0,
          0, 0, 0, 5, 5, 5, 5, 5, 5],\n           [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0,
          0, 5, 5, 5, 5, 5, 5],\n           [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5,
          5, 5, 5, 5, 5],\n           [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5,
          5, 5, 5],\n           [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5,
          5],\n           [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 7
            - 4
            - 1
          - - 6
            - 2
            - 8
          - - 3
            - 0
            - 5
  - testcases:
    - expression: inkrimpen([[1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7],
        [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7], [1, 1, 1, 1, 1, 1,
        8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7], [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8,
        7, 7, 7, 7, 7, 7], [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7],
        [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7], [0, 0, 0, 0, 0, 0,
        2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5],
        [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0,
        2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
        5, 5, 5, 5, 5, 5], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3],
        [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3], [4, 4, 4, 4, 4, 4,
        6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6,
        3, 3, 3, 3, 3, 3], [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3],
        [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3]])
      description:
        description: "inkrimpen([[1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7,
          7, 7],\n           [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7],\n\
          \           [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7],\n  \
          \         [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7],\n    \
          \       [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7],\n      \
          \     [1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7],\n        \
          \   [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5],\n          \
          \ [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5],\n           [0,
          0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5],\n           [0, 0, 0,
          0, 0, 0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5],\n           [0, 0, 0, 0, 0,
          0, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5],\n           [0, 0, 0, 0, 0, 0, 2,
          2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5],\n           [4, 4, 4, 4, 4, 4, 6, 6, 6,
          6, 6, 6, 3, 3, 3, 3, 3, 3],\n           [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6,
          6, 3, 3, 3, 3, 3, 3],\n           [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3,
          3, 3, 3, 3, 3],\n           [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3,
          3, 3, 3],\n           [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3,
          3],\n           [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 1
            - 8
            - 7
          - - 0
            - 2
            - 5
          - - 4
            - 6
            - 3
  - testcases:
    - expression: inkrimpen([[14, 14, 14, 14, 14, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 7,
        7, 7, 7, 7], [14, 14, 14, 14, 14, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 7, 7, 7, 7,
        7], [14, 14, 14, 14, 14, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7], [14,
        14, 14, 14, 14, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7], [14, 14, 14,
        14, 14, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7], [10, 10, 10, 10, 10,
        13, 13, 13, 13, 13, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15], [10, 10, 10, 10, 10,
        13, 13, 13, 13, 13, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15], [10, 10, 10, 10, 10,
        13, 13, 13, 13, 13, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15], [10, 10, 10, 10, 10,
        13, 13, 13, 13, 13, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15], [10, 10, 10, 10, 10,
        13, 13, 13, 13, 13, 3, 3, 3, 3, 3, 15, 15, 15, 15, 15], [9, 9, 9, 9, 9, 5,
        5, 5, 5, 5, 1, 1, 1, 1, 1, 11, 11, 11, 11, 11], [9, 9, 9, 9, 9, 5, 5, 5, 5,
        5, 1, 1, 1, 1, 1, 11, 11, 11, 11, 11], [9, 9, 9, 9, 9, 5, 5, 5, 5, 5, 1, 1,
        1, 1, 1, 11, 11, 11, 11, 11], [9, 9, 9, 9, 9, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1,
        11, 11, 11, 11, 11], [9, 9, 9, 9, 9, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 11, 11,
        11, 11, 11], [2, 2, 2, 2, 2, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 0, 0, 0, 0,
        0], [2, 2, 2, 2, 2, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0], [2,
        2, 2, 2, 2, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0], [2, 2, 2, 2,
        2, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 12,
        12, 12, 12, 12, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0]])
      description:
        description: "inkrimpen([[14, 14, 14, 14, 14,  6,  6,  6,  6,  6,  4,  4,\
          \  4,  4,  4,  7,  7,  7,  7,  7],\n           [14, 14, 14, 14, 14,  6,\
          \  6,  6,  6,  6,  4,  4,  4,  4,  4,  7,  7,  7,  7,  7],\n           [14,
          14, 14, 14, 14,  6,  6,  6,  6,  6,  4,  4,  4,  4,  4,  7,  7,  7,  7,\
          \  7],\n           [14, 14, 14, 14, 14,  6,  6,  6,  6,  6,  4,  4,  4,\
          \  4,  4,  7,  7,  7,  7,  7],\n           [14, 14, 14, 14, 14,  6,  6,\
          \  6,  6,  6,  4,  4,  4,  4,  4,  7,  7,  7,  7,  7],\n           [10,
          10, 10, 10, 10, 13, 13, 13, 13, 13,  3,  3,  3,  3,  3, 15, 15, 15, 15,
          15],\n           [10, 10, 10, 10, 10, 13, 13, 13, 13, 13,  3,  3,  3,  3,\
          \  3, 15, 15, 15, 15, 15],\n           [10, 10, 10, 10, 10, 13, 13, 13,
          13, 13,  3,  3,  3,  3,  3, 15, 15, 15, 15, 15],\n           [10, 10, 10,
          10, 10, 13, 13, 13, 13, 13,  3,  3,  3,  3,  3, 15, 15, 15, 15, 15],\n \
          \          [10, 10, 10, 10, 10, 13, 13, 13, 13, 13,  3,  3,  3,  3,  3,
          15, 15, 15, 15, 15],\n           [ 9,  9,  9,  9,  9,  5,  5,  5,  5,  5,\
          \  1,  1,  1,  1,  1, 11, 11, 11, 11, 11],\n           [ 9,  9,  9,  9,\
          \  9,  5,  5,  5,  5,  5,  1,  1,  1,  1,  1, 11, 11, 11, 11, 11],\n   \
          \        [ 9,  9,  9,  9,  9,  5,  5,  5,  5,  5,  1,  1,  1,  1,  1, 11,
          11, 11, 11, 11],\n           [ 9,  9,  9,  9,  9,  5,  5,  5,  5,  5,  1,\
          \  1,  1,  1,  1, 11, 11, 11, 11, 11],\n           [ 9,  9,  9,  9,  9,\
          \  5,  5,  5,  5,  5,  1,  1,  1,  1,  1, 11, 11, 11, 11, 11],\n       \
          \    [ 2,  2,  2,  2,  2, 12, 12, 12, 12, 12,  8,  8,  8,  8,  8,  0,  0,\
          \  0,  0,  0],\n           [ 2,  2,  2,  2,  2, 12, 12, 12, 12, 12,  8,\
          \  8,  8,  8,  8,  0,  0,  0,  0,  0],\n           [ 2,  2,  2,  2,  2,
          12, 12, 12, 12, 12,  8,  8,  8,  8,  8,  0,  0,  0,  0,  0],\n         \
          \  [ 2,  2,  2,  2,  2, 12, 12, 12, 12, 12,  8,  8,  8,  8,  8,  0,  0,\
          \  0,  0,  0],\n           [ 2,  2,  2,  2,  2, 12, 12, 12, 12, 12,  8,\
          \  8,  8,  8,  8,  0,  0,  0,  0,  0]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 14
            - 6
            - 4
            - 7
          - - 10
            - 13
            - 3
            - 15
          - - 9
            - 5
            - 1
            - 11
          - - 2
            - 12
            - 8
            - 0
  - testcases:
    - expression: inkrimpen([[2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 13, 13, 13, 13, 13, 6,
        6, 6, 6, 6], [2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 13, 13, 13, 13, 13, 6, 6, 6, 6,
        6], [2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 13, 13, 13, 13, 13, 6, 6, 6, 6, 6], [2,
        2, 2, 2, 2, 3, 3, 3, 3, 3, 13, 13, 13, 13, 13, 6, 6, 6, 6, 6], [2, 2, 2, 2,
        2, 3, 3, 3, 3, 3, 13, 13, 13, 13, 13, 6, 6, 6, 6, 6], [14, 14, 14, 14, 14,
        11, 11, 11, 11, 11, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10], [14, 14, 14, 14, 14,
        11, 11, 11, 11, 11, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10], [14, 14, 14, 14, 14,
        11, 11, 11, 11, 11, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10], [14, 14, 14, 14, 14,
        11, 11, 11, 11, 11, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10], [14, 14, 14, 14, 14,
        11, 11, 11, 11, 11, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10], [5, 5, 5, 5, 5, 4,
        4, 4, 4, 4, 7, 7, 7, 7, 7, 1, 1, 1, 1, 1], [5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
        7, 7, 7, 7, 7, 1, 1, 1, 1, 1], [5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 7, 7, 7, 7,
        7, 1, 1, 1, 1, 1], [5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 1, 1, 1,
        1, 1], [5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 1, 1, 1, 1, 1], [0, 0,
        0, 0, 0, 9, 9, 9, 9, 9, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15], [0, 0, 0,
        0, 0, 9, 9, 9, 9, 9, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15], [0, 0, 0, 0,
        0, 9, 9, 9, 9, 9, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15], [0, 0, 0, 0, 0,
        9, 9, 9, 9, 9, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15], [0, 0, 0, 0, 0, 9,
        9, 9, 9, 9, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15]])
      description:
        description: "inkrimpen([[ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3, 13, 13,
          13, 13, 13,  6,  6,  6,  6,  6],\n           [ 2,  2,  2,  2,  2,  3,  3,\
          \  3,  3,  3, 13, 13, 13, 13, 13,  6,  6,  6,  6,  6],\n           [ 2,\
          \  2,  2,  2,  2,  3,  3,  3,  3,  3, 13, 13, 13, 13, 13,  6,  6,  6,  6,\
          \  6],\n           [ 2,  2,  2,  2,  2,  3,  3,  3,  3,  3, 13, 13, 13,
          13, 13,  6,  6,  6,  6,  6],\n           [ 2,  2,  2,  2,  2,  3,  3,  3,\
          \  3,  3, 13, 13, 13, 13, 13,  6,  6,  6,  6,  6],\n           [14, 14,
          14, 14, 14, 11, 11, 11, 11, 11,  8,  8,  8,  8,  8, 10, 10, 10, 10, 10],\n\
          \           [14, 14, 14, 14, 14, 11, 11, 11, 11, 11,  8,  8,  8,  8,  8,
          10, 10, 10, 10, 10],\n           [14, 14, 14, 14, 14, 11, 11, 11, 11, 11,\
          \  8,  8,  8,  8,  8, 10, 10, 10, 10, 10],\n           [14, 14, 14, 14,
          14, 11, 11, 11, 11, 11,  8,  8,  8,  8,  8, 10, 10, 10, 10, 10],\n     \
          \      [14, 14, 14, 14, 14, 11, 11, 11, 11, 11,  8,  8,  8,  8,  8, 10,
          10, 10, 10, 10],\n           [ 5,  5,  5,  5,  5,  4,  4,  4,  4,  4,  7,\
          \  7,  7,  7,  7,  1,  1,  1,  1,  1],\n           [ 5,  5,  5,  5,  5,\
          \  4,  4,  4,  4,  4,  7,  7,  7,  7,  7,  1,  1,  1,  1,  1],\n       \
          \    [ 5,  5,  5,  5,  5,  4,  4,  4,  4,  4,  7,  7,  7,  7,  7,  1,  1,\
          \  1,  1,  1],\n           [ 5,  5,  5,  5,  5,  4,  4,  4,  4,  4,  7,\
          \  7,  7,  7,  7,  1,  1,  1,  1,  1],\n           [ 5,  5,  5,  5,  5,\
          \  4,  4,  4,  4,  4,  7,  7,  7,  7,  7,  1,  1,  1,  1,  1],\n       \
          \    [ 0,  0,  0,  0,  0,  9,  9,  9,  9,  9, 12, 12, 12, 12, 12, 15, 15,
          15, 15, 15],\n           [ 0,  0,  0,  0,  0,  9,  9,  9,  9,  9, 12, 12,
          12, 12, 12, 15, 15, 15, 15, 15],\n           [ 0,  0,  0,  0,  0,  9,  9,\
          \  9,  9,  9, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15],\n           [ 0,\
          \  0,  0,  0,  0,  9,  9,  9,  9,  9, 12, 12, 12, 12, 12, 15, 15, 15, 15,
          15],\n           [ 0,  0,  0,  0,  0,  9,  9,  9,  9,  9, 12, 12, 12, 12,
          12, 15, 15, 15, 15, 15]])"
        format: python
      return: !oracle
        oracle: "custom_check"
        file: "test.py"
        name: "check_function"
        value:
          - - 2
            - 3
            - 13
            - 6
          - - 14
            - 11
            - 8
            - 10
          - - 5
            - 4
            - 7
            - 1
          - - 0
            - 9
            - 12
            - 15
