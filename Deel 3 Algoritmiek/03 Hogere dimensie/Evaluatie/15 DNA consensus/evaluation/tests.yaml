- tab: Feedback
  contexts:
  - testcases:
    - expression: consensus([['A', 'G', 'C', 'A', 'T'], ['A', 'G', 'A', 'C', 'T'],
        ['G', 'G', 'A', 'A', 'T']])
      description:
        description: "consensus([[\"A\", \"G\", \"C\", \"A\", \"T\"],\n          \
          \ [\"A\", \"G\", \"A\", \"C\", \"T\"],\n           [\"G\", \"G\", \"A\"
          , \"A\", \"T\"]])"
        format: python
      return:
      - A
      - G
      - A
      - A
      - T
  - testcases:
    - expression: consensus([['G', 'G', 'C', 'A', 'T'], ['A', 'G', 'A', 'C', 'T'],
        ['A', 'G', 'A', 'A', 'T']])
      description:
        description: "consensus([[\"G\", \"G\", \"C\", \"A\", \"T\"],\n          \
          \ [\"A\", \"G\", \"A\", \"C\", \"T\"],\n           [\"A\", \"G\", \"A\"
          , \"A\", \"T\"]])"
        format: python
      return:
      - A
      - G
      - A
      - A
      - T
  - testcases:
    - expression: consensus([['A', 'G', 'A', 'A', 'T'], ['A', 'G', 'C', 'C', 'T'],
        ['G', 'G', 'A', 'A', 'T']])
      description:
        description: "consensus([[\"A\", \"G\", \"A\", \"A\", \"T\"],\n          \
          \ [\"A\", \"G\", \"C\", \"C\", \"T\"],\n           [\"G\", \"G\", \"A\"
          , \"A\", \"T\"]])"
        format: python
      return:
      - A
      - G
      - A
      - A
      - T
  - testcases:
    - expression: consensus([['A', 'G', 'C', 'A', 'T'], ['A', 'G', 'A', 'A', 'T'],
        ['G', 'G', 'A', 'C', 'T']])
      description:
        description: "consensus([[\"A\", \"G\", \"C\", \"A\", \"T\"],\n          \
          \ [\"A\", \"G\", \"A\", \"A\", \"T\"],\n           [\"G\", \"G\", \"A\"
          , \"C\", \"T\"]])"
        format: python
      return:
      - A
      - G
      - A
      - A
      - T
  - testcases:
    - expression: consensus([['A', 'G', 'C', 'C', 'G'], ['A', 'G', 'A', 'A', 'G'],
        ['G', 'G', 'C', 'G', 'T'], ['G', 'G', 'A', 'C', 'G'], ['G', 'G', 'A', 'C',
        'T']])
      description:
        description: "consensus([[\"A\", \"G\", \"C\", \"C\", \"G\"],\n          \
          \ [\"A\", \"G\", \"A\", \"A\", \"G\"],\n           [\"G\", \"G\", \"C\"
          , \"G\", \"T\"],\n           [\"G\", \"G\", \"A\", \"C\", \"G\"],\n    \
          \       [\"G\", \"G\", \"A\", \"C\", \"T\"]])"
        format: python
      return:
      - G
      - G
      - A
      - C
      - G
  - testcases:
    - expression: consensus([['C', 'G', 'A', 'C', 'T'], ['C', 'G', 'A', 'C', 'T'],
        ['C', 'A', 'A', 'C', 'A'], ['C', 'C', 'A', 'C', 'G'], ['C', 'G', 'C', 'C',
        'T'], ['C', 'G', 'A', 'C', 'T']])
      description:
        description: "consensus([[\"C\", \"G\", \"A\", \"C\", \"T\"],\n          \
          \ [\"C\", \"G\", \"A\", \"C\", \"T\"],\n           [\"C\", \"A\", \"A\"
          , \"C\", \"A\"],\n           [\"C\", \"C\", \"A\", \"C\", \"G\"],\n    \
          \       [\"C\", \"G\", \"C\", \"C\", \"T\"],\n           [\"C\", \"G\",
          \"A\", \"C\", \"T\"]])"
        format: python
      return:
      - C
      - G
      - A
      - C
      - T
  - testcases:
    - expression: consensus([['C', 'A', 'C', 'A', 'C', 'C', 'G', 'T', 'C'], ['C',
        'A', 'C', 'A', 'A', 'C', 'G', 'T', 'C'], ['C', 'A', 'G', 'A', 'C', 'G', 'C',
        'T', 'C'], ['C', 'A', 'C', 'A', 'C', 'C', 'G', 'T', 'C']])
      description:
        description: "consensus([[\"C\", \"A\", \"C\", \"A\", \"C\", \"C\", \"G\"
          , \"T\", \"C\"],\n           [\"C\", \"A\", \"C\", \"A\", \"A\", \"C\",
          \"G\", \"T\", \"C\"],\n           [\"C\", \"A\", \"G\", \"A\", \"C\", \"\
          G\", \"C\", \"T\", \"C\"],\n           [\"C\", \"A\", \"C\", \"A\", \"C\"\
          , \"C\", \"G\", \"T\", \"C\"]])"
        format: python
      return:
      - C
      - A
      - C
      - A
      - C
      - C
      - G
      - T
      - C
  - testcases:
    - expression: consensus([['C', 'C', 'G', 'G', 'G', 'C', 'A', 'C', 'T', 'C', 'C'],
        ['G', 'C', 'G', 'G', 'C', 'C', 'A', 'C', 'T', 'G', 'C'], ['C', 'C', 'G', 'G',
        'G', 'T', 'A', 'C', 'T', 'C', 'C'], ['C', 'C', 'G', 'G', 'G', 'C', 'A', 'C',
        'C', 'C', 'C'], ['C', 'C', 'G', 'G', 'G', 'C', 'A', 'C', 'T', 'G', 'C']])
      description:
        description: "consensus([[\"C\", \"C\", \"G\", \"G\", \"G\", \"C\", \"A\"
          , \"C\", \"T\", \"C\", \"C\"],\n           [\"G\", \"C\", \"G\", \"G\",
          \"C\", \"C\", \"A\", \"C\", \"T\", \"G\", \"C\"],\n           [\"C\", \"\
          C\", \"G\", \"G\", \"G\", \"T\", \"A\", \"C\", \"T\", \"C\", \"C\"],\n \
          \          [\"C\", \"C\", \"G\", \"G\", \"G\", \"C\", \"A\", \"C\", \"C\"\
          , \"C\", \"C\"],\n           [\"C\", \"C\", \"G\", \"G\", \"G\", \"C\",
          \"A\", \"C\", \"T\", \"G\", \"C\"]])"
        format: python
      return:
      - C
      - C
      - G
      - G
      - G
      - C
      - A
      - C
      - T
      - C
      - C
  - testcases:
    - expression: consensus([['A', 'G', 'A', 'C', 'C'], ['A', 'G', 'A', 'C', 'C'],
        ['A', 'A', 'A', 'C', 'C'], ['A', 'A', 'A', 'C', 'C'], ['A', 'G', 'A', 'C',
        'C'], ['A', 'G', 'T', 'C', 'C'], ['A', 'G', 'A', 'C', 'C'], ['A', 'G', 'A',
        'C', 'C'], ['C', 'G', 'A', 'C', 'C'], ['A', 'T', 'A', 'C', 'C'], ['A', 'G',
        'C', 'G', 'A']])
      description:
        description: "consensus([[\"A\", \"G\", \"A\", \"C\", \"C\"],\n          \
          \ [\"A\", \"G\", \"A\", \"C\", \"C\"],\n           [\"A\", \"A\", \"A\"
          , \"C\", \"C\"],\n           [\"A\", \"A\", \"A\", \"C\", \"C\"],\n    \
          \       [\"A\", \"G\", \"A\", \"C\", \"C\"],\n           [\"A\", \"G\",
          \"T\", \"C\", \"C\"],\n           [\"A\", \"G\", \"A\", \"C\", \"C\"],\n\
          \           [\"A\", \"G\", \"A\", \"C\", \"C\"],\n           [\"C\", \"\
          G\", \"A\", \"C\", \"C\"],\n           [\"A\", \"T\", \"A\", \"C\", \"C\"\
          ],\n           [\"A\", \"G\", \"C\", \"G\", \"A\"]])"
        format: python
      return:
      - A
      - G
      - A
      - C
      - C
  - testcases:
    - expression: consensus([['A', 'C', 'C', 'C', 'C', 'A', 'T', 'T', 'A', 'G', 'G',
        'C', 'G', 'A', 'A', 'A', 'A'], ['A', 'C', 'C', 'C', 'C', 'T', 'T', 'T', 'C',
        'T', 'G', 'C', 'G', 'A', 'A', 'C', 'T'], ['C', 'A', 'A', 'C', 'C', 'A', 'T',
        'T', 'A', 'G', 'G', 'C', 'G', 'A', 'A', 'A', 'A'], ['A', 'C', 'C', 'G', 'C',
        'A', 'T', 'T', 'A', 'C', 'G', 'A', 'G', 'A', 'A', 'A', 'A']])
      description:
        description: "consensus([[\"A\", \"C\", \"C\", \"C\", \"C\", \"A\", \"T\"
          , \"T\", \"A\", \"G\", \"G\", \"C\", \"G\", \"A\", \"A\", \"A\", \"A\"],\n\
          \           [\"A\", \"C\", \"C\", \"C\", \"C\", \"T\", \"T\", \"T\", \"\
          C\", \"T\", \"G\", \"C\", \"G\", \"A\", \"A\", \"C\", \"T\"],\n        \
          \   [\"C\", \"A\", \"A\", \"C\", \"C\", \"A\", \"T\", \"T\", \"A\", \"G\"\
          , \"G\", \"C\", \"G\", \"A\", \"A\", \"A\", \"A\"],\n           [\"A\",
          \"C\", \"C\", \"G\", \"C\", \"A\", \"T\", \"T\", \"A\", \"C\", \"G\", \"\
          A\", \"G\", \"A\", \"A\", \"A\", \"A\"]])"
        format: python
      return:
      - A
      - C
      - C
      - C
      - C
      - A
      - T
      - T
      - A
      - G
      - G
      - C
      - G
      - A
      - A
      - A
      - A
  - testcases:
    - expression: consensus([['C', 'C', 'T', 'G', 'A', 'C', 'T'], ['C', 'A', 'T',
        'G', 'A', 'C', 'T'], ['C', 'C', 'T', 'G', 'A', 'C', 'T'], ['T', 'C', 'T',
        'G', 'A', 'A', 'T'], ['G', 'C', 'T', 'G', 'A', 'C', 'T'], ['C', 'C', 'T',
        'G', 'A', 'C', 'T'], ['C', 'C', 'T', 'A', 'A', 'C', 'T'], ['C', 'G', 'G',
        'A', 'A', 'C', 'T'], ['C', 'C', 'C', 'G', 'A', 'C', 'T'], ['C', 'C', 'T',
        'A', 'A', 'C', 'C']])
      description:
        description: "consensus([[\"C\", \"C\", \"T\", \"G\", \"A\", \"C\", \"T\"\
          ],\n           [\"C\", \"A\", \"T\", \"G\", \"A\", \"C\", \"T\"],\n    \
          \       [\"C\", \"C\", \"T\", \"G\", \"A\", \"C\", \"T\"],\n           [\"\
          T\", \"C\", \"T\", \"G\", \"A\", \"A\", \"T\"],\n           [\"G\", \"C\"\
          , \"T\", \"G\", \"A\", \"C\", \"T\"],\n           [\"C\", \"C\", \"T\",
          \"G\", \"A\", \"C\", \"T\"],\n           [\"C\", \"C\", \"T\", \"A\", \"\
          A\", \"C\", \"T\"],\n           [\"C\", \"G\", \"G\", \"A\", \"A\", \"C\"\
          , \"T\"],\n           [\"C\", \"C\", \"C\", \"G\", \"A\", \"C\", \"T\"],\n\
          \           [\"C\", \"C\", \"T\", \"A\", \"A\", \"C\", \"C\"]])"
        format: python
      return:
      - C
      - C
      - T
      - G
      - A
      - C
      - T
  - testcases:
    - expression: consensus([['G', 'C', 'A', 'T', 'A', 'T', 'G', 'G', 'C', 'T', 'G',
        'T', 'G', 'C', 'A'], ['G', 'C', 'A', 'A', 'A', 'T', 'G', 'G', 'C', 'T', 'G',
        'T', 'G', 'C', 'A'], ['G', 'C', 'T', 'A', 'A', 'T', 'G', 'G', 'G', 'T', 'G',
        'T', 'C', 'C', 'A'], ['G', 'C', 'A', 'A', 'A', 'T', 'G', 'G', 'C', 'T', 'G',
        'T', 'G', 'C', 'A'], ['G', 'C', 'A', 'A', 'A', 'T', 'C', 'G', 'G', 'T', 'G',
        'A', 'G', 'C', 'A']])
      description:
        description: "consensus([[\"G\", \"C\", \"A\", \"T\", \"A\", \"T\", \"G\"
          , \"G\", \"C\", \"T\", \"G\", \"T\", \"G\", \"C\", \"A\"],\n           [\"\
          G\", \"C\", \"A\", \"A\", \"A\", \"T\", \"G\", \"G\", \"C\", \"T\", \"G\"\
          , \"T\", \"G\", \"C\", \"A\"],\n           [\"G\", \"C\", \"T\", \"A\",
          \"A\", \"T\", \"G\", \"G\", \"G\", \"T\", \"G\", \"T\", \"C\", \"C\", \"\
          A\"],\n           [\"G\", \"C\", \"A\", \"A\", \"A\", \"T\", \"G\", \"G\"\
          , \"C\", \"T\", \"G\", \"T\", \"G\", \"C\", \"A\"],\n           [\"G\",
          \"C\", \"A\", \"A\", \"A\", \"T\", \"C\", \"G\", \"G\", \"T\", \"G\", \"\
          A\", \"G\", \"C\", \"A\"]])"
        format: python
      return:
      - G
      - C
      - A
      - A
      - A
      - T
      - G
      - G
      - C
      - T
      - G
      - T
      - G
      - C
      - A
  - testcases:
    - expression: consensus([['G', 'C', 'A', 'T', 'A', 'T', 'G', 'G', 'C', 'T', 'G',
        'T', 'G', 'C', 'A'], ['G', 'C', 'A', 'A', 'A', 'T', 'G', 'G', 'G', 'T', 'G',
        'T', 'G', 'C', 'A'], ['G', 'C', 'C', 'G', 'A', 'T', 'G', 'G', 'C', 'T', 'A',
        'T', 'C', 'C', 'A'], ['G', 'C', 'T', 'C', 'A', 'T', 'G', 'G', 'G', 'T', 'G',
        'T', 'G', 'C', 'A'], ['G', 'C', 'T', 'A', 'A', 'T', 'C', 'G', 'C', 'T', 'A',
        'A', 'G', 'C', 'A'], ['G', 'C', 'T', 'A', 'A', 'T', 'C', 'G', 'G', 'T', 'A',
        'A', 'G', 'C', 'A'], ['G', 'C', 'T', 'A', 'A', 'T', 'C', 'G', 'G', 'T', 'A',
        'A', 'G', 'C', 'A']])
      description:
        description: "consensus([[\"G\", \"C\", \"A\", \"T\", \"A\", \"T\", \"G\"
          , \"G\", \"C\", \"T\", \"G\", \"T\", \"G\", \"C\", \"A\"],\n           [\"\
          G\", \"C\", \"A\", \"A\", \"A\", \"T\", \"G\", \"G\", \"G\", \"T\", \"G\"\
          , \"T\", \"G\", \"C\", \"A\"],\n           [\"G\", \"C\", \"C\", \"G\",
          \"A\", \"T\", \"G\", \"G\", \"C\", \"T\", \"A\", \"T\", \"C\", \"C\", \"\
          A\"],\n           [\"G\", \"C\", \"T\", \"C\", \"A\", \"T\", \"G\", \"G\"\
          , \"G\", \"T\", \"G\", \"T\", \"G\", \"C\", \"A\"],\n           [\"G\",
          \"C\", \"T\", \"A\", \"A\", \"T\", \"C\", \"G\", \"C\", \"T\", \"A\", \"\
          A\", \"G\", \"C\", \"A\"],\n           [\"G\", \"C\", \"T\", \"A\", \"A\"\
          , \"T\", \"C\", \"G\", \"G\", \"T\", \"A\", \"A\", \"G\", \"C\", \"A\"],\n\
          \           [\"G\", \"C\", \"T\", \"A\", \"A\", \"T\", \"C\", \"G\", \"\
          G\", \"T\", \"A\", \"A\", \"G\", \"C\", \"A\"]])"
        format: python
      return:
      - G
      - C
      - T
      - A
      - A
      - T
      - G
      - G
      - G
      - T
      - A
      - T
      - G
      - C
      - A
  - testcases:
    - expression: consensus([['T', 'G', 'G', 'T', 'C', 'A', 'T', 'G', 'T', 'A', 'A',
        'G'], ['G', 'G', 'G', 'T', 'C', 'A', 'T', 'G', 'T', 'C', 'A', 'G'], ['T',
        'G', 'G', 'C', 'C', 'A', 'T', 'G', 'T', 'A', 'A', 'G'], ['T', 'G', 'G', 'T',
        'C', 'A', 'T', 'G', 'T', 'A', 'A', 'G'], ['T', 'G', 'G', 'T', 'C', 'A', 'T',
        'G', 'T', 'A', 'A', 'G'], ['G', 'G', 'G', 'T', 'C', 'A', 'T', 'G', 'T', 'A',
        'T', 'G'], ['T', 'G', 'G', 'T', 'C', 'A', 'T', 'T', 'T', 'T', 'A', 'C'], ['T',
        'G', 'G', 'T', 'C', 'A', 'T', 'G', 'T', 'A', 'T', 'G'], ['T', 'T', 'G', 'A',
        'C', 'A', 'T', 'G', 'T', 'C', 'A', 'G'], ['T', 'G', 'G', 'A', 'G', 'C', 'T',
        'G', 'T', 'A', 'A', 'C']])
      description:
        description: "consensus([[\"T\", \"G\", \"G\", \"T\", \"C\", \"A\", \"T\"
          , \"G\", \"T\", \"A\", \"A\", \"G\"],\n           [\"G\", \"G\", \"G\",
          \"T\", \"C\", \"A\", \"T\", \"G\", \"T\", \"C\", \"A\", \"G\"],\n      \
          \     [\"T\", \"G\", \"G\", \"C\", \"C\", \"A\", \"T\", \"G\", \"T\", \"\
          A\", \"A\", \"G\"],\n           [\"T\", \"G\", \"G\", \"T\", \"C\", \"A\"\
          , \"T\", \"G\", \"T\", \"A\", \"A\", \"G\"],\n           [\"T\", \"G\",
          \"G\", \"T\", \"C\", \"A\", \"T\", \"G\", \"T\", \"A\", \"A\", \"G\"],\n\
          \           [\"G\", \"G\", \"G\", \"T\", \"C\", \"A\", \"T\", \"G\", \"\
          T\", \"A\", \"T\", \"G\"],\n           [\"T\", \"G\", \"G\", \"T\", \"C\"\
          , \"A\", \"T\", \"T\", \"T\", \"T\", \"A\", \"C\"],\n           [\"T\",
          \"G\", \"G\", \"T\", \"C\", \"A\", \"T\", \"G\", \"T\", \"A\", \"T\", \"\
          G\"],\n           [\"T\", \"T\", \"G\", \"A\", \"C\", \"A\", \"T\", \"G\"\
          , \"T\", \"C\", \"A\", \"G\"],\n           [\"T\", \"G\", \"G\", \"A\",
          \"G\", \"C\", \"T\", \"G\", \"T\", \"A\", \"A\", \"C\"]])"
        format: python
      return:
      - T
      - G
      - G
      - T
      - C
      - A
      - T
      - G
      - T
      - A
      - A
      - G
  - testcases:
    - expression: consensus([['G', 'T', 'A', 'A', 'C', 'A', 'A', 'G', 'C', 'G', 'A',
        'T', 'G', 'G', 'T', 'G', 'G', 'A', 'C', 'C'], ['G', 'T', 'A', 'A', 'C', 'A',
        'A', 'G', 'C', 'A', 'A', 'T', 'G', 'G', 'T', 'G', 'G', 'A', 'C', 'C'], ['G',
        'T', 'A', 'A', 'C', 'A', 'A', 'G', 'C', 'G', 'A', 'A', 'G', 'G', 'T', 'G',
        'G', 'A', 'C', 'C'], ['G', 'T', 'A', 'A', 'C', 'A', 'A', 'G', 'C', 'T', 'A',
        'T', 'G', 'G', 'T', 'G', 'T', 'A', 'C', 'T'], ['G', 'T', 'A', 'A', 'C', 'A',
        'A', 'G', 'C', 'G', 'A', 'T', 'G', 'G', 'T', 'G', 'A', 'A', 'C', 'T'], ['G',
        'A', 'A', 'A', 'C', 'A', 'T', 'G', 'C', 'G', 'A', 'T', 'G', 'G', 'T', 'G',
        'G', 'A', 'C', 'C'], ['G', 'T', 'A', 'A', 'C', 'A', 'A', 'G', 'C', 'G', 'A',
        'T', 'G', 'G', 'T', 'G', 'G', 'C', 'C', 'C'], ['G', 'T', 'A', 'A', 'C', 'A',
        'A', 'G', 'C', 'G', 'A', 'T', 'G', 'G', 'G', 'G', 'T', 'A', 'C', 'A'], ['G',
        'T', 'A', 'A', 'G', 'C', 'A', 'G', 'C', 'T', 'A', 'T', 'G', 'T', 'T', 'G',
        'G', 'A', 'C', 'G'], ['G', 'T', 'A', 'A', 'C', 'A', 'A', 'G', 'C', 'G', 'A',
        'T', 'G', 'G', 'T', 'G', 'G', 'A', 'C', 'C'], ['G', 'T', 'A', 'A', 'C', 'A',
        'G', 'G', 'C', 'G', 'A', 'T', 'G', 'T', 'T', 'G', 'G', 'T', 'C', 'G']])
      description:
        description: "consensus([[\"G\", \"T\", \"A\", \"A\", \"C\", \"A\", \"A\"
          , \"G\", \"C\", \"G\", \"A\", \"T\", \"G\", \"G\", \"T\", \"G\", \"G\",
          \"A\", \"C\", \"C\"],\n           [\"G\", \"T\", \"A\", \"A\", \"C\", \"\
          A\", \"A\", \"G\", \"C\", \"A\", \"A\", \"T\", \"G\", \"G\", \"T\", \"G\"\
          , \"G\", \"A\", \"C\", \"C\"],\n           [\"G\", \"T\", \"A\", \"A\",
          \"C\", \"A\", \"A\", \"G\", \"C\", \"G\", \"A\", \"A\", \"G\", \"G\", \"\
          T\", \"G\", \"G\", \"A\", \"C\", \"C\"],\n           [\"G\", \"T\", \"A\"\
          , \"A\", \"C\", \"A\", \"A\", \"G\", \"C\", \"T\", \"A\", \"T\", \"G\",
          \"G\", \"T\", \"G\", \"T\", \"A\", \"C\", \"T\"],\n           [\"G\", \"\
          T\", \"A\", \"A\", \"C\", \"A\", \"A\", \"G\", \"C\", \"G\", \"A\", \"T\"\
          , \"G\", \"G\", \"T\", \"G\", \"A\", \"A\", \"C\", \"T\"],\n           [\"\
          G\", \"A\", \"A\", \"A\", \"C\", \"A\", \"T\", \"G\", \"C\", \"G\", \"A\"\
          , \"T\", \"G\", \"G\", \"T\", \"G\", \"G\", \"A\", \"C\", \"C\"],\n    \
          \       [\"G\", \"T\", \"A\", \"A\", \"C\", \"A\", \"A\", \"G\", \"C\",
          \"G\", \"A\", \"T\", \"G\", \"G\", \"T\", \"G\", \"G\", \"C\", \"C\", \"\
          C\"],\n           [\"G\", \"T\", \"A\", \"A\", \"C\", \"A\", \"A\", \"G\"\
          , \"C\", \"G\", \"A\", \"T\", \"G\", \"G\", \"G\", \"G\", \"T\", \"A\",
          \"C\", \"A\"],\n           [\"G\", \"T\", \"A\", \"A\", \"G\", \"C\", \"\
          A\", \"G\", \"C\", \"T\", \"A\", \"T\", \"G\", \"T\", \"T\", \"G\", \"G\"\
          , \"A\", \"C\", \"G\"],\n           [\"G\", \"T\", \"A\", \"A\", \"C\",
          \"A\", \"A\", \"G\", \"C\", \"G\", \"A\", \"T\", \"G\", \"G\", \"T\", \"\
          G\", \"G\", \"A\", \"C\", \"C\"],\n           [\"G\", \"T\", \"A\", \"A\"\
          , \"C\", \"A\", \"G\", \"G\", \"C\", \"G\", \"A\", \"T\", \"G\", \"T\",
          \"T\", \"G\", \"G\", \"T\", \"C\", \"G\"]])"
        format: python
      return:
      - G
      - T
      - A
      - A
      - C
      - A
      - A
      - G
      - C
      - G
      - A
      - T
      - G
      - G
      - T
      - G
      - G
      - A
      - C
      - C
